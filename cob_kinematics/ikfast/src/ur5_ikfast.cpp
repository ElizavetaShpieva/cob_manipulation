/// autogenerated analytical inverse kinematics code from ikfast program part of OpenRAVE
/// \author Rosen Diankov
///
/// Licensed under the Apache License, Version 2.0 (the "License");
/// you may not use this file except in compliance with the License.
/// You may obtain a copy of the License at
///     http://www.apache.org/licenses/LICENSE-2.0
/// 
/// Unless required by applicable law or agreed to in writing, software
/// distributed under the License is distributed on an "AS IS" BASIS,
/// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
/// See the License for the specific language governing permissions and
/// limitations under the License.
///
/// ikfast version 61 generated on 2012-10-22 11:11:24.704429
/// To compile with gcc:
///     gcc -lstdc++ ik.cpp
/// To compile without any main function as a shared object (might need -llapack):
///     gcc -fPIC -lstdc++ -DIKFAST_NO_MAIN -DIKFAST_CLIBRARY -shared -Wl,-soname,libik.so -o libik.so ik.cpp
#define IKFAST_HAS_LIBRARY
#include "ikfast.h" // found inside share/openrave-X.Y/python/ikfast.h
using namespace ikfast;

// check if the included ikfast version matches what this file was compiled with
#define IKFAST_COMPILE_ASSERT(x) extern int __dummy[(int)x]
IKFAST_COMPILE_ASSERT(IKFAST_VERSION==61);

#include <cmath>
#include <vector>
#include <limits>
#include <algorithm>
#include <complex>

#define IKFAST_STRINGIZE2(s) #s
#define IKFAST_STRINGIZE(s) IKFAST_STRINGIZE2(s)

#ifndef IKFAST_ASSERT
#include <stdexcept>
#include <sstream>
#include <iostream>

#ifdef _MSC_VER
#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __FUNCDNAME__
#endif
#endif

#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __func__
#endif

#define IKFAST_ASSERT(b) { if( !(b) ) { std::stringstream ss; ss << "ikfast exception: " << __FILE__ << ":" << __LINE__ << ": " <<__PRETTY_FUNCTION__ << ": Assertion '" << #b << "' failed"; throw std::runtime_error(ss.str()); } }

#endif

#if defined(_MSC_VER)
#define IKFAST_ALIGNED16(x) __declspec(align(16)) x
#else
#define IKFAST_ALIGNED16(x) x __attribute((aligned(16)))
#endif

#define IK2PI  ((IkReal)6.28318530717959)
#define IKPI  ((IkReal)3.14159265358979)
#define IKPI_2  ((IkReal)1.57079632679490)

#ifdef _MSC_VER
#ifndef isnan
#define isnan _isnan
#endif
#endif // _MSC_VER

// lapack routines
extern "C" {
  void dgetrf_ (const int* m, const int* n, double* a, const int* lda, int* ipiv, int* info);
  void zgetrf_ (const int* m, const int* n, std::complex<double>* a, const int* lda, int* ipiv, int* info);
  void dgetri_(const int* n, const double* a, const int* lda, int* ipiv, double* work, const int* lwork, int* info);
  void dgesv_ (const int* n, const int* nrhs, double* a, const int* lda, int* ipiv, double* b, const int* ldb, int* info);
  void dgetrs_(const char *trans, const int *n, const int *nrhs, double *a, const int *lda, int *ipiv, double *b, const int *ldb, int *info);
  void dgeev_(const char *jobvl, const char *jobvr, const int *n, double *a, const int *lda, double *wr, double *wi,double *vl, const int *ldvl, double *vr, const int *ldvr, double *work, const int *lwork, int *info);
}

using namespace std; // necessary to get std math routines

#ifdef IKFAST_NAMESPACE
namespace IKFAST_NAMESPACE {
#endif

inline float IKabs(float f) { return fabsf(f); }
inline double IKabs(double f) { return fabs(f); }

inline float IKsqr(float f) { return f*f; }
inline double IKsqr(double f) { return f*f; }

inline float IKlog(float f) { return logf(f); }
inline double IKlog(double f) { return log(f); }

// allows asin and acos to exceed 1
#ifndef IKFAST_SINCOS_THRESH
#define IKFAST_SINCOS_THRESH ((IkReal)0.000001)
#endif

// used to check input to atan2 for degenerate cases
#ifndef IKFAST_ATAN2_MAGTHRESH
#define IKFAST_ATAN2_MAGTHRESH ((IkReal)2e-6)
#endif

// minimum distance of separate solutions
#ifndef IKFAST_SOLUTION_THRESH
#define IKFAST_SOLUTION_THRESH ((IkReal)1e-6)
#endif

inline float IKasin(float f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return float(-IKPI_2);
else if( f >= 1 ) return float(IKPI_2);
return asinf(f);
}
inline double IKasin(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return -IKPI_2;
else if( f >= 1 ) return IKPI_2;
return asin(f);
}

// return positive value in [0,y)
inline float IKfmod(float x, float y)
{
    while(x < 0) {
        x += y;
    }
    return fmodf(x,y);
}

// return positive value in [0,y)
inline double IKfmod(double x, double y)
{
    while(x < 0) {
        x += y;
    }
    return fmod(x,y);
}

inline float IKacos(float f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return float(IKPI);
else if( f >= 1 ) return float(0);
return acosf(f);
}
inline double IKacos(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return IKPI;
else if( f >= 1 ) return 0;
return acos(f);
}
inline float IKsin(float f) { return sinf(f); }
inline double IKsin(double f) { return sin(f); }
inline float IKcos(float f) { return cosf(f); }
inline double IKcos(double f) { return cos(f); }
inline float IKtan(float f) { return tanf(f); }
inline double IKtan(double f) { return tan(f); }
inline float IKsqrt(float f) { if( f <= 0.0f ) return 0.0f; return sqrtf(f); }
inline double IKsqrt(double f) { if( f <= 0.0 ) return 0.0; return sqrt(f); }
inline float IKatan2(float fy, float fx) {
    if( isnan(fy) ) {
        IKFAST_ASSERT(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return float(IKPI_2);
    }
    else if( isnan(fx) ) {
        return 0;
    }
    return atan2f(fy,fx);
}
inline double IKatan2(double fy, double fx) {
    if( isnan(fy) ) {
        IKFAST_ASSERT(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return IKPI_2;
    }
    else if( isnan(fx) ) {
        return 0;
    }
    return atan2(fy,fx);
}

inline float IKsign(float f) {
    if( f > 0 ) {
        return float(1);
    }
    else if( f < 0 ) {
        return float(-1);
    }
    return 0;
}

inline double IKsign(double f) {
    if( f > 0 ) {
        return 1.0;
    }
    else if( f < 0 ) {
        return -1.0;
    }
    return 0;
}

/// solves the forward kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API void ComputeFk(const IkReal* j, IkReal* eetrans, IkReal* eerot) {
IkReal x0,x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19,x20,x21,x22,x23,x24,x25,x26,x27,x28,x29,x30,x31,x32,x33,x34,x35,x36,x37,x38,x39,x40,x41,x42,x43,x44,x45,x46;
x0=IKcos(j[0]);
x1=IKcos(j[1]);
x2=IKsin(j[2]);
x3=IKcos(j[2]);
x4=IKsin(j[1]);
x5=IKsin(j[0]);
x6=IKsin(j[4]);
x7=IKcos(j[4]);
x8=IKcos(j[3]);
x9=IKsin(j[3]);
x10=IKsin(j[5]);
x11=IKcos(j[5]);
x12=((IkReal(0.392250000000000))*(x0));
x13=((IkReal(0.0946500000000000))*(x0));
x14=((IkReal(1.00000000000000))*(x5));
x15=((IkReal(0.0946500000000000))*(x5));
x16=((IkReal(1.00000000000000))*(x9));
x17=((IkReal(0.0823000000000000))*(x8));
x18=((IkReal(0.0823000000000000))*(x9));
x19=((IkReal(1.00000000000000))*(x7));
x20=((IkReal(0.392250000000000))*(x5));
x21=((IkReal(1.00000000000000))*(x8));
x22=((IkReal(1.00000000000000))*(x0));
x23=((IkReal(0.425000000000000))*(x1));
x24=((x1)*(x3));
x25=((x2)*(x4));
x26=((x1)*(x2));
x27=((x3)*(x4));
x28=((x0)*(x6));
x29=((x0)*(x7));
x30=((x14)*(x6));
x31=((x22)*(x24));
x32=((x14)*(x24));
x33=((x26)+(x27));
x34=((((IkReal(-1.00000000000000))*(x25)))+(((IkReal(1.00000000000000))*(x24))));
x35=((((IkReal(-1.00000000000000))*(x31)))+(((x0)*(x25))));
x36=((((IkReal(-1.00000000000000))*(x32)))+(((x25)*(x5))));
x37=((x22)*(((x26)+(x27))));
x38=((x14)*(((x26)+(x27))));
x39=((x36)*(x8));
x40=((((IkReal(-1.00000000000000))*(x16)*(x34)))+(((IkReal(-1.00000000000000))*(x21)*(x33))));
x41=((((x9)*(((((IkReal(1.00000000000000))*(x27)))+(((IkReal(1.00000000000000))*(x26)))))))+(((IkReal(-1.00000000000000))*(x34)*(x8))));
x42=((((x35)*(x8)))+(((x37)*(x9))));
x43=((x39)+(((x38)*(x9))));
x44=((x43)*(x7));
x45=((((x16)*(((((IkReal(-1.00000000000000))*(x31)))+(((x22)*(x25)))))))+(((IkReal(-1.00000000000000))*(x21)*(x37))));
x46=((((x16)*(((((IkReal(-1.00000000000000))*(x32)))+(((x14)*(x25)))))))+(((IkReal(-1.00000000000000))*(x21)*(x38))));
eerot[0]=((((x6)*(((((IkReal(-1.00000000000000))*(x16)*(x37)))+(((IkReal(-1.00000000000000))*(x21)*(x35)))))))+(((IkReal(-1.00000000000000))*(x14)*(x7))));
eerot[1]=((((x10)*(x45)))+(((x11)*(((((IkReal(-1.00000000000000))*(x19)*(x42)))+(x30))))));
eerot[2]=((((x11)*(x45)))+(((x10)*(((((IkReal(-1.00000000000000))*(x30)))+(((x42)*(x7))))))));
IkReal x47=((IkReal(1.00000000000000))*(x13));
eetrans[0]=((((x0)*(x23)))+(((IkReal(-1.00000000000000))*(x12)*(x25)))+(((IkReal(-0.0823000000000000))*(x5)*(x7)))+(((IkReal(-0.109150000000000))*(x5)))+(((x8)*(((((IkReal(-1.00000000000000))*(x27)*(x47)))+(((IkReal(-1.00000000000000))*(x26)*(x47)))))))+(((x12)*(x24)))+(((x6)*(((((IkReal(-1.00000000000000))*(x18)*(x37)))+(((IkReal(-1.00000000000000))*(x17)*(x35)))))))+(((x9)*(((((IkReal(-1.00000000000000))*(x24)*(x47)))+(((x13)*(x25))))))));
eerot[3]=((x29)+(((x6)*(((((IkReal(-1.00000000000000))*(x16)*(x38)))+(((IkReal(-1.00000000000000))*(x21)*(x36))))))));
eerot[4]=((((x11)*(((((IkReal(-1.00000000000000))*(x19)*(x43)))+(((IkReal(-1.00000000000000))*(x22)*(x6)))))))+(((x10)*(x46))));
eerot[5]=((((x10)*(((x44)+(x28)))))+(((x11)*(x46))));
IkReal x48=((IkReal(1.00000000000000))*(x15));
eetrans[1]=((((x6)*(((((IkReal(-1.00000000000000))*(x18)*(x38)))+(((IkReal(-1.00000000000000))*(x17)*(x36)))))))+(((x8)*(((((IkReal(-1.00000000000000))*(x27)*(x48)))+(((IkReal(-1.00000000000000))*(x26)*(x48)))))))+(((x9)*(((((IkReal(-1.00000000000000))*(x24)*(x48)))+(((x15)*(x25)))))))+(((IkReal(0.109150000000000))*(x0)))+(((x23)*(x5)))+(((IkReal(0.0823000000000000))*(x29)))+(((x20)*(x24)))+(((IkReal(-1.00000000000000))*(x20)*(x25))));
eerot[6]=((x40)*(x6));
eerot[7]=((((x10)*(x41)))+(((x11)*(x40)*(x7))));
eerot[8]=((((x10)*(x7)*(((((x34)*(x9)))+(((x33)*(x8)))))))+(((x11)*(x41))));
eetrans[2]=((IkReal(0.0891590000000000))+(((x8)*(((((IkReal(-0.0946500000000000))*(x24)))+(((IkReal(0.0946500000000000))*(x25)))))))+(((IkReal(-0.425000000000000))*(x4)))+(((x9)*(((((IkReal(0.0946500000000000))*(x26)))+(((IkReal(0.0946500000000000))*(x27)))))))+(((IkReal(-0.392250000000000))*(x26)))+(((IkReal(-0.392250000000000))*(x27)))+(((x6)*(((((IkReal(-1.00000000000000))*(x18)*(x34)))+(((IkReal(-1.00000000000000))*(x17)*(x33))))))));
}

IKFAST_API int GetNumFreeParameters() { return 0; }
IKFAST_API int* GetFreeParameters() { return NULL; }
IKFAST_API int GetNumJoints() { return 6; }

IKFAST_API int GetIkRealSize() { return sizeof(IkReal); }

IKFAST_API int GetIkType() { return 0x67000001; }

class IKSolver {
public:
IkReal j0,cj0,sj0,htj0,j1,cj1,sj1,htj1,j2,cj2,sj2,htj2,j3,cj3,sj3,htj3,j4,cj4,sj4,htj4,j5,cj5,sj5,htj5,new_r00,r00,rxp0_0,new_r01,r01,rxp0_1,new_r02,r02,rxp0_2,new_r10,r10,rxp1_0,new_r11,r11,rxp1_1,new_r12,r12,rxp1_2,new_r20,r20,rxp2_0,new_r21,r21,rxp2_1,new_r22,r22,rxp2_2,new_px,px,npx,new_py,py,npy,new_pz,pz,npz,pp;
unsigned char _ij0[2], _nj0,_ij1[2], _nj1,_ij2[2], _nj2,_ij3[2], _nj3,_ij4[2], _nj4,_ij5[2], _nj5;

bool ComputeIk(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions) {
j0=numeric_limits<IkReal>::quiet_NaN(); _ij0[0] = -1; _ij0[1] = -1; _nj0 = -1; j1=numeric_limits<IkReal>::quiet_NaN(); _ij1[0] = -1; _ij1[1] = -1; _nj1 = -1; j2=numeric_limits<IkReal>::quiet_NaN(); _ij2[0] = -1; _ij2[1] = -1; _nj2 = -1; j3=numeric_limits<IkReal>::quiet_NaN(); _ij3[0] = -1; _ij3[1] = -1; _nj3 = -1; j4=numeric_limits<IkReal>::quiet_NaN(); _ij4[0] = -1; _ij4[1] = -1; _nj4 = -1; j5=numeric_limits<IkReal>::quiet_NaN(); _ij5[0] = -1; _ij5[1] = -1; _nj5 = -1; 
for(int dummyiter = 0; dummyiter < 1; ++dummyiter) {
    solutions.Clear();
r00 = eerot[0*3+0];
r01 = eerot[0*3+1];
r02 = eerot[0*3+2];
r10 = eerot[1*3+0];
r11 = eerot[1*3+1];
r12 = eerot[1*3+2];
r20 = eerot[2*3+0];
r21 = eerot[2*3+1];
r22 = eerot[2*3+2];
px = eetrans[0]; py = eetrans[1]; pz = eetrans[2];

new_r00=((IkReal(-1.00000000000000))*(r01));
new_r01=((IkReal(-1.00000000000000))*(r02));
new_r02=r00;
new_px=((px)+(((IkReal(-0.0823000000000000))*(r00))));
new_r10=((IkReal(-1.00000000000000))*(r11));
new_r11=((IkReal(-1.00000000000000))*(r12));
new_r12=r10;
new_py=((((IkReal(-0.0823000000000000))*(r10)))+(py));
new_r20=((IkReal(-1.00000000000000))*(r21));
new_r21=((IkReal(-1.00000000000000))*(r22));
new_r22=r20;
new_pz=((IkReal(-0.0891590000000000))+(pz)+(((IkReal(-0.0823000000000000))*(r20))));
r00 = new_r00; r01 = new_r01; r02 = new_r02; r10 = new_r10; r11 = new_r11; r12 = new_r12; r20 = new_r20; r21 = new_r21; r22 = new_r22; px = new_px; py = new_py; pz = new_pz;
pp=(((px)*(px))+((py)*(py))+((pz)*(pz)));
npx=((((px)*(r00)))+(((py)*(r10)))+(((pz)*(r20))));
npy=((((px)*(r01)))+(((py)*(r11)))+(((pz)*(r21))));
npz=((((px)*(r02)))+(((py)*(r12)))+(((pz)*(r22))));
rxp0_0=((((IkReal(-1.00000000000000))*(py)*(r20)))+(((pz)*(r10))));
rxp0_1=((((px)*(r20)))+(((IkReal(-1.00000000000000))*(pz)*(r00))));
rxp0_2=((((IkReal(-1.00000000000000))*(px)*(r10)))+(((py)*(r00))));
rxp1_0=((((IkReal(-1.00000000000000))*(py)*(r21)))+(((pz)*(r11))));
rxp1_1=((((px)*(r21)))+(((IkReal(-1.00000000000000))*(pz)*(r01))));
rxp1_2=((((IkReal(-1.00000000000000))*(px)*(r11)))+(((py)*(r01))));
rxp2_0=((((IkReal(-1.00000000000000))*(py)*(r22)))+(((pz)*(r12))));
rxp2_1=((((px)*(r22)))+(((IkReal(-1.00000000000000))*(pz)*(r02))));
rxp2_2=((((IkReal(-1.00000000000000))*(px)*(r12)))+(((py)*(r02))));
IkReal IKFAST_ALIGNED16(matrixinvcoeffs[64]);
IkReal x49=((IkReal(0.189300000000000))*(py));
IkReal x50=((IkReal(0.0946500000000000))*(r10));
IkReal x51=((IkReal(0.0946500000000000))*(r11));
IkReal x52=((IkReal(2.00000000000000))*(npx));
IkReal x53=((IkReal(2.00000000000000))*(npy));
IkReal x54=((pp)*(r01));
IkReal x55=((pp)*(r00));
IkReal x56=((IkReal(1.00000000000000))*(pp));
IkReal x57=((px)*(x52));
IkReal x58=((py)*(x52));
IkReal x59=((r10)*(x56));
IkReal x60=((px)*(x53));
IkReal x61=((py)*(x53));
IkReal x62=((r11)*(x56));
matrixinvcoeffs[0]=((IkReal(0.271700000000000))*(rxp0_2));
matrixinvcoeffs[1]=((IkReal(-0.271700000000000))*(npx));
matrixinvcoeffs[2]=((IkReal(0.189300000000000))*(npx));
matrixinvcoeffs[3]=IkReal(0);
matrixinvcoeffs[4]=IkReal(0);
matrixinvcoeffs[5]=((IkReal(-0.135850000000000))*(r20));
matrixinvcoeffs[6]=rxp0_2;
matrixinvcoeffs[7]=((((pp)*(r20)))+(((IkReal(0.00949660000000000))*(r20)))+(((IkReal(-1.00000000000000))*(pz)*(x52))));
matrixinvcoeffs[8]=((IkReal(0.271700000000000))*(rxp1_2));
matrixinvcoeffs[9]=((IkReal(-0.271700000000000))*(npy));
matrixinvcoeffs[10]=((IkReal(0.189300000000000))*(npy));
matrixinvcoeffs[11]=IkReal(0);
matrixinvcoeffs[12]=IkReal(0);
matrixinvcoeffs[13]=((IkReal(-0.135850000000000))*(r21));
matrixinvcoeffs[14]=rxp1_2;
matrixinvcoeffs[15]=((((pp)*(r21)))+(((IkReal(0.00949660000000000))*(r21)))+(((IkReal(-1.00000000000000))*(pz)*(x53))));
matrixinvcoeffs[16]=x49;
matrixinvcoeffs[17]=((IkReal(-0.189300000000000))*(px));
matrixinvcoeffs[18]=((IkReal(0.271700000000000))*(px));
matrixinvcoeffs[19]=py;
matrixinvcoeffs[20]=((IkReal(-1.00000000000000))*(px));
matrixinvcoeffs[21]=IkReal(0);
matrixinvcoeffs[22]=IkReal(0);
matrixinvcoeffs[23]=IkReal(0);
matrixinvcoeffs[24]=((((IkReal(-0.00949660000000000))*(r10)))+(x58)+(((IkReal(-1.00000000000000))*(x59))));
matrixinvcoeffs[25]=((((IkReal(-0.0274138450000000))*(r00)))+(x55)+(((IkReal(-1.00000000000000))*(x57))));
matrixinvcoeffs[26]=((IkReal(0.0257164050000000))*(r00));
matrixinvcoeffs[27]=x50;
matrixinvcoeffs[28]=((IkReal(-0.0946500000000000))*(r00));
matrixinvcoeffs[29]=((IkReal(-1.00000000000000))*(rxp0_1));
matrixinvcoeffs[30]=((IkReal(-0.135850000000000))*(r10));
matrixinvcoeffs[31]=((IkReal(0.271700000000000))*(rxp0_1));
matrixinvcoeffs[32]=((((IkReal(-0.00949660000000000))*(r11)))+(x61)+(((IkReal(-1.00000000000000))*(x62))));
matrixinvcoeffs[33]=((((IkReal(-0.0274138450000000))*(r01)))+(x54)+(((IkReal(-1.00000000000000))*(x60))));
matrixinvcoeffs[34]=((IkReal(0.0257164050000000))*(r01));
matrixinvcoeffs[35]=x51;
matrixinvcoeffs[36]=((IkReal(-0.0946500000000000))*(r01));
matrixinvcoeffs[37]=((IkReal(-1.00000000000000))*(rxp1_1));
matrixinvcoeffs[38]=((IkReal(-0.135850000000000))*(r11));
matrixinvcoeffs[39]=((IkReal(0.271700000000000))*(rxp1_1));
matrixinvcoeffs[40]=((IkReal(0.189300000000000))*(px));
matrixinvcoeffs[41]=x49;
matrixinvcoeffs[42]=((IkReal(-0.271700000000000))*(py));
matrixinvcoeffs[43]=px;
matrixinvcoeffs[44]=py;
matrixinvcoeffs[45]=IkReal(0);
matrixinvcoeffs[46]=IkReal(0);
matrixinvcoeffs[47]=IkReal(0);
matrixinvcoeffs[48]=((((IkReal(-0.00949660000000000))*(r00)))+(x57)+(((IkReal(-1.00000000000000))*(x55))));
matrixinvcoeffs[49]=((x58)+(((IkReal(0.0274138450000000))*(r10)))+(((IkReal(-1.00000000000000))*(x59))));
matrixinvcoeffs[50]=((IkReal(-0.0257164050000000))*(r10));
matrixinvcoeffs[51]=((IkReal(0.0946500000000000))*(r00));
matrixinvcoeffs[52]=x50;
matrixinvcoeffs[53]=((IkReal(-1.00000000000000))*(rxp0_0));
matrixinvcoeffs[54]=((IkReal(-0.135850000000000))*(r00));
matrixinvcoeffs[55]=((IkReal(0.271700000000000))*(rxp0_0));
matrixinvcoeffs[56]=((((IkReal(-0.00949660000000000))*(r01)))+(x60)+(((IkReal(-1.00000000000000))*(x54))));
matrixinvcoeffs[57]=((x61)+(((IkReal(0.0274138450000000))*(r11)))+(((IkReal(-1.00000000000000))*(x62))));
matrixinvcoeffs[58]=((IkReal(-0.0257164050000000))*(r11));
matrixinvcoeffs[59]=((IkReal(0.0946500000000000))*(r01));
matrixinvcoeffs[60]=x51;
matrixinvcoeffs[61]=((IkReal(-1.00000000000000))*(rxp1_0));
matrixinvcoeffs[62]=((IkReal(-0.135850000000000))*(r01));
matrixinvcoeffs[63]=((IkReal(0.271700000000000))*(rxp1_0));
if( !matrixinverse<8>(matrixinvcoeffs) ) {
continue;
}
IkReal gconst0_0=matrixinvcoeffs[0], gconst0_1=matrixinvcoeffs[8], gconst0_2=matrixinvcoeffs[16], gconst0_3=matrixinvcoeffs[24], gconst0_4=matrixinvcoeffs[32], gconst0_5=matrixinvcoeffs[40], gconst0_6=matrixinvcoeffs[48], gconst0_7=matrixinvcoeffs[56], gconst1_0=matrixinvcoeffs[1], gconst1_1=matrixinvcoeffs[9], gconst1_2=matrixinvcoeffs[17], gconst1_3=matrixinvcoeffs[25], gconst1_4=matrixinvcoeffs[33], gconst1_5=matrixinvcoeffs[41], gconst1_6=matrixinvcoeffs[49], gconst1_7=matrixinvcoeffs[57], gconst2_0=matrixinvcoeffs[2], gconst2_1=matrixinvcoeffs[10], gconst2_2=matrixinvcoeffs[18], gconst2_3=matrixinvcoeffs[26], gconst2_4=matrixinvcoeffs[34], gconst2_5=matrixinvcoeffs[42], gconst2_6=matrixinvcoeffs[50], gconst2_7=matrixinvcoeffs[58], gconst3_0=matrixinvcoeffs[3], gconst3_1=matrixinvcoeffs[11], gconst3_2=matrixinvcoeffs[19], gconst3_3=matrixinvcoeffs[27], gconst3_4=matrixinvcoeffs[35], gconst3_5=matrixinvcoeffs[43], gconst3_6=matrixinvcoeffs[51], gconst3_7=matrixinvcoeffs[59], gconst4_0=matrixinvcoeffs[4], gconst4_1=matrixinvcoeffs[12], gconst4_2=matrixinvcoeffs[20], gconst4_3=matrixinvcoeffs[28], gconst4_4=matrixinvcoeffs[36], gconst4_5=matrixinvcoeffs[44], gconst4_6=matrixinvcoeffs[52], gconst4_7=matrixinvcoeffs[60], gconst5_0=matrixinvcoeffs[5], gconst5_1=matrixinvcoeffs[13], gconst5_2=matrixinvcoeffs[21], gconst5_3=matrixinvcoeffs[29], gconst5_4=matrixinvcoeffs[37], gconst5_5=matrixinvcoeffs[45], gconst5_6=matrixinvcoeffs[53], gconst5_7=matrixinvcoeffs[61], gconst6_0=matrixinvcoeffs[6], gconst6_1=matrixinvcoeffs[14], gconst6_2=matrixinvcoeffs[22], gconst6_3=matrixinvcoeffs[30], gconst6_4=matrixinvcoeffs[38], gconst6_5=matrixinvcoeffs[46], gconst6_6=matrixinvcoeffs[54], gconst6_7=matrixinvcoeffs[62], gconst7_0=matrixinvcoeffs[7], gconst7_1=matrixinvcoeffs[15], gconst7_2=matrixinvcoeffs[23], gconst7_3=matrixinvcoeffs[31], gconst7_4=matrixinvcoeffs[39], gconst7_5=matrixinvcoeffs[47], gconst7_6=matrixinvcoeffs[55], gconst7_7=matrixinvcoeffs[63];
IkReal op[162], zeror[48];
int numroots;
IkReal x63=((gconst7_7)*(r01));
IkReal x64=((gconst1_3)*(r21));
IkReal x65=((gconst0_1)*(npx));
IkReal x66=((gconst1_3)*(npy));
IkReal x67=((IkReal(0.0521040950000000))*(gconst4_0));
IkReal x68=((IkReal(0.109150000000000))*(gconst1_4));
IkReal x69=((gconst3_1)*(rxp0_0));
IkReal x70=((IkReal(0.0257164050000000))*(r01));
IkReal x71=((gconst4_7)*(pz));
IkReal x72=((gconst3_0)*(r00));
IkReal x73=((IkReal(0.109911310000000))*(gconst4_7));
IkReal x74=((gconst6_1)*(r10));
IkReal x75=((gconst0_3)*(r20));
IkReal x76=((IkReal(0.0327500000000000))*(gconst7_3));
IkReal x77=((gconst4_2)*(r01));
IkReal x78=((gconst4_1)*(r01));
IkReal x79=((gconst7_7)*(r11));
IkReal x80=((IkReal(0.135850000000000))*(pp));
IkReal x81=((gconst1_7)*(r21));
IkReal x82=((gconst4_1)*(rxp1_0));
IkReal x83=((IkReal(0.00178545250000000))*(r10));
IkReal x84=((gconst0_1)*(r20));
IkReal x85=((gconst3_2)*(r00));
IkReal x86=((gconst3_7)*(r00));
IkReal x87=((gconst0_5)*(npx));
IkReal x88=((IkReal(1.33436934500000))*(gconst7_0));
IkReal x89=((gconst7_0)*(r11));
IkReal x90=((IkReal(0.109150000000000))*(gconst3_4));
IkReal x91=((IkReal(0.668610452500000))*(gconst3_7));
IkReal x92=((gconst4_3)*(r01));
IkReal x93=((IkReal(0.189300000000000))*(pz));
IkReal x94=((gconst0_7)*(npx));
IkReal x95=((gconst6_2)*(r10));
IkReal x96=((gconst1_2)*(npy));
IkReal x97=((IkReal(0.0257164050000000))*(pz));
IkReal x98=((IkReal(0.668610452500000))*(gconst6_7));
IkReal x99=((IkReal(0.109150000000000))*(gconst7_4));
IkReal x100=((IkReal(0.0534000000000000))*(gconst0_6));
IkReal x101=((IkReal(0.106800000000000))*(gconst4_5));
IkReal x102=((gconst0_2)*(r20));
IkReal x103=((gconst1_1)*(npy));
IkReal x104=((gconst0_0)*(r20));
IkReal x105=((gconst6_0)*(r10));
IkReal x106=((gconst0_3)*(npx));
IkReal x107=((gconst3_0)*(rxp0_0));
IkReal x108=((IkReal(0.0534000000000000))*(gconst1_6));
IkReal x109=((gconst4_7)*(r01));
IkReal x110=((gconst3_1)*(r00));
IkReal x111=((gconst7_5)*(rxp1_1));
IkReal x112=((gconst6_2)*(rxp0_1));
IkReal x113=((gconst6_3)*(r10));
IkReal x114=((IkReal(0.817250000000000))*(r11));
IkReal x115=((gconst1_0)*(r21));
IkReal x116=((IkReal(0.0267000000000000))*(gconst3_5));
IkReal x117=((IkReal(0.641196607500000))*(gconst7_2));
IkReal x118=((IkReal(0.0327500000000000))*(r00));
IkReal x119=((gconst0_0)*(npx));
IkReal x120=((gconst0_7)*(r20));
IkReal x121=((IkReal(0.0534000000000000))*(gconst3_6));
IkReal x122=((IkReal(1.33436934500000))*(gconst6_0));
IkReal x123=((gconst6_7)*(r10));
IkReal x124=((gconst3_2)*(rxp0_0));
IkReal x125=((IkReal(0.668610452500000))*(gconst4_7));
IkReal x126=((gconst0_4)*(r20));
IkReal x127=((IkReal(0.0256283925000000))*(r11));
IkReal x128=((gconst7_1)*(r11));
IkReal x129=((IkReal(0.106800000000000))*(gconst6_5));
IkReal x130=((gconst6_5)*(r10));
IkReal x131=((gconst3_1)*(r10));
IkReal x132=((gconst6_1)*(r00));
IkReal x133=((gconst6_0)*(r00));
IkReal x134=((IkReal(0.817250000000000))*(gconst7_3));
IkReal x135=((gconst7_5)*(r01));
IkReal x136=((gconst6_2)*(r00));
IkReal x137=((IkReal(0.000719345000000000))*(gconst4_0));
IkReal x138=((IkReal(0.109150000000000))*(gconst4_4));
IkReal x139=((IkReal(1.00000000000000))*(pp));
IkReal x140=((gconst7_2)*(rxp1_1));
IkReal x141=((gconst1_1)*(r21));
IkReal x142=((gconst1_0)*(npy));
IkReal x143=((gconst6_1)*(rxp0_1));
IkReal x144=((gconst3_3)*(r00));
IkReal x145=((IkReal(0.817250000000000))*(gconst3_3));
IkReal x146=((IkReal(0.0534000000000000))*(gconst7_6));
IkReal x147=((gconst6_7)*(rxp0_1));
IkReal x148=((gconst7_2)*(r11));
IkReal x149=((gconst7_3)*(r11));
IkReal x150=((gconst3_7)*(rxp0_0));
IkReal x151=((gconst7_7)*(rxp1_1));
IkReal x152=((gconst3_7)*(r10));
IkReal x153=((IkReal(0.0534000000000000))*(gconst4_6));
IkReal x154=((gconst0_2)*(npx));
IkReal x155=((gconst0_5)*(r20));
IkReal x156=((gconst4_5)*(r01));
IkReal x157=((gconst4_2)*(rxp1_0));
IkReal x158=((gconst7_5)*(r11));
IkReal x159=((IkReal(0.0946500000000000))*(pp));
IkReal x160=((gconst4_2)*(r11));
IkReal x161=((gconst1_2)*(r21));
IkReal x162=((gconst7_1)*(r01));
IkReal x163=((gconst6_4)*(r10));
IkReal x164=((gconst7_1)*(rxp1_1));
IkReal x165=((gconst4_1)*(r11));
IkReal x166=((gconst4_0)*(r01));
IkReal x167=((gconst1_5)*(r21));
IkReal x168=((gconst6_0)*(rxp0_1));
IkReal x169=((gconst1_5)*(npy));
IkReal x170=((gconst3_5)*(r00));
IkReal x171=((IkReal(1.33436934500000))*(gconst4_0));
IkReal x172=((IkReal(0.106800000000000))*(gconst3_5));
IkReal x173=((IkReal(0.00178545250000000))*(gconst4_7));
IkReal x174=((gconst6_6)*(r10));
IkReal x175=((gconst7_2)*(r01));
IkReal x176=((gconst1_7)*(npy));
IkReal x177=((gconst4_3)*(rxp1_0));
IkReal x178=((gconst7_0)*(r01));
IkReal x179=((gconst7_0)*(rxp1_1));
IkReal x180=((IkReal(0.817250000000000))*(gconst6_3));
IkReal x181=((gconst3_2)*(r10));
IkReal x182=((IkReal(0.0327500000000000))*(gconst3_3));
IkReal x183=((IkReal(0.0179172450000000))*(pz));
IkReal x184=((gconst6_7)*(r00));
IkReal x185=((gconst3_0)*(r10));
IkReal x186=((IkReal(0.0534000000000000))*(gconst6_6));
IkReal x187=((IkReal(0.0267000000000000))*(gconst6_5));
IkReal x188=((IkReal(0.0267000000000000))*(gconst4_5));
IkReal x189=((IkReal(0.109150000000000))*(gconst6_4));
IkReal x190=((IkReal(0.00362719500000000))*(x156));
IkReal x191=((IkReal(0.0148280275000000))*(gconst4_4)*(r01));
IkReal x192=((IkReal(0.0257164050000000))*(x65));
IkReal x193=((IkReal(0.00349357361925000))*(x78));
IkReal x194=((IkReal(0.817250000000000))*(x66));
IkReal x195=((IkReal(0.0267000000000000))*(x87));
IkReal x196=((IkReal(0.0267000000000000))*(x169));
IkReal x197=((IkReal(0.00362719500000000))*(x170));
IkReal x198=((IkReal(0.641196607500000))*(x96));
IkReal x199=((IkReal(0.0871065591288750))*(x85));
IkReal x200=((IkReal(0.0257164050000000))*(x103));
IkReal x201=((IkReal(0.111023412500000))*(x144));
IkReal x202=((IkReal(0.0871065591288750))*(x77));
IkReal x203=((IkReal(0.0148280275000000))*(gconst3_4)*(r00));
IkReal x204=((IkReal(0.641196607500000))*(x154));
IkReal x205=((IkReal(0.00349357361925000))*(x110));
IkReal x206=((IkReal(0.0908307299721250))*(x123));
IkReal x207=((IkReal(0.111023412500000))*(x92));
IkReal x208=((IkReal(0.817250000000000))*(x106));
IkReal x209=((npy)*(x68));
IkReal x210=((IkReal(0.109150000000000))*(gconst0_4)*(npx));
IkReal x211=((IkReal(0.0908307299721250))*(x79));
IkReal x212=((IkReal(0.0148280275000000))*(x163));
IkReal x213=((IkReal(0.0871065591288750))*(x148));
IkReal x214=((IkReal(0.111023412500000))*(x113));
IkReal x215=((IkReal(0.00362719500000000))*(x130));
IkReal x216=((IkReal(0.668610452500000))*(x94));
IkReal x217=((IkReal(0.0148280275000000))*(gconst7_4)*(r11));
IkReal x218=((IkReal(0.111023412500000))*(x149));
IkReal x219=((IkReal(0.0871065591288750))*(x95));
IkReal x220=((IkReal(0.00349357361925000))*(x128));
IkReal x221=((IkReal(0.00362719500000000))*(x158));
IkReal x222=((IkReal(0.0908307299721250))*(x86));
IkReal x223=((IkReal(0.00349357361925000))*(x74));
IkReal x224=((IkReal(0.0908307299721250))*(x109));
IkReal x225=((IkReal(0.668610452500000))*(x176));
IkReal x226=((IkReal(0.00725439000000000))*(gconst7_6)*(r11));
IkReal x227=((IkReal(0.00725439000000000))*(x174));
IkReal x228=((IkReal(0.00725439000000000))*(gconst3_6)*(r00));
IkReal x229=((IkReal(0.00725439000000000))*(gconst4_6)*(r01));
IkReal x230=((npx)*(x100));
IkReal x231=((npy)*(x108));
IkReal x232=((IkReal(0.00616623150000000))*(x110));
IkReal x233=((IkReal(0.0453900000000000))*(x65));
IkReal x234=((IkReal(0.00707834130575000))*(x89));
IkReal x235=((IkReal(0.00616623150000000))*(x78));
IkReal x236=((IkReal(0.00707834130575000))*(x105));
IkReal x237=((IkReal(0.0453900000000000))*(x103));
IkReal x238=((IkReal(0.0521040950000000))*(x142));
IkReal x239=((IkReal(0.00707834130575000))*(x166));
IkReal x240=((IkReal(0.00707834130575000))*(x72));
IkReal x241=((IkReal(0.00616623150000000))*(x74));
IkReal x242=((IkReal(0.0521040950000000))*(x119));
IkReal x243=((IkReal(0.00616623150000000))*(x128));
IkReal x244=((IkReal(0.00444908750000000))*(x92));
IkReal x245=((IkReal(0.00348161712112500))*(x148));
IkReal x246=((IkReal(0.00444908750000000))*(x144));
IkReal x247=((IkReal(0.0327500000000000))*(x106));
IkReal x248=((IkReal(0.000242553722125000))*(x86));
IkReal x249=((IkReal(0.000242553722125000))*(x109));
IkReal x250=((IkReal(0.00348161712112500))*(x95));
IkReal x251=((IkReal(0.00178545250000000))*(x176));
IkReal x252=((IkReal(0.00178545250000000))*(x94));
IkReal x253=((IkReal(0.0327500000000000))*(x66));
IkReal x254=((IkReal(0.000242553722125000))*(x79));
IkReal x255=((IkReal(0.00348161712112500))*(x77));
IkReal x256=((IkReal(0.0256283925000000))*(x154));
IkReal x257=((IkReal(0.000242553722125000))*(x123));
IkReal x258=((IkReal(0.0256283925000000))*(x96));
IkReal x259=((IkReal(0.00444908750000000))*(x149));
IkReal x260=((IkReal(0.00444908750000000))*(x113));
IkReal x261=((IkReal(0.00348161712112500))*(x85));
IkReal x262=((r00)*(x180));
IkReal x263=((r00)*(x189));
IkReal x264=((r00)*(x187));
IkReal x265=((r01)*(x134));
IkReal x266=((r11)*(x138));
IkReal x267=((r10)*(x116));
IkReal x268=((IkReal(0.0257164050000000))*(x165));
IkReal x269=((IkReal(0.0257164050000000))*(x131));
IkReal x270=((IkReal(0.641196607500000))*(x181));
IkReal x271=((gconst4_3)*(x114));
IkReal x272=((IkReal(0.641196607500000))*(x160));
IkReal x273=((IkReal(0.0257164050000000))*(x132));
IkReal x274=((r10)*(x145));
IkReal x275=((r11)*(x188));
IkReal x276=((gconst7_1)*(x70));
IkReal x277=((r01)*(x99));
IkReal x278=((IkReal(0.641196607500000))*(x136));
IkReal x279=((r01)*(x117));
IkReal x280=((r10)*(x90));
IkReal x281=((IkReal(0.0267000000000000))*(x135));
IkReal x282=((r00)*(x98));
IkReal x283=((IkReal(0.668610452500000))*(x63));
IkReal x284=((r11)*(x125));
IkReal x285=((r10)*(x91));
IkReal x286=((r11)*(x153));
IkReal x287=((r01)*(x146));
IkReal x288=((r00)*(x186));
IkReal x289=((r10)*(x121));
IkReal x290=((IkReal(0.0453900000000000))*(x165));
IkReal x291=((IkReal(0.0453900000000000))*(x162));
IkReal x292=((IkReal(0.0453900000000000))*(x132));
IkReal x293=((IkReal(0.0453900000000000))*(x131));
IkReal x294=((IkReal(0.0521040950000000))*(x133));
IkReal x295=((IkReal(0.0521040950000000))*(x185));
IkReal x296=((IkReal(0.0521040950000000))*(x178));
IkReal x297=((r11)*(x67));
IkReal x298=((IkReal(0.0327500000000000))*(gconst4_3)*(r11));
IkReal x299=((IkReal(0.00178545250000000))*(x184));
IkReal x300=((IkReal(0.00178545250000000))*(x63));
IkReal x301=((gconst3_7)*(x83));
IkReal x302=((r11)*(x173));
IkReal x303=((r01)*(x76));
IkReal x304=((gconst6_3)*(x118));
IkReal x305=((r10)*(x182));
IkReal x306=((IkReal(0.0256283925000000))*(x175));
IkReal x307=((IkReal(0.0256283925000000))*(x181));
IkReal x308=((gconst4_2)*(x127));
IkReal x309=((IkReal(0.0256283925000000))*(x136));
IkReal x310=((IkReal(0.0267000000000000))*(x130));
IkReal x311=((IkReal(0.668610452500000))*(x109));
IkReal x312=((gconst7_3)*(x114));
IkReal x313=((IkReal(0.817250000000000))*(x113));
IkReal x314=((pp)*(x77));
IkReal x315=((pp)*(x85));
IkReal x316=((IkReal(0.0257164050000000))*(x74));
IkReal x317=((IkReal(0.668610452500000))*(x86));
IkReal x318=((r11)*(x99));
IkReal x319=((r11)*(x117));
IkReal x320=((IkReal(0.0257164050000000))*(x128));
IkReal x321=((IkReal(0.641196607500000))*(x95));
IkReal x322=((IkReal(0.0267000000000000))*(x158));
IkReal x323=((IkReal(0.109150000000000))*(x163));
IkReal x324=((IkReal(0.668610452500000))*(x79));
IkReal x325=((r10)*(x98));
IkReal x326=((gconst4_1)*(x70));
IkReal x327=((r00)*(x116));
IkReal x328=((r01)*(x138));
IkReal x329=((IkReal(0.817250000000000))*(x92));
IkReal x330=((IkReal(0.641196607500000))*(x77));
IkReal x331=((IkReal(0.817250000000000))*(x144));
IkReal x332=((IkReal(0.0257164050000000))*(x110));
IkReal x333=((IkReal(0.641196607500000))*(x85));
IkReal x334=((IkReal(0.0267000000000000))*(x156));
IkReal x335=((r00)*(x90));
IkReal x336=((r01)*(x153));
IkReal x337=((r00)*(x121));
IkReal x338=((IkReal(0.0534000000000000))*(x174));
IkReal x339=((r11)*(x146));
IkReal x340=((IkReal(0.0256283925000000))*(x85));
IkReal x341=((gconst6_7)*(x83));
IkReal x342=((IkReal(0.00178545250000000))*(x79));
IkReal x343=((r11)*(x76));
IkReal x344=((IkReal(0.0327500000000000))*(x113));
IkReal x345=((IkReal(0.0256283925000000))*(x77));
IkReal x346=((IkReal(0.0327500000000000))*(x92));
IkReal x347=((gconst7_2)*(x127));
IkReal x348=((IkReal(0.00178545250000000))*(x109));
IkReal x349=((IkReal(0.00178545250000000))*(x86));
IkReal x350=((IkReal(0.0256283925000000))*(x95));
IkReal x351=((gconst3_3)*(x118));
IkReal x352=((IkReal(0.668610452500000))*(x120));
IkReal x353=((pp)*(x102));
IkReal x354=((pp)*(x161));
IkReal x355=((IkReal(0.668610452500000))*(x81));
IkReal x356=((IkReal(0.0267000000000000))*(x155));
IkReal x357=((IkReal(0.817250000000000))*(x64));
IkReal x358=((IkReal(0.109150000000000))*(x126));
IkReal x359=((IkReal(0.0257164050000000))*(x141));
IkReal x360=((IkReal(0.817250000000000))*(x75));
IkReal x361=((IkReal(0.641196607500000))*(x161));
IkReal x362=((IkReal(0.641196607500000))*(x102));
IkReal x363=((IkReal(0.0257164050000000))*(x84));
IkReal x364=((r21)*(x68));
IkReal x365=((IkReal(0.0267000000000000))*(x167));
IkReal x366=((r20)*(x100));
IkReal x367=((r21)*(x108));
IkReal x368=((IkReal(0.0256283925000000))*(x102));
IkReal x369=((IkReal(0.0256283925000000))*(x161));
IkReal x370=((IkReal(0.00178545250000000))*(x120));
IkReal x371=((IkReal(0.0327500000000000))*(x75));
IkReal x372=((IkReal(0.0327500000000000))*(x64));
IkReal x373=((IkReal(0.00178545250000000))*(x81));
IkReal x374=((rxp0_1)*(x189));
IkReal x375=((rxp1_0)*(x125));
IkReal x376=((rxp1_1)*(x117));
IkReal x377=((rxp0_1)*(x187));
IkReal x378=((rxp0_1)*(x180));
IkReal x379=((pp)*(x157));
IkReal x380=((IkReal(0.0257164050000000))*(x143));
IkReal x381=((IkReal(0.0267000000000000))*(x111));
IkReal x382=((rxp1_1)*(x134));
IkReal x383=((rxp1_1)*(x99));
IkReal x384=((pp)*(x124));
IkReal x385=((rxp0_0)*(x91));
IkReal x386=((IkReal(0.0257164050000000))*(x164));
IkReal x387=((IkReal(0.641196607500000))*(x112));
IkReal x388=((rxp0_0)*(x90));
IkReal x389=((rxp1_0)*(x188));
IkReal x390=((IkReal(0.641196607500000))*(x124));
IkReal x391=((rxp0_0)*(x116));
IkReal x392=((IkReal(0.668610452500000))*(x151));
IkReal x393=((IkReal(0.0257164050000000))*(x82));
IkReal x394=((rxp0_0)*(x145));
IkReal x395=((IkReal(0.0257164050000000))*(x69));
IkReal x396=((rxp1_0)*(x138));
IkReal x397=((IkReal(0.817250000000000))*(x177));
IkReal x398=((rxp0_1)*(x98));
IkReal x399=((IkReal(0.641196607500000))*(x157));
IkReal x400=((rxp0_0)*(x121));
IkReal x401=((rxp1_0)*(x153));
IkReal x402=((rxp1_1)*(x146));
IkReal x403=((rxp0_1)*(x186));
IkReal x404=((IkReal(0.0256283925000000))*(x157));
IkReal x405=((IkReal(0.00178545250000000))*(x151));
IkReal x406=((rxp1_1)*(x76));
IkReal x407=((IkReal(0.0327500000000000))*(gconst6_3)*(rxp0_1));
IkReal x408=((IkReal(0.0256283925000000))*(x124));
IkReal x409=((IkReal(0.00178545250000000))*(x147));
IkReal x410=((rxp0_0)*(x182));
IkReal x411=((rxp1_0)*(x173));
IkReal x412=((IkReal(0.0256283925000000))*(x112));
IkReal x413=((IkReal(0.00178545250000000))*(x150));
IkReal x414=((IkReal(0.0327500000000000))*(x177));
IkReal x415=((IkReal(0.0256283925000000))*(x140));
IkReal x416=((IkReal(0.00243405773325000))*(x141));
IkReal x417=((IkReal(0.00252715500000000))*(x167));
IkReal x418=((IkReal(0.0103310475000000))*(gconst1_4)*(r21));
IkReal x419=((IkReal(0.0606892588998750))*(x161));
IkReal x420=((IkReal(0.00243405773325000))*(x84));
IkReal x421=((IkReal(0.0773527125000000))*(x64));
IkReal x422=((IkReal(0.0606892588998750))*(x102));
IkReal x423=((IkReal(0.0103310475000000))*(x126));
IkReal x424=((IkReal(0.00252715500000000))*(x155));
IkReal x425=((IkReal(0.0773527125000000))*(x75));
IkReal x426=((IkReal(0.0632839793291250))*(x81));
IkReal x427=((IkReal(0.0632839793291250))*(x120));
IkReal x428=((IkReal(0.00505431000000000))*(gconst0_6)*(r20));
IkReal x429=((IkReal(0.00505431000000000))*(gconst1_6)*(r21));
IkReal x430=((IkReal(0.00429616350000000))*(x84));
IkReal x431=((IkReal(0.00429616350000000))*(x141));
IkReal x432=((IkReal(0.00493165259175000))*(x115));
IkReal x433=((IkReal(0.00493165259175000))*(x104));
IkReal x434=((r00)*(x93));
IkReal x435=((x93)*(x94));
IkReal x436=((x70)*(x71));
IkReal x437=((x86)*(x97));
IkReal x438=((x176)*(x93));
IkReal x439=((x80)*(x95));
IkReal x440=((x148)*(x80));
IkReal x441=((x79)*(x97));
IkReal x442=((x123)*(x97));
IkReal x443=((x77)*(x80));
IkReal x444=((x139)*(x96));
IkReal x445=((x139)*(x154));
IkReal x446=((x80)*(x85));
IkReal x447=((x184)*(x93));
IkReal x448=((IkReal(0.189300000000000))*(r11)*(x71));
IkReal x449=((x152)*(x93));
IkReal x450=((x63)*(x93));
IkReal x451=((x139)*(x160));
IkReal x452=((x136)*(x139));
IkReal x453=((x139)*(x175));
IkReal x454=((x139)*(x181));
IkReal x455=((x123)*(x93));
IkReal x456=((x79)*(x93));
IkReal x457=((IkReal(0.189300000000000))*(r01)*(x71));
IkReal x458=((x86)*(x93));
IkReal x459=((x139)*(x95));
IkReal x460=((x139)*(x148));
IkReal x461=((x120)*(x93));
IkReal x462=((x81)*(x93));
IkReal x463=((x151)*(x93));
IkReal x464=((x147)*(x93));
IkReal x465=((x139)*(x140));
IkReal x466=((x112)*(x139));
IkReal x467=((IkReal(0.189300000000000))*(rxp1_0)*(x71));
IkReal x468=((x150)*(x93));
IkReal x469=((x120)*(x183));
IkReal x470=((x183)*(x81));
IkReal x471=((x159)*(x161));
IkReal x472=((x102)*(x159));
IkReal x473=((((IkReal(0.0521040950000000))*(x104)))+(((IkReal(0.0521040950000000))*(x115))));
IkReal x474=((x227)+(x226));
IkReal x475=((x352)+(x355));
IkReal x476=((x353)+(x354));
IkReal x477=((x372)+(x371));
IkReal x478=((x373)+(x370));
IkReal x479=((x429)+(x428));
IkReal x480=((x337)+(x336));
IkReal x481=((x356)+(x365));
IkReal x482=((x339)+(x338));
IkReal x483=((x381)+(x377));
IkReal x484=((x385)+(x375));
IkReal x485=((x322)+(x310));
IkReal x486=((x348)+(x349));
IkReal x487=((x368)+(x369));
IkReal x488=((x430)+(x431));
IkReal x489=((x403)+(x402));
IkReal x490=((x427)+(x426));
IkReal x491=((x432)+(x433));
IkReal x492=((x366)+(x367));
IkReal x493=((x413)+(x411));
IkReal x494=((x401)+(x400));
IkReal x495=((x317)+(x311));
IkReal x496=((x417)+(x424));
IkReal x497=((x471)+(x472));
IkReal x498=((((IkReal(0.0453900000000000))*(x141)))+(((IkReal(0.0453900000000000))*(x84)))+(x492));
IkReal x499=((x334)+(x327)+(x342)+(x341));
IkReal x500=((x351)+(x350)+(x346)+(x347));
IkReal x501=((x302)+(x300)+(x301)+(x299));
IkReal x502=((x304)+(x305)+(x303)+(x298));
IkReal x503=((x343)+(x340)+(x344)+(x345));
IkReal x504=((x308)+(x309)+(x306)+(x307));
IkReal x505=((x357)+(x360)+(x361)+(x362));
IkReal x506=((x321)+(x319)+(x313)+(x312));
IkReal x507=((x334)+(x324)+(x325)+(x327));
IkReal x508=((x285)+(x284)+(x283)+(x282));
IkReal x509=((x419)+(x425)+(x422)+(x421));
IkReal x510=((x389)+(x391)+(x392)+(x398));
IkReal x511=((x213)+(x214)+(x218)+(x219));
IkReal x512=((x394)+(x397)+(x390)+(x399));
IkReal x513=((x294)+(x295)+(x296)+(x297));
IkReal x514=((x264)+(x267)+(x275)+(x281));
IkReal x515=((x289)+(x288)+(x287)+(x286));
IkReal x516=((x412)+(x410)+(x414)+(x415));
IkReal x517=((x290)+(x291)+(x292)+(x293));
IkReal x518=((x333)+(x331)+(x330)+(x329));
IkReal x519=((x389)+(x391)+(x405)+(x409));
IkReal x520=((x229)+(x228)+(x230)+(x231));
IkReal x521=((x454)+(x452)+(x453)+(x451));
IkReal x522=((((IkReal(0.0453900000000000))*(x74)))+(((r01)*(x67)))+(x482)+(((IkReal(0.0521040950000000))*(x72)))+(((IkReal(0.0453900000000000))*(x128))));
IkReal x523=((((IkReal(0.0521040950000000))*(x105)))+(((IkReal(0.0521040950000000))*(x89)))+(((IkReal(0.0453900000000000))*(x78)))+(x480)+(((IkReal(0.0453900000000000))*(x110))));
IkReal x524=((((IkReal(0.0453900000000000))*(x143)))+(((IkReal(0.0453900000000000))*(x164)))+(((IkReal(0.0521040950000000))*(x107)))+(x489)+(((rxp1_0)*(x67))));
IkReal x525=((((IkReal(0.0453900000000000))*(x69)))+(((IkReal(0.0521040950000000))*(x168)))+(((IkReal(0.0521040950000000))*(x179)))+(((IkReal(0.0453900000000000))*(x82)))+(x494));
IkReal x526=((x238)+(x239)+(x243)+(x242)+(x241)+(x240));
IkReal x527=((x215)+(x216)+(x221)+(x222)+(x225)+(x224));
IkReal x528=((x190)+(x197)+(x196)+(x195)+(x211)+(x206));
IkReal x529=((x215)+(x251)+(x252)+(x221)+(x249)+(x248));
IkReal x530=((x258)+(x259)+(x255)+(x256)+(x261)+(x260));
IkReal x531=((x190)+(x197)+(x196)+(x195)+(x254)+(x257));
IkReal x532=((x359)+(x358)+(x363)+(x364)+(x462)+(x461));
IkReal x533=((x416)+(x418)+(x423)+(x420)+(x469)+(x470)+(pz));
IkReal x534=((x265)+(x262)+(x274)+(x272)+(x270)+(x271)+(x278)+(x279));
IkReal x535=((x320)+(x323)+(x318)+(x315)+(x314)+(x316)+(x456)+(x455));
IkReal x536=((x332)+(x335)+(x326)+(x328)+(x458)+(x459)+(x457)+(x460));
IkReal x537=((x388)+(x395)+(x396)+(x393)+(x468)+(x467)+(x466)+(x465));
IkReal x538=((x232)+(x233)+(x236)+(x237)+(x234)+(x235)+(x520));
IkReal x539=((x212)+(x217)+(x220)+(x223)+(x445)+(x444)+(x446)+(x441)+(x443)+(x442));
IkReal x540=((x386)+(x387)+(x384)+(x382)+(x383)+(x380)+(x379)+(x378)+(x376)+(x374)+(x463)+(x464));
IkReal x541=((x386)+(x384)+(x383)+(x380)+(x379)+(x374)+(x404)+(x407)+(x406)+(x408)+(x463)+(x464));
IkReal x542=((x266)+(x263)+(x269)+(x268)+(x276)+(x277)+(x273)+(x280)+(x449)+(x448)+(x447)+(x450));
IkReal x543=((IkReal(0.0946500000000000))+(x193)+(x192)+(x191)+(x210)+(x250)+(x253)+(x205)+(x203)+(x200)+(x209)+(x247)+(x246)+(x245)+(x244)+(x438)+(x439)+(x435)+(x436)+(x437)+(x440));
IkReal x544=((IkReal(0.0946500000000000))+(x199)+(x198)+(x193)+(x192)+(x191)+(x194)+(x210)+(x207)+(x205)+(x204)+(x203)+(x202)+(x201)+(x200)+(x209)+(x208)+(x438)+(x439)+(x435)+(x436)+(x437)+(x440));
op[0]=((((IkReal(-1.00000000000000))*(x539)))+(((IkReal(-1.00000000000000))*(x528)))+(x544)+(x527)+(((IkReal(-1.00000000000000))*(x511))));
op[1]=((IkReal(-1.63450000000000))+(((IkReal(-0.0118573004550000))*(x78)))+(((IkReal(-0.0872823000000000))*(x103)))+(((IkReal(-0.181274075518250))*(x105)))+(((IkReal(0.181274075518250))*(x72)))+(((IkReal(1.33436934500000))*(x119)))+(((IkReal(0.181274075518250))*(x166)))+(((IkReal(-0.0872823000000000))*(x65)))+(((IkReal(-1.00000000000000))*(x520)))+(((IkReal(-0.0118573004550000))*(x110)))+(((IkReal(1.33436934500000))*(x142)))+(x474)+(((IkReal(-0.181274075518250))*(x89)))+(((IkReal(0.0118573004550000))*(x74)))+(((IkReal(0.0118573004550000))*(x128))));
op[2]=((((IkReal(-1.00000000000000))*(x539)))+(((IkReal(-1.00000000000000))*(x527)))+(x544)+(x528)+(((IkReal(-1.00000000000000))*(x511))));
op[3]=((IkReal(-0.850000000000000))+(((IkReal(-1.00000000000000))*(x538)))+(x474)+(x526));
op[4]=((((IkReal(0.106800000000000))*(x169)))+(((IkReal(-0.109911310000000))*(x94)))+(((IkReal(0.0145087800000000))*(x156)))+(((IkReal(-0.0149314514635000))*(x86)))+(((IkReal(0.0149314514635000))*(x79)))+(((IkReal(-0.0145087800000000))*(x130)))+(((IkReal(0.0145087800000000))*(x170)))+(((IkReal(0.0149314514635000))*(x123)))+(((IkReal(-0.0149314514635000))*(x109)))+(((IkReal(0.106800000000000))*(x87)))+(((IkReal(-0.0145087800000000))*(x158)))+(((IkReal(-0.109911310000000))*(x176))));
op[5]=((IkReal(0.850000000000000))+(((IkReal(-1.00000000000000))*(x474)))+(((IkReal(-1.00000000000000))*(x526)))+(x538));
op[6]=((((IkReal(-1.00000000000000))*(x539)))+(((IkReal(-1.00000000000000))*(x530)))+(((IkReal(-1.00000000000000))*(x529)))+(x543)+(x531));
op[7]=((IkReal(0.0655000000000000))+(((IkReal(0.00349770000000000))*(x103)))+(((IkReal(-9.77230182500000e-5))*(x166)))+(((IkReal(0.00349770000000000))*(x65)))+(((IkReal(-0.000719345000000000))*(x142)))+(((IkReal(-1.00000000000000))*(x474)))+(((IkReal(-9.77230182500000e-5))*(x72)))+(((IkReal(-0.000719345000000000))*(x119)))+(((IkReal(9.77230182500000e-5))*(x89)))+(x520)+(((IkReal(-0.000475162545000000))*(x128)))+(((IkReal(-0.000475162545000000))*(x74)))+(((IkReal(0.000475162545000000))*(x78)))+(((IkReal(0.000475162545000000))*(x110)))+(((IkReal(9.77230182500000e-5))*(x105))));
op[8]=((((IkReal(-1.00000000000000))*(x539)))+(((IkReal(-1.00000000000000))*(x530)))+(((IkReal(-1.00000000000000))*(x531)))+(x543)+(x529));
op[9]=((((IkReal(-1.00000000000000))*(x521)))+(x508)+(x542)+(x534)+(((IkReal(-1.00000000000000))*(x514))));
op[10]=((IkReal(-2.00000000000000))+(((IkReal(-0.0872823000000000))*(x131)))+(((IkReal(-0.0872823000000000))*(x132)))+(((IkReal(-0.0872823000000000))*(x165)))+(((IkReal(-0.0872823000000000))*(x162)))+(((r01)*(x88)))+(((r00)*(x122)))+(((IkReal(1.33436934500000))*(x185)))+(((IkReal(-1.00000000000000))*(x515)))+(((r11)*(x171))));
op[11]=((((IkReal(-1.00000000000000))*(x508)))+(((IkReal(-1.00000000000000))*(x521)))+(x542)+(x534)+(x514));
op[12]=((IkReal(-2.00000000000000))+(x513)+(((IkReal(-1.00000000000000))*(x515)))+(((IkReal(-1.00000000000000))*(x517))));
op[13]=((((IkReal(-0.109911310000000))*(x184)))+(((IkReal(0.106800000000000))*(x135)))+(((r00)*(x129)))+(((r11)*(x101)))+(((r10)*(x172)))+(((IkReal(-0.109911310000000))*(x152)))+(((IkReal(-0.109911310000000))*(x63)))+(((IkReal(-1.00000000000000))*(r11)*(x73))));
op[14]=((IkReal(2.00000000000000))+(x517)+(x515)+(((IkReal(-1.00000000000000))*(x513))));
op[15]=((((IkReal(-1.00000000000000))*(x504)))+(((IkReal(-1.00000000000000))*(x501)))+(((IkReal(-1.00000000000000))*(x521)))+(x502)+(x542)+(x514));
op[16]=((IkReal(2.00000000000000))+(((IkReal(0.00349770000000000))*(x162)))+(((IkReal(0.00349770000000000))*(x165)))+(((IkReal(-1.00000000000000))*(r11)*(x137)))+(((IkReal(-0.000719345000000000))*(x178)))+(((IkReal(0.00349770000000000))*(x131)))+(((IkReal(0.00349770000000000))*(x132)))+(((IkReal(-0.000719345000000000))*(x185)))+(x515)+(((IkReal(-0.000719345000000000))*(x133))));
op[17]=((((IkReal(-1.00000000000000))*(x504)))+(((IkReal(-1.00000000000000))*(x521)))+(x501)+(x502)+(x542)+(((IkReal(-1.00000000000000))*(x514))));
op[18]=((((IkReal(-1.00000000000000))*(x495)))+(((IkReal(-1.00000000000000))*(x485)))+(((IkReal(-1.00000000000000))*(x536)))+(x506)+(x507)+(x535)+(((IkReal(-1.00000000000000))*(x518))));
op[19]=((((IkReal(0.0872823000000000))*(x78)))+(((IkReal(-1.00000000000000))*(x482)))+(((r11)*(x88)))+(((IkReal(0.0872823000000000))*(x110)))+(((IkReal(1.33436934500000))*(x105)))+(((IkReal(-0.0872823000000000))*(x74)))+(x480)+(((IkReal(-1.33436934500000))*(x166)))+(((IkReal(-1.33436934500000))*(x72)))+(((IkReal(-0.0872823000000000))*(x128))));
op[20]=((((IkReal(-1.00000000000000))*(x507)))+(((IkReal(-1.00000000000000))*(x536)))+(x485)+(x495)+(x506)+(x535)+(((IkReal(-1.00000000000000))*(x518))));
op[21]=((((IkReal(-1.00000000000000))*(x522)))+(x523));
op[22]=((((IkReal(-0.106800000000000))*(x170)))+(((IkReal(-1.00000000000000))*(r01)*(x101)))+(((IkReal(0.109911310000000))*(x86)))+(((IkReal(-0.109911310000000))*(x79)))+(((IkReal(-0.109911310000000))*(x123)))+(((r01)*(x73)))+(((IkReal(0.106800000000000))*(x158)))+(((r10)*(x129))));
op[23]=((((IkReal(-1.00000000000000))*(x523)))+(x522));
op[24]=((((IkReal(-1.00000000000000))*(x499)))+(((IkReal(-1.00000000000000))*(x500)))+(((IkReal(-1.00000000000000))*(x536)))+(x485)+(x486)+(x503)+(x535));
op[25]=((((IkReal(-1.00000000000000))*(x480)))+(((IkReal(-0.00349770000000000))*(x78)))+(((IkReal(0.00349770000000000))*(x128)))+(((r01)*(x137)))+(((IkReal(-0.000719345000000000))*(x89)))+(((IkReal(-0.000719345000000000))*(x105)))+(x482)+(((IkReal(0.000719345000000000))*(x72)))+(((IkReal(0.00349770000000000))*(x74)))+(((IkReal(-0.00349770000000000))*(x110))));
op[26]=((((IkReal(-1.00000000000000))*(x485)))+(((IkReal(-1.00000000000000))*(x486)))+(((IkReal(-1.00000000000000))*(x500)))+(((IkReal(-1.00000000000000))*(x536)))+(x499)+(x503)+(x535));
op[27]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x505)))+(((IkReal(-1.00000000000000))*(x475)))+(((IkReal(-1.00000000000000))*(x532)))+(x481)+(x476));
op[28]=((((IkReal(-1.33436934500000))*(x115)))+(x492)+(((IkReal(-1.33436934500000))*(x104)))+(((IkReal(0.0872823000000000))*(x84)))+(((IkReal(0.0872823000000000))*(x141))));
op[29]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x481)))+(((IkReal(-1.00000000000000))*(x505)))+(((IkReal(-1.00000000000000))*(x532)))+(x475)+(x476));
op[30]=((((IkReal(-1.00000000000000))*(x473)))+(x498));
op[31]=((IkReal(-4.00000000000000))+(((IkReal(-0.106800000000000))*(x167)))+(((IkReal(0.109911310000000))*(x81)))+(((IkReal(-0.106800000000000))*(x155)))+(((IkReal(0.109911310000000))*(x120))));
op[32]=((((IkReal(-1.00000000000000))*(x498)))+(x473));
op[33]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x481)))+(((IkReal(-1.00000000000000))*(x477)))+(((IkReal(-1.00000000000000))*(x532)))+(x487)+(x476)+(x478));
op[34]=((((IkReal(-1.00000000000000))*(x492)))+(((IkReal(-0.00349770000000000))*(x141)))+(((IkReal(0.000719345000000000))*(x104)))+(((IkReal(-0.00349770000000000))*(x84)))+(((IkReal(0.000719345000000000))*(x115))));
op[35]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x477)))+(((IkReal(-1.00000000000000))*(x478)))+(((IkReal(-1.00000000000000))*(x532)))+(x481)+(x487)+(x476));
op[36]=((IkReal(-0.817250000000000))+(((IkReal(-1.00000000000000))*(x484)))+(((IkReal(-1.00000000000000))*(x483)))+(((IkReal(-1.00000000000000))*(x537)))+(x540)+(x510)+(((IkReal(-1.00000000000000))*(x512))));
op[37]=((((IkReal(-1.00000000000000))*(x489)))+(((IkReal(0.0872823000000000))*(x69)))+(((IkReal(-0.0872823000000000))*(x164)))+(((IkReal(-0.0872823000000000))*(x143)))+(((rxp1_1)*(x88)))+(x494)+(((IkReal(-1.33436934500000))*(x107)))+(((rxp0_1)*(x122)))+(((IkReal(-1.00000000000000))*(rxp1_0)*(x171)))+(((IkReal(0.0872823000000000))*(x82))));
op[38]=((IkReal(0.817250000000000))+(((IkReal(-1.00000000000000))*(x537)))+(x483)+(x484)+(x540)+(((IkReal(-1.00000000000000))*(x512)))+(((IkReal(-1.00000000000000))*(x510))));
op[39]=((((IkReal(-1.00000000000000))*(x524)))+(x525));
op[40]=((IkReal(1.70000000000000))+(((IkReal(-1.00000000000000))*(rxp0_0)*(x172)))+(((rxp1_0)*(x73)))+(((IkReal(0.106800000000000))*(x111)))+(((rxp0_1)*(x129)))+(((IkReal(-0.109911310000000))*(x151)))+(((IkReal(-0.109911310000000))*(x147)))+(((IkReal(-1.00000000000000))*(rxp1_0)*(x101)))+(((IkReal(0.109911310000000))*(x150))));
op[41]=((((IkReal(-1.00000000000000))*(x525)))+(x524));
op[42]=((IkReal(0.0327500000000000))+(((IkReal(-1.00000000000000))*(x537)))+(x483)+(x493)+(x541)+(((IkReal(-1.00000000000000))*(x519)))+(((IkReal(-1.00000000000000))*(x516))));
op[43]=((((IkReal(0.00349770000000000))*(x164)))+(((IkReal(-0.00349770000000000))*(x69)))+(((IkReal(-1.00000000000000))*(x494)))+(((rxp1_0)*(x137)))+(((IkReal(-0.000719345000000000))*(x179)))+(((IkReal(-0.000719345000000000))*(x168)))+(x489)+(((IkReal(0.000719345000000000))*(x107)))+(((IkReal(-0.00349770000000000))*(x82)))+(((IkReal(0.00349770000000000))*(x143))));
op[44]=((IkReal(-0.0327500000000000))+(((IkReal(-1.00000000000000))*(x493)))+(((IkReal(-1.00000000000000))*(x483)))+(((IkReal(-1.00000000000000))*(x537)))+(x541)+(x519)+(((IkReal(-1.00000000000000))*(x516))));
op[45]=((((IkReal(-1.00000000000000))*(x496)))+(((IkReal(-1.00000000000000))*(x497)))+(x490)+(x509)+(x533));
op[46]=((((IkReal(-0.00826126969500000))*(x84)))+(((IkReal(-1.00000000000000))*(x479)))+(((IkReal(0.126298058504250))*(x115)))+(((IkReal(0.126298058504250))*(x104)))+(((IkReal(-0.00826126969500000))*(x141))));
op[47]=((((IkReal(-1.00000000000000))*(x490)))+(((IkReal(-1.00000000000000))*(x497)))+(x496)+(x509)+(x533));
op[48]=((IkReal(0.784500000000000))+(((IkReal(-1.00000000000000))*(x488)))+(((IkReal(-1.00000000000000))*(x479)))+(x491));
op[49]=((((IkReal(-0.0104031054915000))*(x120)))+(((IkReal(-0.0104031054915000))*(x81)))+(((IkReal(0.0101086200000000))*(x167)))+(((IkReal(0.0101086200000000))*(x155))));
op[50]=((IkReal(0.784500000000000))+(((IkReal(-1.00000000000000))*(x491)))+(x488)+(x479));
op[51]=((((IkReal(-1.00000000000000))*(x497)))+(((IkReal(-0.000168993079125000))*(x81)))+(((IkReal(-0.00242572735012500))*(x161)))+(x496)+(x533)+(((IkReal(0.00309978750000000))*(x75)))+(((IkReal(0.00309978750000000))*(x64)))+(((IkReal(-0.00242572735012500))*(x102)))+(((IkReal(-0.000168993079125000))*(x120))));
op[52]=((((IkReal(0.000331057305000000))*(x141)))+(x479)+(((IkReal(-6.80860042500000e-5))*(x104)))+(((IkReal(0.000331057305000000))*(x84)))+(((IkReal(-6.80860042500000e-5))*(x115))));
IkReal x545=((gconst7_7)*(r01));
IkReal x546=((gconst0_3)*(r20));
IkReal x547=((gconst1_3)*(r21));
IkReal x548=((gconst4_0)*(r11));
IkReal x549=((gconst0_1)*(npx));
IkReal x550=((gconst1_3)*(npy));
IkReal x551=((gconst4_0)*(r01));
IkReal x552=((gconst6_7)*(r10));
IkReal x553=((gconst0_7)*(npx));
IkReal x554=((gconst6_0)*(r10));
IkReal x555=((gconst7_0)*(r01));
IkReal x556=((IkReal(0.0257164050000000))*(r01));
IkReal x557=((gconst4_7)*(pz));
IkReal x558=((gconst3_0)*(r00));
IkReal x559=((gconst4_7)*(r11));
IkReal x560=((gconst3_0)*(r10));
IkReal x561=((gconst6_3)*(r10));
IkReal x562=((gconst0_0)*(r20));
IkReal x563=((gconst3_2)*(r00));
IkReal x564=((gconst4_1)*(r01));
IkReal x565=((IkReal(2.66873869000000))*(gconst7_7));
IkReal x566=((gconst7_7)*(r11));
IkReal x567=((gconst4_2)*(r01));
IkReal x568=((IkReal(0.135850000000000))*(pp));
IkReal x569=((gconst0_6)*(npx));
IkReal x570=((gconst0_5)*(npx));
IkReal x571=((IkReal(0.189300000000000))*(pz));
IkReal x572=((gconst3_7)*(r00));
IkReal x573=((gconst7_0)*(r11));
IkReal x574=((gconst4_7)*(r01));
IkReal x575=((gconst6_1)*(r10));
IkReal x576=((gconst1_0)*(npy));
IkReal x577=((gconst6_2)*(r10));
IkReal x578=((gconst1_2)*(npy));
IkReal x579=((IkReal(0.0257164050000000))*(pz));
IkReal x580=((gconst4_3)*(r01));
IkReal x581=((gconst0_6)*(r20));
IkReal x582=((IkReal(0.213600000000000))*(gconst6_6));
IkReal x583=((IkReal(0.106800000000000))*(gconst4_5));
IkReal x584=((gconst0_2)*(r20));
IkReal x585=((gconst1_1)*(npy));
IkReal x586=((gconst0_3)*(npx));
IkReal x587=((gconst1_6)*(r21));
IkReal x588=((gconst3_7)*(r10));
IkReal x589=((gconst1_7)*(npy));
IkReal x590=((gconst1_7)*(r21));
IkReal x591=((gconst3_1)*(r00));
IkReal x592=((gconst6_1)*(r00));
IkReal x593=((IkReal(1.56900000000000))*(gconst4_3));
IkReal x594=((IkReal(0.817250000000000))*(r11));
IkReal x595=((IkReal(0.0267000000000000))*(gconst3_5));
IkReal x596=((gconst0_2)*(npx));
IkReal x597=((gconst7_2)*(r01));
IkReal x598=((gconst0_7)*(r20));
IkReal x599=((gconst6_6)*(r10));
IkReal x600=((gconst0_0)*(npx));
IkReal x601=((IkReal(0.0534000000000000))*(gconst3_6));
IkReal x602=((gconst6_0)*(r00));
IkReal x603=((gconst4_6)*(r01));
IkReal x604=((gconst6_7)*(r00));
IkReal x605=((gconst3_3)*(r10));
IkReal x606=((gconst0_5)*(r20));
IkReal x607=((gconst7_1)*(r11));
IkReal x608=((gconst6_3)*(r00));
IkReal x609=((IkReal(0.106800000000000))*(gconst6_5));
IkReal x610=((gconst6_5)*(r10));
IkReal x611=((gconst3_1)*(r10));
IkReal x612=((IkReal(0.106800000000000))*(gconst7_5));
IkReal x613=((gconst3_2)*(r10));
IkReal x614=((gconst3_6)*(r00));
IkReal x615=((gconst6_2)*(r00));
IkReal x616=((gconst3_5)*(r00));
IkReal x617=((gconst7_4)*(r11));
IkReal x618=((gconst3_3)*(r00));
IkReal x619=((IkReal(1.56900000000000))*(gconst7_3));
IkReal x620=((IkReal(0.0534000000000000))*(gconst7_6));
IkReal x621=((gconst1_6)*(npy));
IkReal x622=((gconst7_6)*(r11));
IkReal x623=((gconst7_2)*(r11));
IkReal x624=((gconst7_3)*(r11));
IkReal x625=((gconst7_0)*(rxp1_1));
IkReal x626=((gconst6_7)*(rxp0_1));
IkReal x627=((gconst4_6)*(r11));
IkReal x628=((IkReal(1.00000000000000))*(pp));
IkReal x629=((IkReal(0.213600000000000))*(gconst3_6));
IkReal x630=((gconst4_5)*(r01));
IkReal x631=((gconst7_5)*(r11));
IkReal x632=((gconst3_0)*(rxp0_0));
IkReal x633=((IkReal(0.0946500000000000))*(pp));
IkReal x634=((gconst3_7)*(rxp0_0));
IkReal x635=((gconst4_2)*(r11));
IkReal x636=((gconst7_1)*(r01));
IkReal x637=((gconst6_4)*(r10));
IkReal x638=((gconst6_0)*(rxp0_1));
IkReal x639=((gconst1_2)*(r21));
IkReal x640=((IkReal(0.109150000000000))*(r01));
IkReal x641=((gconst1_0)*(r21));
IkReal x642=((gconst1_5)*(r21));
IkReal x643=((gconst1_5)*(npy));
IkReal x644=((gconst4_7)*(rxp1_0));
IkReal x645=((IkReal(0.106800000000000))*(gconst3_5));
IkReal x646=((gconst4_1)*(r11));
IkReal x647=((gconst3_4)*(r00));
IkReal x648=((IkReal(0.213600000000000))*(gconst7_6));
IkReal x649=((IkReal(0.0179172450000000))*(pz));
IkReal x650=((gconst4_0)*(rxp1_0));
IkReal x651=((gconst4_6)*(rxp1_0));
IkReal x652=((gconst7_3)*(r01));
IkReal x653=((IkReal(0.0534000000000000))*(gconst6_6));
IkReal x654=((gconst7_7)*(rxp1_1));
IkReal x655=((IkReal(0.0145087800000000))*(x616));
IkReal x656=((IkReal(0.106800000000000))*(x643));
IkReal x657=((IkReal(0.106800000000000))*(x570));
IkReal x658=((IkReal(0.0145087800000000))*(x630));
IkReal x659=((IkReal(0.0145087800000000))*(x610));
IkReal x660=((IkReal(0.0145087800000000))*(x631));
IkReal x661=((IkReal(0.0141566826115000))*(x566));
IkReal x662=((IkReal(0.213148650000000))*(x624));
IkReal x663=((IkReal(0.213148650000000))*(x561));
IkReal x664=((IkReal(0.0141566826115000))*(x552));
IkReal x665=((IkReal(0.104208190000000))*(x553));
IkReal x666=((IkReal(0.213148650000000))*(x580));
IkReal x667=((IkReal(0.213148650000000))*(x618));
IkReal x668=((IkReal(0.0141566826115000))*(x572));
IkReal x669=((IkReal(0.104208190000000))*(x589));
IkReal x670=((IkReal(1.56900000000000))*(x550));
IkReal x671=((IkReal(0.0141566826115000))*(x574));
IkReal x672=((IkReal(1.56900000000000))*(x586));
IkReal x673=((IkReal(0.00725439000000000))*(x614));
IkReal x674=((IkReal(0.00725439000000000))*(x603));
IkReal x675=((IkReal(0.0534000000000000))*(x569));
IkReal x676=((IkReal(0.0534000000000000))*(x621));
IkReal x677=((IkReal(0.00725439000000000))*(x622));
IkReal x678=((IkReal(0.00725439000000000))*(x599));
IkReal x679=((IkReal(0.0534000000000000))*(x627));
IkReal x680=((r01)*(x620));
IkReal x681=((IkReal(1.33722090500000))*(x602));
IkReal x682=((IkReal(1.33722090500000))*(x548));
IkReal x683=((r00)*(x653));
IkReal x684=((r10)*(x601));
IkReal x685=((IkReal(1.33722090500000))*(x560));
IkReal x686=((IkReal(1.33722090500000))*(x555));
IkReal x687=((r10)*(x645));
IkReal x688=((r00)*(x609));
IkReal x689=((r11)*(x583));
IkReal x690=((r01)*(x612));
IkReal x691=((IkReal(0.104208190000000))*(x545));
IkReal x692=((IkReal(1.56900000000000))*(x608));
IkReal x693=((IkReal(0.104208190000000))*(x588));
IkReal x694=((IkReal(0.104208190000000))*(x559));
IkReal x695=((r01)*(x619));
IkReal x696=((IkReal(0.104208190000000))*(x604));
IkReal x697=((r11)*(x593));
IkReal x698=((IkReal(1.56900000000000))*(x605));
IkReal x699=((IkReal(0.00357090500000000))*(x555));
IkReal x700=((IkReal(0.00357090500000000))*(x602));
IkReal x701=((IkReal(0.00357090500000000))*(x560));
IkReal x702=((IkReal(0.00357090500000000))*(x548));
IkReal x703=((r10)*(x609));
IkReal x704=((r11)*(x612));
IkReal x705=((r01)*(x583));
IkReal x706=((IkReal(0.106800000000000))*(x616));
IkReal x707=((IkReal(0.104208190000000))*(x572));
IkReal x708=((IkReal(0.104208190000000))*(x574));
IkReal x709=((IkReal(1.56900000000000))*(x618));
IkReal x710=((IkReal(1.56900000000000))*(x580));
IkReal x711=((IkReal(1.56900000000000))*(x561));
IkReal x712=((r11)*(x619));
IkReal x713=((IkReal(0.104208190000000))*(x552));
IkReal x714=((IkReal(0.104208190000000))*(x566));
IkReal x715=((IkReal(0.0534000000000000))*(x599));
IkReal x716=((r11)*(x620));
IkReal x717=((IkReal(0.0534000000000000))*(x603));
IkReal x718=((r00)*(x601));
IkReal x719=((IkReal(0.106800000000000))*(x642));
IkReal x720=((IkReal(0.106800000000000))*(x606));
IkReal x721=((IkReal(0.104208190000000))*(x598));
IkReal x722=((IkReal(1.56900000000000))*(x546));
IkReal x723=((IkReal(0.104208190000000))*(x590));
IkReal x724=((IkReal(1.56900000000000))*(x547));
IkReal x725=((IkReal(0.0534000000000000))*(x581));
IkReal x726=((IkReal(0.0534000000000000))*(x587));
IkReal x727=((rxp1_1)*(x612));
IkReal x728=((rxp0_1)*(x609));
IkReal x729=((rxp1_0)*(x583));
IkReal x730=((rxp0_0)*(x645));
IkReal x731=((IkReal(1.56900000000000))*(gconst3_3)*(rxp0_0));
IkReal x732=((IkReal(0.104208190000000))*(x644));
IkReal x733=((IkReal(0.104208190000000))*(x634));
IkReal x734=((rxp1_0)*(x593));
IkReal x735=((IkReal(0.104208190000000))*(x654));
IkReal x736=((IkReal(0.104208190000000))*(x626));
IkReal x737=((IkReal(1.56900000000000))*(gconst6_3)*(rxp0_1));
IkReal x738=((rxp1_1)*(x619));
IkReal x739=((rxp1_1)*(x620));
IkReal x740=((rxp0_1)*(x653));
IkReal x741=((rxp0_0)*(x601));
IkReal x742=((IkReal(0.0534000000000000))*(x651));
IkReal x743=((IkReal(0.126567958658250))*(x562));
IkReal x744=((IkReal(0.126567958658250))*(x641));
IkReal x745=((IkReal(0.00505431000000000))*(x581));
IkReal x746=((IkReal(0.00505431000000000))*(x587));
IkReal x747=((IkReal(0.0101086200000000))*(x642));
IkReal x748=((IkReal(0.0101086200000000))*(x606));
IkReal x749=((IkReal(0.148505850000000))*(x546));
IkReal x750=((IkReal(0.00986330518350000))*(x590));
IkReal x751=((IkReal(0.00986330518350000))*(x598));
IkReal x752=((IkReal(0.148505850000000))*(x547));
IkReal x753=((IkReal(0.000337986158250000))*(x562));
IkReal x754=((IkReal(0.000337986158250000))*(x641));
IkReal x755=((IkReal(0.111023412500000))*(x561));
IkReal x756=((IkReal(0.0148280275000000))*(gconst4_4)*(r01));
IkReal x757=((IkReal(0.0257164050000000))*(x549));
IkReal x758=((IkReal(0.00349357361925000))*(x564));
IkReal x759=((IkReal(0.00362719500000000))*(x610));
IkReal x760=((IkReal(0.668610452500000))*(x553));
IkReal x761=((IkReal(0.641196607500000))*(x578));
IkReal x762=((IkReal(0.0871065591288750))*(x563));
IkReal x763=((IkReal(0.0257164050000000))*(x585));
IkReal x764=((IkReal(0.0871065591288750))*(x567));
IkReal x765=((IkReal(0.111023412500000))*(x624));
IkReal x766=((IkReal(0.0148280275000000))*(x647));
IkReal x767=((IkReal(0.00362719500000000))*(x631));
IkReal x768=((IkReal(0.641196607500000))*(x596));
IkReal x769=((IkReal(0.00349357361925000))*(x591));
IkReal x770=((IkReal(0.0908307299721250))*(x572));
IkReal x771=((IkReal(0.109150000000000))*(gconst1_4)*(npy));
IkReal x772=((IkReal(0.0908307299721250))*(x574));
IkReal x773=((IkReal(0.668610452500000))*(x589));
IkReal x774=((IkReal(0.109150000000000))*(gconst0_4)*(npx));
IkReal x775=((IkReal(0.0148280275000000))*(x637));
IkReal x776=((IkReal(0.0871065591288750))*(x623));
IkReal x777=((IkReal(0.00362719500000000))*(x630));
IkReal x778=((IkReal(0.817250000000000))*(x550));
IkReal x779=((IkReal(0.0267000000000000))*(x570));
IkReal x780=((IkReal(0.0267000000000000))*(x643));
IkReal x781=((IkReal(0.00362719500000000))*(x616));
IkReal x782=((IkReal(0.0148280275000000))*(x617));
IkReal x783=((IkReal(0.111023412500000))*(x618));
IkReal x784=((IkReal(0.0871065591288750))*(x577));
IkReal x785=((IkReal(0.00349357361925000))*(x607));
IkReal x786=((IkReal(0.0908307299721250))*(x552));
IkReal x787=((IkReal(0.111023412500000))*(x580));
IkReal x788=((IkReal(0.817250000000000))*(x586));
IkReal x789=((IkReal(0.00349357361925000))*(x575));
IkReal x790=((IkReal(0.0908307299721250))*(x566));
IkReal x791=((IkReal(0.00616623150000000))*(x591));
IkReal x792=((IkReal(0.0453900000000000))*(x549));
IkReal x793=((IkReal(0.0521040950000000))*(x576));
IkReal x794=((IkReal(0.00707834130575000))*(x551));
IkReal x795=((IkReal(0.00707834130575000))*(x558));
IkReal x796=((IkReal(0.0521040950000000))*(x600));
IkReal x797=((IkReal(0.00616623150000000))*(x564));
IkReal x798=((IkReal(0.0453900000000000))*(x585));
IkReal x799=((IkReal(0.00616623150000000))*(x575));
IkReal x800=((IkReal(0.00707834130575000))*(x573));
IkReal x801=((IkReal(0.00707834130575000))*(x554));
IkReal x802=((IkReal(0.00616623150000000))*(x607));
IkReal x803=((IkReal(0.000242553722125000))*(x566));
IkReal x804=((IkReal(0.00348161712112500))*(x623));
IkReal x805=((IkReal(0.000242553722125000))*(x552));
IkReal x806=((IkReal(0.00348161712112500))*(x577));
IkReal x807=((IkReal(0.00444908750000000))*(x624));
IkReal x808=((IkReal(0.00444908750000000))*(x561));
IkReal x809=((IkReal(0.00444908750000000))*(x580));
IkReal x810=((IkReal(0.00348161712112500))*(x567));
IkReal x811=((IkReal(0.00444908750000000))*(x618));
IkReal x812=((IkReal(0.0327500000000000))*(x586));
IkReal x813=((IkReal(0.0256283925000000))*(x596));
IkReal x814=((IkReal(0.000242553722125000))*(x572));
IkReal x815=((IkReal(0.000242553722125000))*(x574));
IkReal x816=((IkReal(0.0256283925000000))*(x578));
IkReal x817=((IkReal(0.00178545250000000))*(x589));
IkReal x818=((IkReal(0.00178545250000000))*(x553));
IkReal x819=((IkReal(0.00348161712112500))*(x563));
IkReal x820=((IkReal(0.0327500000000000))*(x550));
IkReal x821=((IkReal(0.109150000000000))*(gconst6_4)*(r00));
IkReal x822=((IkReal(0.668610452500000))*(x604));
IkReal x823=((IkReal(0.668610452500000))*(x545));
IkReal x824=((IkReal(0.668610452500000))*(x559));
IkReal x825=((IkReal(0.109150000000000))*(gconst4_4)*(r11));
IkReal x826=((IkReal(0.0257164050000000))*(x646));
IkReal x827=((IkReal(0.0257164050000000))*(x611));
IkReal x828=((IkReal(0.641196607500000))*(x613));
IkReal x829=((IkReal(0.641196607500000))*(x635));
IkReal x830=((IkReal(0.0257164050000000))*(x592));
IkReal x831=((IkReal(0.668610452500000))*(x588));
IkReal x832=((gconst7_1)*(x556));
IkReal x833=((gconst7_4)*(x640));
IkReal x834=((IkReal(0.641196607500000))*(x615));
IkReal x835=((IkReal(0.641196607500000))*(x597));
IkReal x836=((IkReal(0.109150000000000))*(gconst3_4)*(r10));
IkReal x837=((IkReal(0.817250000000000))*(x608));
IkReal x838=((IkReal(0.0267000000000000))*(gconst6_5)*(r00));
IkReal x839=((IkReal(0.817250000000000))*(x652));
IkReal x840=((r10)*(x595));
IkReal x841=((gconst4_3)*(x594));
IkReal x842=((IkReal(0.817250000000000))*(x605));
IkReal x843=((IkReal(0.0267000000000000))*(gconst4_5)*(r11));
IkReal x844=((IkReal(0.0267000000000000))*(gconst7_5)*(r01));
IkReal x845=((IkReal(0.0453900000000000))*(x646));
IkReal x846=((IkReal(0.0521040950000000))*(x602));
IkReal x847=((IkReal(0.0521040950000000))*(x560));
IkReal x848=((IkReal(0.0453900000000000))*(x636));
IkReal x849=((IkReal(0.0521040950000000))*(x555));
IkReal x850=((IkReal(0.0521040950000000))*(x548));
IkReal x851=((IkReal(0.0453900000000000))*(x592));
IkReal x852=((IkReal(0.0453900000000000))*(x611));
IkReal x853=((IkReal(0.0327500000000000))*(gconst4_3)*(r11));
IkReal x854=((IkReal(0.0256283925000000))*(x597));
IkReal x855=((IkReal(0.0256283925000000))*(x613));
IkReal x856=((IkReal(0.00178545250000000))*(x604));
IkReal x857=((IkReal(0.00178545250000000))*(x545));
IkReal x858=((IkReal(0.00178545250000000))*(x588));
IkReal x859=((IkReal(0.00178545250000000))*(x559));
IkReal x860=((IkReal(0.0327500000000000))*(x652));
IkReal x861=((IkReal(0.0327500000000000))*(x608));
IkReal x862=((IkReal(0.0256283925000000))*(x635));
IkReal x863=((IkReal(0.0256283925000000))*(x615));
IkReal x864=((IkReal(0.0327500000000000))*(x605));
IkReal x865=((IkReal(0.668610452500000))*(x566));
IkReal x866=((IkReal(0.668610452500000))*(x552));
IkReal x867=((pp)*(x567));
IkReal x868=((r00)*(x595));
IkReal x869=((IkReal(0.817250000000000))*(x580));
IkReal x870=((pp)*(x563));
IkReal x871=((IkReal(0.817250000000000))*(x618));
IkReal x872=((IkReal(0.0257164050000000))*(x575));
IkReal x873=((IkReal(0.109150000000000))*(x617));
IkReal x874=((IkReal(0.641196607500000))*(x623));
IkReal x875=((IkReal(0.0257164050000000))*(x607));
IkReal x876=((IkReal(0.0267000000000000))*(x630));
IkReal x877=((IkReal(0.641196607500000))*(x577));
IkReal x878=((IkReal(0.109150000000000))*(x637));
IkReal x879=((IkReal(0.0267000000000000))*(x610));
IkReal x880=((IkReal(0.668610452500000))*(x574));
IkReal x881=((gconst7_3)*(x594));
IkReal x882=((IkReal(0.817250000000000))*(x561));
IkReal x883=((gconst4_1)*(x556));
IkReal x884=((gconst4_4)*(x640));
IkReal x885=((IkReal(0.641196607500000))*(x567));
IkReal x886=((IkReal(0.0257164050000000))*(x591));
IkReal x887=((IkReal(0.641196607500000))*(x563));
IkReal x888=((IkReal(0.668610452500000))*(x572));
IkReal x889=((IkReal(0.109150000000000))*(x647));
IkReal x890=((IkReal(0.0267000000000000))*(x631));
IkReal x891=((x553)*(x571));
IkReal x892=((x556)*(x557));
IkReal x893=((x572)*(x579));
IkReal x894=((x571)*(x589));
IkReal x895=((x568)*(x577));
IkReal x896=((x568)*(x623));
IkReal x897=((x566)*(x579));
IkReal x898=((x552)*(x579));
IkReal x899=((x567)*(x568));
IkReal x900=((x578)*(x628));
IkReal x901=((x596)*(x628));
IkReal x902=((x563)*(x568));
IkReal x903=((x571)*(x604));
IkReal x904=((IkReal(0.189300000000000))*(r11)*(x557));
IkReal x905=((x571)*(x588));
IkReal x906=((x545)*(x571));
IkReal x907=((x628)*(x635));
IkReal x908=((x615)*(x628));
IkReal x909=((x597)*(x628));
IkReal x910=((x613)*(x628));
IkReal x911=((x552)*(x571));
IkReal x912=((x566)*(x571));
IkReal x913=((IkReal(0.189300000000000))*(r01)*(x557));
IkReal x914=((x571)*(x572));
IkReal x915=((x577)*(x628));
IkReal x916=((x623)*(x628));
IkReal x917=((x805)+(x803));
IkReal x918=((x759)+(x767));
IkReal x919=((x678)+(x677));
IkReal x920=((x706)+(x705));
IkReal x921=((x659)+(x660));
IkReal x922=((x725)+(x726));
IkReal x923=((x790)+(x786));
IkReal x924=((x752)+(x749));
IkReal x925=((x710)+(x709));
IkReal x926=((x721)+(x723));
IkReal x927=((x722)+(x724));
IkReal x928=((x742)+(x741));
IkReal x929=((x708)+(x707));
IkReal x930=((x730)+(x729));
IkReal x931=((x733)+(x732));
IkReal x932=((x737)+(x738));
IkReal x933=((x727)+(x728));
IkReal x934=((x734)+(x731));
IkReal x935=((x736)+(x735));
IkReal x936=((x715)+(x716));
IkReal x937=((x711)+(x712));
IkReal x938=((x719)+(x720));
IkReal x939=((x747)+(x748));
IkReal x940=((x751)+(x750));
IkReal x941=((x718)+(x717));
IkReal x942=((x661)+(x664));
IkReal x943=((x663)+(x662));
IkReal x944=((x703)+(x704));
IkReal x945=((x739)+(x740));
IkReal x946=((IkReal(4.00000000000000))+(x938));
IkReal x947=((((IkReal(0.181661459944250))*(x573)))+(((IkReal(0.181661459944250))*(x554)))+(x919));
IkReal x948=((((IkReal(0.000485107444250000))*(x554)))+(((IkReal(0.000485107444250000))*(x573)))+(x919));
IkReal x949=((((IkReal(1.33722090500000))*(x573)))+(x936)+(((IkReal(1.33722090500000))*(x554))));
IkReal x950=((x941)+(((IkReal(1.33722090500000))*(x551)))+(((IkReal(1.33722090500000))*(x558))));
IkReal x951=((((IkReal(0.00357090500000000))*(x551)))+(((IkReal(0.00357090500000000))*(x558)))+(x941));
IkReal x952=((((IkReal(0.00357090500000000))*(x554)))+(x936)+(((IkReal(0.00357090500000000))*(x573))));
IkReal x953=((((IkReal(1.33722090500000))*(x641)))+(((IkReal(1.33722090500000))*(x562)))+(x922));
IkReal x954=((((IkReal(0.00357090500000000))*(x562)))+(x922)+(((IkReal(0.00357090500000000))*(x641))));
IkReal x955=((((IkReal(1.33722090500000))*(x625)))+(((IkReal(1.33722090500000))*(x638)))+(x945));
IkReal x956=((((IkReal(1.33722090500000))*(x650)))+(((IkReal(1.33722090500000))*(x632)))+(x928));
IkReal x957=((((IkReal(0.00357090500000000))*(x632)))+(((IkReal(0.00357090500000000))*(x650)))+(x928));
IkReal x958=((((IkReal(0.00357090500000000))*(x625)))+(((IkReal(0.00357090500000000))*(x638)))+(x945));
IkReal x959=((x679)+(x683)+(x680)+(x684));
IkReal x960=((x777)+(x779)+(x780)+(x781));
IkReal x961=((x689)+(x688)+(x687)+(x690));
IkReal x962=((x808)+(x804)+(x807)+(x806));
IkReal x963=((x818)+(x817)+(x814)+(x815));
IkReal x964=((x655)+(x656)+(x657)+(x658));
IkReal x965=((x713)+(x714)+(x944));
IkReal x966=((x868)+(x866)+(x865)+(x876));
IkReal x967=((x695)+(x697)+(x692)+(x698));
IkReal x968=((x694)+(x696)+(x691)+(x693));
IkReal x969=((x746)+(x744)+(x745)+(x743));
IkReal x970=((x838)+(x840)+(x843)+(x844));
IkReal x971=((x879)+(x880)+(x888)+(x890));
IkReal x972=((x773)+(x772)+(x770)+(x760));
IkReal x973=((x754)+(x753)+(x746)+(x745));
IkReal x974=((x673)+(x676)+(x674)+(x675));
IkReal x975=((x799)+(x801)+(x800)+(x802));
IkReal x976=((x856)+(x857)+(x858)+(x859));
IkReal x977=((x667)+(x666)+(x672)+(x670));
IkReal x978=((x829)+(x828)+(x834)+(x835));
IkReal x979=((x669)+(x668)+(x665)+(x671));
IkReal x980=((x682)+(x681)+(x686)+(x685));
IkReal x981=((x823)+(x822)+(x824)+(x831));
IkReal x982=((IkReal(2.00000000000000))+(x959));
IkReal x983=((x755)+(x768)+(x764)+(x765)+(x761)+(x762));
IkReal x984=((x776)+(x778)+(x783)+(x787)+(x784)+(x788));
IkReal x985=((((IkReal(0.181661459944250))*(x551)))+(((IkReal(0.181661459944250))*(x558)))+(((IkReal(1.33722090500000))*(x576)))+(((IkReal(1.33722090500000))*(x600)))+(x974));
IkReal x986=((((IkReal(0.000485107444250000))*(x558)))+(((IkReal(0.000485107444250000))*(x551)))+(((IkReal(0.00357090500000000))*(x600)))+(x974)+(((IkReal(0.00357090500000000))*(x576))));
IkReal x987=((x819)+(x816)+(x812)+(x813)+(x810)+(x811)+(x820)+(x809));
IkReal x988=((x791)+(x793)+(x792)+(x795)+(x794)+(x797)+(x796)+(x798));
IkReal x989=((x699)+(x702)+(x700)+(x701)+(x959));
IkReal x990=((x852)+(x850)+(x851)+(x845)+(x847)+(x846)+(x849)+(x848));
IkReal x991=((x837)+(x839)+(x841)+(x842)+(x910)+(x907)+(x908)+(x909));
IkReal x992=((x775)+(x782)+(x785)+(x789)+(x897)+(x898)+(x899)+(x900)+(x901)+(x902));
IkReal x993=((x869)+(x867)+(x878)+(x870)+(x871)+(x872)+(x873)+(x874)+(x875)+(x877)+(x912)+(x911));
IkReal x994=((x885)+(x884)+(x887)+(x886)+(x881)+(x883)+(x882)+(x889)+(x913)+(x916)+(x915)+(x914));
IkReal x995=((x853)+(x854)+(x855)+(x864)+(x863)+(x862)+(x861)+(x860)+(x910)+(x907)+(x908)+(x909));
IkReal x996=((x821)+(x827)+(x826)+(x825)+(x836)+(x830)+(x832)+(x833)+(x904)+(x905)+(x906)+(x903));
IkReal x997=((IkReal(0.0946500000000000))+(x757)+(x756)+(x758)+(x771)+(x774)+(x769)+(x766)+(x763)+(x896)+(x894)+(x895)+(x892)+(x893)+(x891));
op[53]=((((IkReal(0.00243405773325000))*(gconst1_1)*(r21)))+(((IkReal(-1.00000000000000))*(x584)*(x633)))+(((IkReal(-1.00000000000000))*(x633)*(x639)))+(((x598)*(x649)))+(((IkReal(0.0103310475000000))*(gconst1_4)*(r21)))+(((IkReal(-0.00242572735012500))*(x639)))+(((IkReal(0.00243405773325000))*(gconst0_1)*(r20)))+(pz)+(((IkReal(0.0103310475000000))*(gconst0_4)*(r20)))+(((IkReal(-0.00252715500000000))*(x606)))+(((x590)*(x649)))+(((IkReal(-0.00242572735012500))*(x584)))+(((IkReal(-0.00252715500000000))*(x642)))+(((IkReal(0.00309978750000000))*(x546)))+(((IkReal(0.00309978750000000))*(x547)))+(((IkReal(0.000168993079125000))*(x590)))+(((IkReal(0.000168993079125000))*(x598))));
op[54]=((((IkReal(-1.00000000000000))*(x985)))+(x947));
op[55]=((((IkReal(-1.00000000000000))*(x921)))+(((IkReal(-0.362548151036500))*(x566)))+(x964)+(((IkReal(2.66873869000000))*(x589)))+(((IkReal(0.362548151036500))*(x572)))+(((IkReal(0.362548151036500))*(x574)))+(((IkReal(-0.362548151036500))*(x552)))+(((IkReal(2.66873869000000))*(x553))));
op[56]=((((IkReal(-1.00000000000000))*(x947)))+(x985));
op[57]=((((IkReal(-1.00000000000000))*(x921)))+(((IkReal(-1.00000000000000))*(x942)))+(x979)+(x964)+(x943)+(((IkReal(-1.00000000000000))*(x977))));
op[58]=((((IkReal(0.219822620000000))*(x576)))+(((IkReal(0.0298629029270000))*(x558)))+(((IkReal(0.0298629029270000))*(x551)))+(((IkReal(0.213600000000000))*(x621)))+(((IkReal(-0.0298629029270000))*(x573)))+(((IkReal(-0.0290175600000000))*(x622)))+(((IkReal(0.0290175600000000))*(x614)))+(((IkReal(0.213600000000000))*(x569)))+(((IkReal(-0.0290175600000000))*(x599)))+(((IkReal(-0.0298629029270000))*(x554)))+(((IkReal(0.0290175600000000))*(x603)))+(((IkReal(0.219822620000000))*(x600))));
op[59]=((x921)+(x942)+(x943)+(((IkReal(-1.00000000000000))*(x964)))+(((IkReal(-1.00000000000000))*(x979)))+(((IkReal(-1.00000000000000))*(x977))));
op[60]=((((IkReal(-1.00000000000000))*(x948)))+(x986));
op[61]=((((IkReal(0.000195446036500000))*(x552)))+(((IkReal(0.000195446036500000))*(x566)))+(((IkReal(-0.000195446036500000))*(x574)))+(((IkReal(-0.000195446036500000))*(x572)))+(((IkReal(-0.00143869000000000))*(x589)))+(((IkReal(-0.00143869000000000))*(x553)))+(x921)+(((IkReal(-1.00000000000000))*(x964))));
op[62]=((((IkReal(-1.00000000000000))*(x986)))+(x948));
op[63]=((IkReal(-2.00000000000000))+(((IkReal(-1.00000000000000))*(x980)))+(((IkReal(-1.00000000000000))*(x959))));
op[64]=((((IkReal(2.66873869000000))*(x604)))+(x961)+(((IkReal(2.66873869000000))*(x588)))+(((IkReal(2.66873869000000))*(x545)))+(((IkReal(2.66873869000000))*(x559))));
op[65]=((x980)+(x982));
op[66]=((x961)+(x968)+(((IkReal(-1.00000000000000))*(x967))));
op[67]=((IkReal(8.00000000000000))+(((IkReal(0.219822620000000))*(x548)))+(((IkReal(0.213600000000000))*(x627)))+(((IkReal(0.219822620000000))*(x555)))+(((r10)*(x629)))+(((r01)*(x648)))+(((r00)*(x582)))+(((IkReal(0.219822620000000))*(x560)))+(((IkReal(0.219822620000000))*(x602))));
op[68]=((((IkReal(-1.00000000000000))*(x967)))+(((IkReal(-1.00000000000000))*(x961)))+(((IkReal(-1.00000000000000))*(x968))));
op[69]=((x699)+(x702)+(x700)+(x701)+(x982));
op[70]=((((IkReal(-0.00143869000000000))*(x545)))+(((IkReal(-0.00143869000000000))*(x604)))+(((IkReal(-0.00143869000000000))*(x588)))+(((IkReal(-0.00143869000000000))*(x559)))+(((IkReal(-1.00000000000000))*(x961))));
op[71]=((IkReal(-2.00000000000000))+(((IkReal(-1.00000000000000))*(x989))));
op[72]=((((IkReal(-1.00000000000000))*(x949)))+(x950));
op[73]=((((IkReal(-1.00000000000000))*(x920)))+(((IkReal(-2.66873869000000))*(x574)))+(((IkReal(-2.66873869000000))*(x572)))+(((r11)*(x565)))+(x944)+(((IkReal(2.66873869000000))*(x552))));
op[74]=((((IkReal(-1.00000000000000))*(x950)))+(x949));
op[75]=((((IkReal(-1.00000000000000))*(x929)))+(((IkReal(-1.00000000000000))*(x920)))+(x925)+(x965)+(((IkReal(-1.00000000000000))*(x937))));
op[76]=((((IkReal(0.219822620000000))*(x573)))+(((IkReal(0.213600000000000))*(x622)))+(((r10)*(x582)))+(((IkReal(0.219822620000000))*(x554)))+(((IkReal(-0.219822620000000))*(x551)))+(((IkReal(-0.219822620000000))*(x558)))+(((IkReal(-0.213600000000000))*(x603)))+(((IkReal(-0.213600000000000))*(x614))));
op[77]=((x929)+(x925)+(x920)+(((IkReal(-1.00000000000000))*(x965)))+(((IkReal(-1.00000000000000))*(x937))));
op[78]=((((IkReal(-1.00000000000000))*(x951)))+(x952));
op[79]=((((IkReal(-1.00000000000000))*(x944)))+(((IkReal(-0.00143869000000000))*(x566)))+(((IkReal(0.00143869000000000))*(x572)))+(((IkReal(0.00143869000000000))*(x574)))+(((IkReal(-0.00143869000000000))*(x552)))+(x920));
op[80]=((((IkReal(-1.00000000000000))*(x952)))+(x951));
op[81]=x953;
op[82]=((IkReal(-4.00000000000000))+(((IkReal(-2.66873869000000))*(x590)))+(((IkReal(-2.66873869000000))*(x598)))+(((IkReal(-1.00000000000000))*(x938))));
op[83]=((IkReal(-1.00000000000000))*(x953));
op[84]=((IkReal(-4.00000000000000))+(((IkReal(-1.00000000000000))*(x926)))+(x927)+(((IkReal(-1.00000000000000))*(x938))));
op[85]=((((IkReal(-0.213600000000000))*(x581)))+(((IkReal(-0.213600000000000))*(x587)))+(((IkReal(-0.219822620000000))*(x641)))+(((IkReal(-0.219822620000000))*(x562))));
op[86]=((x926)+(x927)+(x946));
op[87]=((IkReal(-1.00000000000000))*(x954));
op[88]=((((IkReal(0.00143869000000000))*(x598)))+(((IkReal(0.00143869000000000))*(x590)))+(x946));
op[89]=x954;
op[90]=((((IkReal(-1.00000000000000))*(x955)))+(x956));
op[91]=((((IkReal(-2.66873869000000))*(x644)))+(((IkReal(2.66873869000000))*(x626)))+(((rxp1_1)*(x565)))+(((IkReal(-2.66873869000000))*(x634)))+(x933)+(((IkReal(-1.00000000000000))*(x930))));
op[92]=((((IkReal(-1.00000000000000))*(x956)))+(x955));
op[93]=((x935)+(x934)+(x933)+(((IkReal(-1.00000000000000))*(x930)))+(((IkReal(-1.00000000000000))*(x931)))+(((IkReal(-1.00000000000000))*(x932))));
op[94]=((((IkReal(-0.213600000000000))*(x651)))+(((rxp1_1)*(x648)))+(((IkReal(0.219822620000000))*(x625)))+(((IkReal(-1.00000000000000))*(rxp0_0)*(x629)))+(((IkReal(0.219822620000000))*(x638)))+(((IkReal(-0.219822620000000))*(x650)))+(((rxp0_1)*(x582)))+(((IkReal(-0.219822620000000))*(x632))));
op[95]=((x934)+(x931)+(x930)+(((IkReal(-1.00000000000000))*(x935)))+(((IkReal(-1.00000000000000))*(x932)))+(((IkReal(-1.00000000000000))*(x933))));
op[96]=((((IkReal(-1.00000000000000))*(x957)))+(x958));
op[97]=((((IkReal(0.00143869000000000))*(x634)))+(((IkReal(-0.00143869000000000))*(x626)))+(((IkReal(-0.00143869000000000))*(x654)))+(x930)+(((IkReal(0.00143869000000000))*(x644)))+(((IkReal(-1.00000000000000))*(x933))));
op[98]=((((IkReal(-1.00000000000000))*(x958)))+(x957));
op[99]=((IkReal(1.63450000000000))+(((IkReal(-1.00000000000000))*(x969))));
op[100]=((((IkReal(0.252596117008500))*(x590)))+(((IkReal(0.252596117008500))*(x598)))+(x939));
op[101]=((IkReal(1.63450000000000))+(x969));
op[102]=((((IkReal(-1.00000000000000))*(x924)))+(x939)+(x940));
op[103]=((((IkReal(0.0202172400000000))*(x581)))+(((IkReal(0.0202172400000000))*(x587)))+(((IkReal(0.0208062109830000))*(x641)))+(((IkReal(0.0208062109830000))*(x562))));
op[104]=((((IkReal(-1.00000000000000))*(x924)))+(((IkReal(-1.00000000000000))*(x940)))+(((IkReal(-1.00000000000000))*(x939))));
op[105]=((IkReal(0.0655000000000000))+(x973));
op[106]=((((IkReal(-0.000136172008500000))*(x598)))+(((IkReal(-0.000136172008500000))*(x590)))+(((IkReal(-1.00000000000000))*(x939))));
op[107]=((IkReal(0.0655000000000000))+(((IkReal(-1.00000000000000))*(x973))));
op[108]=((((IkReal(-1.00000000000000))*(x984)))+(((IkReal(-1.00000000000000))*(x918)))+(((IkReal(-1.00000000000000))*(x992)))+(x923)+(x997)+(x983)+(x960)+(((IkReal(-1.00000000000000))*(x972))));
op[109]=((IkReal(-1.63450000000000))+(((IkReal(-0.0118573004550000))*(x564)))+(((IkReal(-1.33436934500000))*(x576)))+(((IkReal(-0.0118573004550000))*(x591)))+(((IkReal(-0.0872823000000000))*(x549)))+(((IkReal(0.181274075518250))*(x573)))+(((IkReal(0.0118573004550000))*(x607)))+(((IkReal(-1.00000000000000))*(x919)))+(((IkReal(-0.0872823000000000))*(x585)))+(((IkReal(-1.33436934500000))*(x600)))+(((IkReal(0.0118573004550000))*(x575)))+(((IkReal(0.181274075518250))*(x554)))+(x974)+(((IkReal(-0.181274075518250))*(x551)))+(((IkReal(-0.181274075518250))*(x558))));
op[110]=((((IkReal(-1.00000000000000))*(x923)))+(((IkReal(-1.00000000000000))*(x984)))+(((IkReal(-1.00000000000000))*(x992)))+(x918)+(x997)+(x983)+(x972)+(((IkReal(-1.00000000000000))*(x960))));
op[111]=((IkReal(-0.850000000000000))+(((IkReal(-1.00000000000000))*(x988)))+(((IkReal(-1.00000000000000))*(x919)))+(x975)+(x974));
op[112]=((((IkReal(-0.0149314514635000))*(x566)))+(((IkReal(0.0149314514635000))*(x572)))+(((IkReal(0.0149314514635000))*(x574)))+(((IkReal(0.109911310000000))*(x589)))+(((IkReal(0.109911310000000))*(x553)))+(x921)+(((IkReal(-1.00000000000000))*(x964)))+(((IkReal(-0.0149314514635000))*(x552))));
op[113]=((IkReal(0.850000000000000))+(x919)+(x988)+(((IkReal(-1.00000000000000))*(x974)))+(((IkReal(-1.00000000000000))*(x975))));
op[114]=((((IkReal(-1.00000000000000))*(x987)))+(((IkReal(-1.00000000000000))*(x917)))+(((IkReal(-1.00000000000000))*(x992)))+(x918)+(x997)+(x962)+(x963)+(((IkReal(-1.00000000000000))*(x960))));
op[115]=((IkReal(0.0655000000000000))+(((IkReal(0.000475162545000000))*(x564)))+(((IkReal(9.77230182500000e-5))*(x551)))+(((IkReal(9.77230182500000e-5))*(x558)))+(((IkReal(0.000719345000000000))*(x576)))+(((IkReal(0.00349770000000000))*(x585)))+(((IkReal(0.000475162545000000))*(x591)))+(((IkReal(-9.77230182500000e-5))*(x573)))+(((IkReal(-9.77230182500000e-5))*(x554)))+(((IkReal(0.00349770000000000))*(x549)))+(((IkReal(0.000719345000000000))*(x600)))+(((IkReal(-0.000475162545000000))*(x607)))+(x919)+(((IkReal(-1.00000000000000))*(x974)))+(((IkReal(-0.000475162545000000))*(x575))));
op[116]=((((IkReal(-1.00000000000000))*(x987)))+(((IkReal(-1.00000000000000))*(x918)))+(((IkReal(-1.00000000000000))*(x992)))+(x917)+(x997)+(x962)+(x960)+(((IkReal(-1.00000000000000))*(x963))));
op[117]=((((IkReal(-1.00000000000000))*(x981)))+(((IkReal(-1.00000000000000))*(x991)))+(x996)+(x970)+(x978));
op[118]=((((IkReal(-1.33436934500000))*(x555)))+(((IkReal(-1.33436934500000))*(x548)))+(((IkReal(-1.33436934500000))*(x560)))+(((IkReal(-1.33436934500000))*(x602)))+(((IkReal(-0.0872823000000000))*(x592)))+(((IkReal(-0.0872823000000000))*(x611)))+(((IkReal(-0.0872823000000000))*(x646)))+(x982)+(((IkReal(-0.0872823000000000))*(x636))));
op[119]=((((IkReal(-1.00000000000000))*(x991)))+(x996)+(x981)+(x978)+(((IkReal(-1.00000000000000))*(x970))));
op[120]=((((IkReal(-1.00000000000000))*(x990)))+(x982));
op[121]=((((IkReal(0.109911310000000))*(x588)))+(((IkReal(0.109911310000000))*(x559)))+(((IkReal(-1.00000000000000))*(x961)))+(((IkReal(0.109911310000000))*(x545)))+(((IkReal(0.109911310000000))*(x604))));
op[122]=((IkReal(-2.00000000000000))+(((IkReal(-1.00000000000000))*(x959)))+(x990));
op[123]=((((IkReal(-1.00000000000000))*(x995)))+(x996)+(x976)+(((IkReal(-1.00000000000000))*(x970))));
op[124]=((IkReal(-2.00000000000000))+(((IkReal(0.00349770000000000))*(x636)))+(((IkReal(0.000719345000000000))*(x548)))+(((IkReal(0.000719345000000000))*(x555)))+(((IkReal(0.00349770000000000))*(x646)))+(((IkReal(0.000719345000000000))*(x602)))+(((IkReal(0.00349770000000000))*(x611)))+(((IkReal(0.000719345000000000))*(x560)))+(((IkReal(-1.00000000000000))*(x959)))+(((IkReal(0.00349770000000000))*(x592))));
op[125]=((((IkReal(-1.00000000000000))*(x995)))+(x996)+(x970)+(((IkReal(-1.00000000000000))*(x976))));
op[126]=((((IkReal(-1.00000000000000))*(x994)))+(x993)+(x971)+(((IkReal(-1.00000000000000))*(x966))));
op[127]=((((IkReal(-1.33436934500000))*(x554)))+(((IkReal(-1.33436934500000))*(x573)))+(((IkReal(-1.00000000000000))*(x941)))+(((IkReal(-0.0872823000000000))*(x607)))+(((IkReal(0.0872823000000000))*(x564)))+(x936)+(((IkReal(-0.0872823000000000))*(x575)))+(((IkReal(1.33436934500000))*(x551)))+(((IkReal(1.33436934500000))*(x558)))+(((IkReal(0.0872823000000000))*(x591))));
op[128]=((((IkReal(-1.00000000000000))*(x994)))+(x993)+(x966)+(((IkReal(-1.00000000000000))*(x971))));
op[129]=((((IkReal(0.0453900000000000))*(x564)))+(((IkReal(-0.0521040950000000))*(x573)))+(((IkReal(-0.0453900000000000))*(x575)))+(((IkReal(-1.00000000000000))*(x941)))+(((IkReal(-0.0453900000000000))*(x607)))+(((IkReal(0.0453900000000000))*(x591)))+(((IkReal(-0.0521040950000000))*(x554)))+(x936)+(((IkReal(0.0521040950000000))*(x558)))+(((IkReal(0.0521040950000000))*(x551))));
IkReal x998=((gconst7_7)*(rxp1_1));
IkReal x999=((IkReal(0.106800000000000))*(gconst7_5));
IkReal x1000=((gconst0_3)*(r20));
IkReal x1001=((gconst6_2)*(r10));
IkReal x1002=((IkReal(1.00000000000000))*(pp));
IkReal x1003=((gconst4_0)*(r01));
IkReal x1004=((gconst1_2)*(r21));
IkReal x1005=((IkReal(0.0946500000000000))*(pp));
IkReal x1006=((gconst1_4)*(r21));
IkReal x1007=((gconst0_2)*(r20));
IkReal x1008=((gconst0_1)*(r20));
IkReal x1009=((IkReal(0.189300000000000))*(pz));
IkReal x1010=((gconst3_7)*(rxp0_0));
IkReal x1011=((gconst3_1)*(r00));
IkReal x1012=((gconst1_3)*(r21));
IkReal x1013=((gconst1_1)*(r21));
IkReal x1014=((gconst3_1)*(rxp0_0));
IkReal x1015=((gconst6_3)*(rxp0_1));
IkReal x1016=((gconst6_1)*(r10));
IkReal x1017=((IkReal(0.0267000000000000))*(gconst6_5));
IkReal x1018=((gconst3_2)*(r00));
IkReal x1019=((gconst4_0)*(rxp1_0));
IkReal x1020=((gconst0_5)*(r20));
IkReal x1021=((gconst1_5)*(r21));
IkReal x1022=((gconst7_2)*(rxp1_1));
IkReal x1023=((IkReal(0.0257164050000000))*(gconst7_1));
IkReal x1024=((gconst4_2)*(rxp1_0));
IkReal x1025=((gconst1_0)*(r21));
IkReal x1026=((gconst0_0)*(r20));
IkReal x1027=((gconst4_7)*(rxp1_0));
IkReal x1028=((gconst6_7)*(r10));
IkReal x1029=((gconst0_7)*(r20));
IkReal x1030=((gconst6_1)*(rxp0_1));
IkReal x1031=((IkReal(0.0534000000000000))*(gconst6_6));
IkReal x1032=((gconst3_7)*(r00));
IkReal x1033=((gconst4_1)*(rxp1_0));
IkReal x1034=((gconst1_7)*(r21));
IkReal x1035=((gconst7_0)*(rxp1_1));
IkReal x1036=((gconst7_0)*(r11));
IkReal x1037=((gconst7_3)*(rxp1_1));
IkReal x1038=((IkReal(0.0534000000000000))*(gconst3_6));
IkReal x1039=((IkReal(0.106800000000000))*(gconst6_5));
IkReal x1040=((IkReal(0.109150000000000))*(gconst3_4));
IkReal x1041=((gconst3_2)*(rxp0_0));
IkReal x1042=((gconst0_6)*(r20));
IkReal x1043=((gconst7_1)*(r11));
IkReal x1044=((IkReal(0.0327500000000000))*(gconst4_3));
IkReal x1045=((gconst6_7)*(rxp0_1));
IkReal x1046=((IkReal(0.0521040950000000))*(gconst6_0));
IkReal x1047=((IkReal(0.109150000000000))*(gconst7_4));
IkReal x1048=((gconst7_7)*(r11));
IkReal x1049=((IkReal(0.0534000000000000))*(gconst7_6));
IkReal x1050=((gconst4_5)*(r01));
IkReal x1051=((IkReal(0.0534000000000000))*(gconst4_6));
IkReal x1052=((gconst4_7)*(r01));
IkReal x1053=((gconst3_0)*(rxp0_0));
IkReal x1054=((gconst4_5)*(rxp1_0));
IkReal x1055=((gconst3_0)*(r00));
IkReal x1056=((IkReal(0.106800000000000))*(gconst3_5));
IkReal x1057=((gconst1_6)*(r21));
IkReal x1058=((gconst6_2)*(rxp0_1));
IkReal x1059=((IkReal(0.0179172450000000))*(pz));
IkReal x1060=((gconst3_3)*(rxp0_0));
IkReal x1061=((IkReal(0.0267000000000000))*(gconst7_5));
IkReal x1062=((IkReal(0.109150000000000))*(gconst6_4));
IkReal x1063=((gconst6_0)*(rxp0_1));
IkReal x1064=((IkReal(0.109150000000000))*(gconst4_4));
IkReal x1065=((gconst4_1)*(r01));
IkReal x1066=((gconst7_1)*(rxp1_1));
IkReal x1067=((gconst7_2)*(r11));
IkReal x1068=((gconst4_2)*(r01));
IkReal x1069=((IkReal(0.0267000000000000))*(gconst3_5));
IkReal x1070=((gconst0_4)*(r20));
IkReal x1071=((r01)*(x1051));
IkReal x1072=((r00)*(x1038));
IkReal x1073=((r10)*(x1031));
IkReal x1074=((r11)*(x1049));
IkReal x1075=((r10)*(x1017));
IkReal x1076=((r01)*(x1044));
IkReal x1077=((IkReal(0.0256283925000000))*(x1018));
IkReal x1078=((IkReal(0.00178545250000000))*(x1052));
IkReal x1079=((pp)*(x1068));
IkReal x1080=((IkReal(0.00178545250000000))*(x1032));
IkReal x1081=((pp)*(x1018));
IkReal x1082=((IkReal(0.0257164050000000))*(x1016));
IkReal x1083=((r11)*(x1047));
IkReal x1084=((IkReal(0.0256283925000000))*(x1068));
IkReal x1085=((r11)*(x1023));
IkReal x1086=((IkReal(0.0327500000000000))*(gconst3_3)*(r00));
IkReal x1087=((r11)*(x1061));
IkReal x1088=((r10)*(x1062));
IkReal x1089=((IkReal(0.0256283925000000))*(x1067));
IkReal x1090=((IkReal(0.00178545250000000))*(x1028));
IkReal x1091=((IkReal(0.00178545250000000))*(x1048));
IkReal x1092=((IkReal(0.0257164050000000))*(x1065));
IkReal x1093=((r00)*(x1069));
IkReal x1094=((r01)*(x1064));
IkReal x1095=((IkReal(0.0327500000000000))*(gconst7_3)*(r11));
IkReal x1096=((IkReal(0.0257164050000000))*(x1011));
IkReal x1097=((IkReal(0.0327500000000000))*(gconst6_3)*(r10));
IkReal x1098=((IkReal(0.0267000000000000))*(x1050));
IkReal x1099=((IkReal(0.0256283925000000))*(x1001));
IkReal x1100=((r00)*(x1040));
IkReal x1101=((pp)*(x1007));
IkReal x1102=((IkReal(0.0267000000000000))*(x1020));
IkReal x1103=((IkReal(0.817250000000000))*(x1012));
IkReal x1104=((IkReal(0.817250000000000))*(x1000));
IkReal x1105=((pp)*(x1004));
IkReal x1106=((IkReal(0.0267000000000000))*(x1021));
IkReal x1107=((IkReal(0.668610452500000))*(x1029));
IkReal x1108=((IkReal(0.109150000000000))*(x1070));
IkReal x1109=((IkReal(0.0257164050000000))*(x1013));
IkReal x1110=((IkReal(0.641196607500000))*(x1004));
IkReal x1111=((IkReal(0.641196607500000))*(x1007));
IkReal x1112=((IkReal(0.0257164050000000))*(x1008));
IkReal x1113=((IkReal(0.109150000000000))*(x1006));
IkReal x1114=((IkReal(0.668610452500000))*(x1034));
IkReal x1115=((IkReal(0.00178545250000000))*(x1029));
IkReal x1116=((IkReal(0.0327500000000000))*(x1000));
IkReal x1117=((IkReal(0.0327500000000000))*(x1012));
IkReal x1118=((IkReal(0.0256283925000000))*(x1007));
IkReal x1119=((IkReal(0.00178545250000000))*(x1034));
IkReal x1120=((IkReal(0.0256283925000000))*(x1004));
IkReal x1121=((rxp0_1)*(x1062));
IkReal x1122=((IkReal(0.641196607500000))*(x1022));
IkReal x1123=((IkReal(0.0267000000000000))*(x1054));
IkReal x1124=((rxp0_0)*(x1069));
IkReal x1125=((IkReal(0.668610452500000))*(x998));
IkReal x1126=((pp)*(x1024));
IkReal x1127=((IkReal(0.0257164050000000))*(x1030));
IkReal x1128=((IkReal(0.817250000000000))*(x1060));
IkReal x1129=((rxp1_1)*(x1047));
IkReal x1130=((pp)*(x1041));
IkReal x1131=((rxp1_1)*(x1023));
IkReal x1132=((IkReal(0.641196607500000))*(x1058));
IkReal x1133=((IkReal(0.817250000000000))*(gconst4_3)*(rxp1_0));
IkReal x1134=((IkReal(0.668610452500000))*(x1045));
IkReal x1135=((IkReal(0.668610452500000))*(x1027));
IkReal x1136=((rxp0_0)*(x1040));
IkReal x1137=((IkReal(0.641196607500000))*(x1041));
IkReal x1138=((rxp0_1)*(x1017));
IkReal x1139=((IkReal(0.817250000000000))*(x1015));
IkReal x1140=((rxp1_1)*(x1061));
IkReal x1141=((IkReal(0.0257164050000000))*(x1033));
IkReal x1142=((IkReal(0.817250000000000))*(x1037));
IkReal x1143=((IkReal(0.0257164050000000))*(x1014));
IkReal x1144=((IkReal(0.668610452500000))*(x1010));
IkReal x1145=((rxp1_0)*(x1064));
IkReal x1146=((IkReal(0.641196607500000))*(x1024));
IkReal x1147=((rxp1_1)*(x1049));
IkReal x1148=((rxp0_1)*(x1031));
IkReal x1149=((rxp0_0)*(x1038));
IkReal x1150=((rxp1_0)*(x1051));
IkReal x1151=((IkReal(0.0327500000000000))*(x1060));
IkReal x1152=((IkReal(0.00178545250000000))*(x1027));
IkReal x1153=((IkReal(0.0256283925000000))*(x1024));
IkReal x1154=((IkReal(0.00178545250000000))*(x1010));
IkReal x1155=((rxp1_0)*(x1044));
IkReal x1156=((IkReal(0.0256283925000000))*(x1041));
IkReal x1157=((IkReal(0.00178545250000000))*(x998));
IkReal x1158=((IkReal(0.0256283925000000))*(x1058));
IkReal x1159=((IkReal(0.0327500000000000))*(x1037));
IkReal x1160=((IkReal(0.0256283925000000))*(x1022));
IkReal x1161=((IkReal(0.0327500000000000))*(x1015));
IkReal x1162=((IkReal(0.00178545250000000))*(x1045));
IkReal x1163=((IkReal(0.00243405773325000))*(x1013));
IkReal x1164=((IkReal(0.0632839793291250))*(x1034));
IkReal x1165=((IkReal(0.0103310475000000))*(x1006));
IkReal x1166=((IkReal(0.0606892588998750))*(x1004));
IkReal x1167=((IkReal(0.00243405773325000))*(x1008));
IkReal x1168=((IkReal(0.0632839793291250))*(x1029));
IkReal x1169=((IkReal(0.0606892588998750))*(x1007));
IkReal x1170=((IkReal(0.0103310475000000))*(x1070));
IkReal x1171=((IkReal(0.00252715500000000))*(x1021));
IkReal x1172=((IkReal(0.0773527125000000))*(x1012));
IkReal x1173=((IkReal(0.00252715500000000))*(x1020));
IkReal x1174=((IkReal(0.0773527125000000))*(x1000));
IkReal x1175=((IkReal(0.00505431000000000))*(x1042));
IkReal x1176=((IkReal(0.00505431000000000))*(x1057));
IkReal x1177=((IkReal(0.00493165259175000))*(x1025));
IkReal x1178=((IkReal(0.00429616350000000))*(x1008));
IkReal x1179=((IkReal(0.00429616350000000))*(x1013));
IkReal x1180=((IkReal(0.00493165259175000))*(x1026));
IkReal x1181=((IkReal(0.00309978750000000))*(x1012));
IkReal x1182=((IkReal(0.00242572735012500))*(x1007));
IkReal x1183=((IkReal(0.000168993079125000))*(x1029));
IkReal x1184=((IkReal(0.000168993079125000))*(x1034));
IkReal x1185=((IkReal(0.00242572735012500))*(x1004));
IkReal x1186=((IkReal(0.00309978750000000))*(x1000));
IkReal x1187=((x1009)*(x1028));
IkReal x1188=((x1009)*(x1048));
IkReal x1189=((x1009)*(x1052));
IkReal x1190=((x1009)*(x1032));
IkReal x1191=((x1001)*(x1002));
IkReal x1192=((x1002)*(x1067));
IkReal x1193=((x1009)*(x1029));
IkReal x1194=((x1009)*(x1034));
IkReal x1195=((x1009)*(x998));
IkReal x1196=((x1009)*(x1045));
IkReal x1197=((x1002)*(x1022));
IkReal x1198=((x1002)*(x1058));
IkReal x1199=((x1009)*(x1027));
IkReal x1200=((x1009)*(x1010));
IkReal x1201=((x1029)*(x1059));
IkReal x1202=((x1034)*(x1059));
IkReal x1203=((x1004)*(x1005));
IkReal x1204=((x1005)*(x1007));
IkReal x1205=((((IkReal(0.0534000000000000))*(x1042)))+(((IkReal(0.0534000000000000))*(x1057))));
IkReal x1206=((x1176)+(x1175));
IkReal x1207=((x1072)+(x1071));
IkReal x1208=((x1147)+(x1148));
IkReal x1209=((x1166)+(x1169));
IkReal x1210=((x1107)+(x1114));
IkReal x1211=((x1106)+(x1102));
IkReal x1212=((x1184)+(x1183));
IkReal x1213=((x1105)+(x1101));
IkReal x1214=((x1104)+(x1103));
IkReal x1215=((x1174)+(x1172));
IkReal x1216=((x1074)+(x1073));
IkReal x1217=((x1164)+(x1168));
IkReal x1218=((x1149)+(x1150));
IkReal x1219=((x1115)+(x1119));
IkReal x1220=((x1204)+(x1203));
IkReal x1221=((((IkReal(0.0521040950000000))*(x1025)))+(((IkReal(0.0521040950000000))*(x1026)))+(((IkReal(0.0453900000000000))*(x1008)))+(((IkReal(0.0453900000000000))*(x1013))));
IkReal x1222=((x1140)+(x1144)+(x1138)+(x1135));
IkReal x1223=((x1128)+(x1122)+(x1133)+(x1132));
IkReal x1224=((x1078)+(x1075)+(x1087)+(x1080));
IkReal x1225=((x1142)+(x1146)+(x1139)+(x1137));
IkReal x1226=((x1140)+(x1154)+(x1152)+(x1138));
IkReal x1227=((x1159)+(x1158)+(x1160)+(x1161));
IkReal x1228=((x1155)+(x1156)+(x1151)+(x1153));
IkReal x1229=((x1157)+(x1123)+(x1124)+(x1162));
IkReal x1230=((x1186)+(x1185)+(x1182)+(x1181));
IkReal x1231=((x1090)+(x1091)+(x1093)+(x1098));
IkReal x1232=((x1117)+(x1116)+(x1118)+(x1120));
IkReal x1233=((x1180)+(x1177)+(x1179)+(x1178));
IkReal x1234=((x1123)+(x1124)+(x1125)+(x1134));
IkReal x1235=((x1173)+(x1171)+(x1220));
IkReal x1236=((x1218)+(((IkReal(0.0453900000000000))*(x1030)))+(((IkReal(0.0521040950000000))*(x1035)))+(((IkReal(0.0453900000000000))*(x1066)))+(((rxp0_1)*(x1046))));
IkReal x1237=((x1208)+(((IkReal(0.0453900000000000))*(x1033)))+(((IkReal(0.0521040950000000))*(x1019)))+(((IkReal(0.0453900000000000))*(x1014)))+(((IkReal(0.0521040950000000))*(x1053))));
IkReal x1238=((x1108)+(x1109)+(x1113)+(x1112)+(x1193)+(x1194));
IkReal x1239=((x1165)+(x1167)+(x1163)+(x1170)+(x1201)+(x1202)+(pz));
IkReal x1240=((x1129)+(x1121)+(x1126)+(x1127)+(x1131)+(x1130)+(x1195)+(x1196));
IkReal x1241=((x1111)+(x1110)+(x1238));
IkReal x1242=((x1173)+(x1171)+(x1239));
IkReal x1243=((x1143)+(x1141)+(x1145)+(x1136)+(x1199)+(x1198)+(x1197)+(x1200));
IkReal x1244=((x1188)+(x1187)+(x1079)+(x1076)+(x1077)+(x1086)+(x1085)+(x1084)+(x1083)+(x1082)+(x1081)+(x1088));
IkReal x1245=((x1100)+(x1189)+(x1191)+(x1190)+(x1192)+(x1094)+(x1095)+(x1096)+(x1097)+(x1092)+(x1099)+(x1089));
op[130]=((((IkReal(-1.00000000000000))*(r10)*(x1039)))+(((IkReal(0.109911310000000))*(x1028)))+(((IkReal(-0.109911310000000))*(x1032)))+(((IkReal(0.106800000000000))*(x1050)))+(((IkReal(-1.00000000000000))*(r11)*(x999)))+(((r00)*(x1056)))+(((IkReal(-0.109911310000000))*(x1052)))+(((IkReal(0.109911310000000))*(x1048))));
op[131]=((((IkReal(-0.0453900000000000))*(x1011)))+(((IkReal(0.0453900000000000))*(x1043)))+(((IkReal(-0.0521040950000000))*(x1055)))+(x1207)+(((IkReal(-0.0453900000000000))*(x1065)))+(((IkReal(-0.0521040950000000))*(x1003)))+(((r10)*(x1046)))+(((IkReal(0.0453900000000000))*(x1016)))+(((IkReal(-1.00000000000000))*(x1216)))+(((IkReal(0.0521040950000000))*(x1036))));
op[132]=((x1244)+(x1231)+(((IkReal(-1.00000000000000))*(x1224)))+(((IkReal(-1.00000000000000))*(x1245))));
op[133]=((x1207)+(((IkReal(-0.00349770000000000))*(x1011)))+(((IkReal(-0.000719345000000000))*(x1055)))+(((IkReal(0.00349770000000000))*(x1016)))+(((IkReal(0.000719345000000000))*(x1036)))+(((IkReal(-0.000719345000000000))*(x1003)))+(((IkReal(0.000719345000000000))*(gconst6_0)*(r10)))+(((IkReal(-1.00000000000000))*(x1216)))+(((IkReal(0.00349770000000000))*(x1043)))+(((IkReal(-0.00349770000000000))*(x1065))));
op[134]=((x1244)+(x1224)+(((IkReal(-1.00000000000000))*(x1231)))+(((IkReal(-1.00000000000000))*(x1245))));
op[135]=((IkReal(-1.00000000000000))+(x1213)+(x1210)+(x1214)+(((IkReal(-1.00000000000000))*(x1241)))+(((IkReal(-1.00000000000000))*(x1211))));
op[136]=((((IkReal(0.0872823000000000))*(x1008)))+(((IkReal(0.0872823000000000))*(x1013)))+(((IkReal(-1.00000000000000))*(x1205)))+(((IkReal(1.33436934500000))*(x1026)))+(((IkReal(1.33436934500000))*(x1025))));
op[137]=((IkReal(1.00000000000000))+(x1213)+(x1211)+(x1214)+(((IkReal(-1.00000000000000))*(x1241)))+(((IkReal(-1.00000000000000))*(x1210))));
op[138]=((x1221)+(((IkReal(-1.00000000000000))*(x1205))));
op[139]=((IkReal(4.00000000000000))+(((IkReal(-0.109911310000000))*(x1034)))+(((IkReal(0.106800000000000))*(x1020)))+(((IkReal(0.106800000000000))*(x1021)))+(((IkReal(-0.109911310000000))*(x1029))));
op[140]=((x1205)+(((IkReal(-1.00000000000000))*(x1221))));
op[141]=((IkReal(1.00000000000000))+(x1232)+(x1213)+(x1211)+(((IkReal(-1.00000000000000))*(x1238)))+(((IkReal(-1.00000000000000))*(x1219))));
op[142]=((x1205)+(((IkReal(-0.00349770000000000))*(x1013)))+(((IkReal(-0.00349770000000000))*(x1008)))+(((IkReal(-0.000719345000000000))*(x1025)))+(((IkReal(-0.000719345000000000))*(x1026))));
op[143]=((IkReal(-1.00000000000000))+(x1232)+(x1213)+(x1219)+(((IkReal(-1.00000000000000))*(x1238)))+(((IkReal(-1.00000000000000))*(x1211))));
op[144]=((IkReal(-0.817250000000000))+(x1240)+(x1223)+(x1222)+(((IkReal(-1.00000000000000))*(x1225)))+(((IkReal(-1.00000000000000))*(x1234)))+(((IkReal(-1.00000000000000))*(x1243))));
op[145]=((((IkReal(-1.33436934500000))*(x1035)))+(((IkReal(1.33436934500000))*(x1019)))+(x1208)+(((IkReal(-1.33436934500000))*(x1063)))+(((IkReal(-0.0872823000000000))*(x1030)))+(((IkReal(1.33436934500000))*(x1053)))+(((IkReal(0.0872823000000000))*(x1033)))+(((IkReal(-0.0872823000000000))*(x1066)))+(((IkReal(0.0872823000000000))*(x1014)))+(((IkReal(-1.00000000000000))*(x1218))));
op[146]=((IkReal(0.817250000000000))+(x1240)+(x1234)+(x1223)+(((IkReal(-1.00000000000000))*(x1222)))+(((IkReal(-1.00000000000000))*(x1225)))+(((IkReal(-1.00000000000000))*(x1243))));
op[147]=((x1237)+(((IkReal(-1.00000000000000))*(x1236))));
op[148]=((IkReal(1.70000000000000))+(((IkReal(0.106800000000000))*(x1054)))+(((IkReal(-0.109911310000000))*(x1010)))+(((IkReal(-1.00000000000000))*(rxp1_1)*(x999)))+(((IkReal(0.109911310000000))*(x998)))+(((IkReal(0.109911310000000))*(x1045)))+(((rxp0_0)*(x1056)))+(((IkReal(-1.00000000000000))*(rxp0_1)*(x1039)))+(((IkReal(-0.109911310000000))*(x1027))));
op[149]=((x1236)+(((IkReal(-1.00000000000000))*(x1237))));
op[150]=((IkReal(0.0327500000000000))+(x1240)+(x1229)+(x1228)+(((IkReal(-1.00000000000000))*(x1226)))+(((IkReal(-1.00000000000000))*(x1227)))+(((IkReal(-1.00000000000000))*(x1243))));
op[151]=((((IkReal(0.00349770000000000))*(x1030)))+(x1218)+(((IkReal(-0.00349770000000000))*(x1014)))+(((IkReal(-0.000719345000000000))*(x1053)))+(((IkReal(0.000719345000000000))*(x1035)))+(((IkReal(-0.00349770000000000))*(x1033)))+(((IkReal(-0.000719345000000000))*(x1019)))+(((IkReal(-1.00000000000000))*(x1208)))+(((IkReal(0.00349770000000000))*(x1066)))+(((IkReal(0.000719345000000000))*(x1063))));
op[152]=((IkReal(-0.0327500000000000))+(x1240)+(x1226)+(x1228)+(((IkReal(-1.00000000000000))*(x1227)))+(((IkReal(-1.00000000000000))*(x1229)))+(((IkReal(-1.00000000000000))*(x1243))));
op[153]=((x1242)+(x1209)+(((IkReal(-1.00000000000000))*(x1220)))+(((IkReal(-1.00000000000000))*(x1215)))+(((IkReal(-1.00000000000000))*(x1217))));
op[154]=((x1206)+(((IkReal(-0.00826126969500000))*(x1008)))+(((IkReal(-0.00826126969500000))*(x1013)))+(((IkReal(-0.126298058504250))*(x1026)))+(((IkReal(-0.126298058504250))*(x1025))));
op[155]=((x1209)+(x1239)+(x1217)+(((IkReal(-1.00000000000000))*(x1235)))+(((IkReal(-1.00000000000000))*(x1215))));
op[156]=((IkReal(-0.784500000000000))+(x1206)+(((IkReal(-1.00000000000000))*(x1233))));
op[157]=((((IkReal(0.0104031054915000))*(x1034)))+(((IkReal(0.0104031054915000))*(x1029)))+(((IkReal(-0.0101086200000000))*(x1020)))+(((IkReal(-0.0101086200000000))*(x1021))));
op[158]=((IkReal(-0.784500000000000))+(x1233)+(((IkReal(-1.00000000000000))*(x1206))));
op[159]=((x1239)+(x1212)+(((IkReal(-1.00000000000000))*(x1235)))+(((IkReal(-1.00000000000000))*(x1230))));
op[160]=((((IkReal(0.000331057305000000))*(x1013)))+(((IkReal(0.000331057305000000))*(x1008)))+(((IkReal(6.80860042500000e-5))*(x1025)))+(((IkReal(6.80860042500000e-5))*(x1026)))+(((IkReal(-1.00000000000000))*(x1206))));
op[161]=((x1242)+(((IkReal(-1.00000000000000))*(x1220)))+(((IkReal(-1.00000000000000))*(x1230)))+(((IkReal(-1.00000000000000))*(x1212))));
solvedialyticpoly12qep(op,zeror,numroots);
IkReal j1array[16], cj1array[16], sj1array[16], j2array[16], cj2array[16], sj2array[16], j3array[16], cj3array[16], sj3array[16];
int numsolutions = 0;
for(int ij1 = 0; ij1 < numroots; ij1 += 3)
{
IkReal htj1 = zeror[ij1+0], htj2 = zeror[ij1+1], htj3 = zeror[ij1+2];
j1array[numsolutions]=((IkReal(2.00000000000000))*(atan(htj1)));
j2array[numsolutions]=((IkReal(2.00000000000000))*(atan(htj2)));
j3array[numsolutions]=((IkReal(2.00000000000000))*(atan(htj3)));
IkReal x1246=(htj1)*(htj1);
IkReal x1247=(htj2)*(htj2);
IkReal x1248=(htj3)*(htj3);
cj1array[numsolutions]=((((IKabs(((IkReal(1.00000000000000))+(x1246))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+(x1246)))):(IkReal)1.0e30))*(((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x1246))))));
cj2array[numsolutions]=((((IKabs(((IkReal(1.00000000000000))+(x1247))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+(x1247)))):(IkReal)1.0e30))*(((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x1247))))));
cj3array[numsolutions]=((((IKabs(((IkReal(1.00000000000000))+(x1248))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+(x1248)))):(IkReal)1.0e30))*(((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x1248))))));
sj1array[numsolutions]=((IkReal(2.00000000000000))*(htj1)*(((IKabs(((IkReal(1.00000000000000))+((htj1)*(htj1)))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+((htj1)*(htj1))))):(IkReal)1.0e30)));
sj2array[numsolutions]=((IkReal(2.00000000000000))*(htj2)*(((IKabs(((IkReal(1.00000000000000))+((htj2)*(htj2)))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+((htj2)*(htj2))))):(IkReal)1.0e30)));
sj3array[numsolutions]=((IkReal(2.00000000000000))*(htj3)*(((IKabs(((IkReal(1.00000000000000))+((htj3)*(htj3)))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+((htj3)*(htj3))))):(IkReal)1.0e30)));
if( j1array[numsolutions] > IKPI )
{
    j1array[numsolutions]-=IK2PI;
}
else if( j1array[numsolutions] < -IKPI )
{
    j1array[numsolutions]+=IK2PI;
}
if( j2array[numsolutions] > IKPI )
{
    j2array[numsolutions]-=IK2PI;
}
else if( j2array[numsolutions] < -IKPI )
{
    j2array[numsolutions]+=IK2PI;
}
if( j3array[numsolutions] > IKPI )
{
    j3array[numsolutions]-=IK2PI;
}
else if( j3array[numsolutions] < -IKPI )
{
    j3array[numsolutions]+=IK2PI;
}
numsolutions++;
}
bool j1valid[16]={true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true};
_nj1 = 16;
_nj2 = 1;
_nj3 = 1;
for(int ij1 = 0; ij1 < numsolutions; ++ij1)
    {
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
_ij2[0] = 0; _ij2[1] = -1;
_ij3[0] = 0; _ij3[1] = -1;
for(int iij1 = ij1+1; iij1 < numsolutions; ++iij1)
{
if( !j1valid[iij1] ) { continue; }
if( IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(cj2array[ij1]-cj2array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij1]-sj2array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(cj3array[ij1]-cj3array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij1]-sj3array[iij1]) < IKFAST_SOLUTION_THRESH &&  1 )
{
    j1valid[iij1]=false; _ij1[1] = iij1; _ij2[1] = 0; _ij3[1] = 0;  break; 
}
}
    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];

    j2 = j2array[ij1]; cj2 = cj2array[ij1]; sj2 = sj2array[ij1];

    j3 = j3array[ij1]; cj3 = cj3array[ij1]; sj3 = sj3array[ij1];

{
IkReal dummyeval[1];
dummyeval[0]=(((r20)*(r20))+((r21)*(r21)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=(((r20)*(r20))+((r21)*(r21)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=(((r20)*(r20))+((r21)*(r21)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j5array[2], cj5array[2], sj5array[2];
bool j5valid[2]={false};
_nj5 = 2;
IkReal x1249=((IkReal(1.00000000000000))*(sj3));
if( IKabs(((IkReal(-1.00000000000000))*(r21))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-1.00000000000000))*(r20))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x1250=((IkReal(1.00000000000000))*(IKatan2(((IkReal(-1.00000000000000))*(r21)), ((IkReal(-1.00000000000000))*(r20)))));
if( ((((r20)*(r20))+((r21)*(r21)))) < (IkReal)-0.00001 )
    continue;
if( (((((IKabs(IKabs(IKsqrt((((r20)*(r20))+((r21)*(r21)))))) != 0)?((IkReal)1/(IKabs(IKsqrt((((r20)*(r20))+((r21)*(r21))))))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj3)*(sj1)*(sj2)))+(((cj1)*(cj2)*(cj3)))+(((IkReal(-1.00000000000000))*(cj2)*(sj1)*(x1249)))+(((IkReal(-1.00000000000000))*(cj1)*(sj2)*(x1249))))))) < -1-IKFAST_SINCOS_THRESH || (((((IKabs(IKabs(IKsqrt((((r20)*(r20))+((r21)*(r21)))))) != 0)?((IkReal)1/(IKabs(IKsqrt((((r20)*(r20))+((r21)*(r21))))))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj3)*(sj1)*(sj2)))+(((cj1)*(cj2)*(cj3)))+(((IkReal(-1.00000000000000))*(cj2)*(sj1)*(x1249)))+(((IkReal(-1.00000000000000))*(cj1)*(sj2)*(x1249))))))) > 1+IKFAST_SINCOS_THRESH )
    continue;
IkReal x1251=IKasin(((((IKabs(IKabs(IKsqrt((((r20)*(r20))+((r21)*(r21)))))) != 0)?((IkReal)1/(IKabs(IKsqrt((((r20)*(r20))+((r21)*(r21))))))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj3)*(sj1)*(sj2)))+(((cj1)*(cj2)*(cj3)))+(((IkReal(-1.00000000000000))*(cj2)*(sj1)*(x1249)))+(((IkReal(-1.00000000000000))*(cj1)*(sj2)*(x1249)))))));
j5array[0]=((((IkReal(-1.00000000000000))*(x1250)))+(((IkReal(-1.00000000000000))*(x1251))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
j5array[1]=((IkReal(3.14159265358979))+(((IkReal(-1.00000000000000))*(x1250)))+(x1251));
sj5array[1]=IKsin(j5array[1]);
cj5array[1]=IKcos(j5array[1]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
if( j5array[1] > IKPI )
{
    j5array[1]-=IK2PI;
}
else if( j5array[1] < -IKPI )
{    j5array[1]+=IK2PI;
}
j5valid[1] = true;
for(int ij5 = 0; ij5 < 2; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 2; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[1];
evalcond[0]=((((IkReal(0.0946500000000000))*(r21)*(IKcos(j5))))+(pz)+(((IkReal(0.392250000000000))*(cj1)*(sj2)))+(((IkReal(0.425000000000000))*(sj1)))+(((IkReal(0.392250000000000))*(cj2)*(sj1)))+(((IkReal(0.0946500000000000))*(r20)*(IKsin(j5)))));
if( IKabs(evalcond[0]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst0;
IkReal x1252=((IkReal(20000.0000000000))*(cj5));
IkReal x1253=((IkReal(20000.0000000000))*(sj5));
gconst0=IKsign(((((py)*(r01)*(x1252)))+(((IkReal(-1.00000000000000))*(px)*(r10)*(x1253)))+(((IkReal(-1.00000000000000))*(px)*(r11)*(x1252)))+(((py)*(r00)*(x1253)))));
IkReal x1254=((IkReal(1.00000000000000))*(px));
dummyeval[0]=((((IkReal(-1.00000000000000))*(cj5)*(r11)*(x1254)))+(((cj5)*(py)*(r01)))+(((IkReal(-1.00000000000000))*(r10)*(sj5)*(x1254)))+(((py)*(r00)*(sj5))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst2;
gconst2=IKsign((((r22)*(r22))+((((cj5)*(cj5))*((r20)*(r20))))+(((IkReal(-2.00000000000000))*(cj5)*(r20)*(r21)*(sj5)))+((((r21)*(r21))*((sj5)*(sj5))))));
dummyeval[0]=(((r22)*(r22))+((((cj5)*(cj5))*((r20)*(r20))))+(((IkReal(-2.00000000000000))*(cj5)*(r20)*(r21)*(sj5)))+((((r21)*(r21))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst1;
IkReal x1255=(cj5)*(cj5);
IkReal x1256=(sj5)*(sj5);
IkReal x1257=((IkReal(1.00000000000000))*(x1256));
IkReal x1258=((IkReal(2.00000000000000))*(cj5)*(sj5));
IkReal x1259=((IkReal(1.00000000000000))*(x1255));
gconst1=IKsign(((((IkReal(-1.00000000000000))*(r00)*(r01)*(x1258)))+(((IkReal(-1.00000000000000))*(x1259)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x1258)))+(((IkReal(-1.00000000000000))*(x1257)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(x1259)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(x1257)*((r10)*(r10))))));
IkReal x1260=(cj5)*(cj5);
IkReal x1261=(sj5)*(sj5);
IkReal x1262=((IkReal(1.00000000000000))*(x1261));
IkReal x1263=((IkReal(2.00000000000000))*(cj5)*(sj5));
IkReal x1264=((IkReal(1.00000000000000))*(x1260));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x1262)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(x1264)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x1263)))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x1263)))+(((IkReal(-1.00000000000000))*(x1262)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(x1264)*((r01)*(r01)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x1265=((sj2)*(sj3));
IkReal x1266=((cj5)*(r01));
IkReal x1267=((cj5)*(r11));
IkReal x1268=((r00)*(sj5));
IkReal x1269=((r10)*(sj5));
IkReal x1270=((sj1)*(x1268));
IkReal x1271=((IkReal(1.00000000000000))*(cj2)*(cj3));
IkReal x1272=((sj1)*(x1269));
IkReal x1273=((IkReal(1.00000000000000))*(cj1)*(cj2)*(sj3));
IkReal x1274=((IkReal(1.00000000000000))*(cj1)*(cj3)*(sj2));
if( IKabs(((gconst1)*(((((x1265)*(x1272)))+(((IkReal(-1.00000000000000))*(x1267)*(x1274)))+(((IkReal(-1.00000000000000))*(x1267)*(x1273)))+(((sj1)*(x1265)*(x1267)))+(((IkReal(-1.00000000000000))*(x1271)*(x1272)))+(((IkReal(-1.00000000000000))*(x1269)*(x1273)))+(((IkReal(-1.00000000000000))*(x1269)*(x1274)))+(((IkReal(-1.00000000000000))*(sj1)*(x1267)*(x1271))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst1)*(((((IkReal(-1.00000000000000))*(x1268)*(x1274)))+(((IkReal(-1.00000000000000))*(x1268)*(x1273)))+(((x1265)*(x1270)))+(((sj1)*(x1265)*(x1266)))+(((IkReal(-1.00000000000000))*(x1270)*(x1271)))+(((IkReal(-1.00000000000000))*(x1266)*(x1274)))+(((IkReal(-1.00000000000000))*(x1266)*(x1273)))+(((IkReal(-1.00000000000000))*(sj1)*(x1266)*(x1271))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j0array[0]=IKatan2(((gconst1)*(((((x1265)*(x1272)))+(((IkReal(-1.00000000000000))*(x1267)*(x1274)))+(((IkReal(-1.00000000000000))*(x1267)*(x1273)))+(((sj1)*(x1265)*(x1267)))+(((IkReal(-1.00000000000000))*(x1271)*(x1272)))+(((IkReal(-1.00000000000000))*(x1269)*(x1273)))+(((IkReal(-1.00000000000000))*(x1269)*(x1274)))+(((IkReal(-1.00000000000000))*(sj1)*(x1267)*(x1271)))))), ((gconst1)*(((((IkReal(-1.00000000000000))*(x1268)*(x1274)))+(((IkReal(-1.00000000000000))*(x1268)*(x1273)))+(((x1265)*(x1270)))+(((sj1)*(x1265)*(x1266)))+(((IkReal(-1.00000000000000))*(x1270)*(x1271)))+(((IkReal(-1.00000000000000))*(x1266)*(x1274)))+(((IkReal(-1.00000000000000))*(x1266)*(x1273)))+(((IkReal(-1.00000000000000))*(sj1)*(x1266)*(x1271)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[4];
IkReal x1275=IKcos(j0);
IkReal x1276=IKsin(j0);
IkReal x1277=((r00)*(sj5));
IkReal x1278=((IkReal(1.00000000000000))*(cj2));
IkReal x1279=((cj5)*(r11));
IkReal x1280=((sj1)*(sj2));
IkReal x1281=((r10)*(sj5));
IkReal x1282=((IkReal(0.0946500000000000))*(x1276));
IkReal x1283=((IkReal(0.0946500000000000))*(x1275));
IkReal x1284=((IkReal(1.00000000000000))*(x1276));
IkReal x1285=((IkReal(1.00000000000000))*(x1275));
IkReal x1286=((cj5)*(r01)*(x1276));
IkReal x1287=((cj5)*(x1283));
evalcond[0]=((((x1275)*(x1279)))+(((x1275)*(x1281)))+(((IkReal(-1.00000000000000))*(cj5)*(r01)*(x1284)))+(((IkReal(-1.00000000000000))*(x1277)*(x1284))));
evalcond[1]=((IkReal(0.109150000000000))+(((x1277)*(x1282)))+(((cj5)*(r01)*(x1282)))+(((px)*(x1276)))+(((IkReal(-1.00000000000000))*(x1279)*(x1283)))+(((IkReal(-1.00000000000000))*(py)*(x1285)))+(((IkReal(-1.00000000000000))*(x1281)*(x1283))));
evalcond[2]=((((IkReal(-0.392250000000000))*(x1280)))+(((IkReal(0.392250000000000))*(cj1)*(cj2)))+(((IkReal(0.425000000000000))*(cj1)))+(((IkReal(-1.00000000000000))*(px)*(x1285)))+(((IkReal(-1.00000000000000))*(x1277)*(x1283)))+(((IkReal(-1.00000000000000))*(r01)*(x1287)))+(((IkReal(-1.00000000000000))*(x1279)*(x1282)))+(((IkReal(-1.00000000000000))*(py)*(x1284)))+(((IkReal(-1.00000000000000))*(x1281)*(x1282))));
evalcond[3]=((((x1276)*(x1279)))+(((x1275)*(x1277)))+(((IkReal(-1.00000000000000))*(cj1)*(sj3)*(x1278)))+(((IkReal(-1.00000000000000))*(cj1)*(cj3)*(sj2)))+(((IkReal(-1.00000000000000))*(cj3)*(sj1)*(x1278)))+(((x1276)*(x1281)))+(((sj3)*(x1280)))+(((cj5)*(r01)*(x1275))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst3;
IkReal x1288=((IkReal(1.00000000000000))*(sj0));
IkReal x1289=((cj5)*(r22));
IkReal x1290=((r21)*(sj5));
IkReal x1291=((IkReal(1.00000000000000))*(cj0));
IkReal x1292=((r22)*(sj5));
IkReal x1293=((cj5)*(r20));
gconst3=IKsign(((((r01)*(sj0)*(x1292)))+(((IkReal(-1.00000000000000))*(r00)*(x1288)*(x1289)))+(((cj0)*(r12)*(x1290)))+(((cj0)*(r10)*(x1289)))+(((r02)*(sj0)*(x1293)))+(((IkReal(-1.00000000000000))*(r12)*(x1291)*(x1293)))+(((IkReal(-1.00000000000000))*(r02)*(x1288)*(x1290)))+(((IkReal(-1.00000000000000))*(r11)*(x1291)*(x1292)))));
IkReal x1294=((IkReal(1.00000000000000))*(sj0));
IkReal x1295=((cj5)*(r22));
IkReal x1296=((r21)*(sj5));
IkReal x1297=((IkReal(1.00000000000000))*(cj0));
IkReal x1298=((r22)*(sj5));
IkReal x1299=((cj5)*(r20));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r00)*(x1294)*(x1295)))+(((r01)*(sj0)*(x1298)))+(((cj0)*(r12)*(x1296)))+(((IkReal(-1.00000000000000))*(r12)*(x1297)*(x1299)))+(((r02)*(sj0)*(x1299)))+(((cj0)*(r10)*(x1295)))+(((IkReal(-1.00000000000000))*(r02)*(x1294)*(x1296)))+(((IkReal(-1.00000000000000))*(r11)*(x1297)*(x1298))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst4;
gconst4=IKsign((((r22)*(r22))+((((cj5)*(cj5))*((r20)*(r20))))+(((IkReal(-2.00000000000000))*(cj5)*(r20)*(r21)*(sj5)))+((((r21)*(r21))*((sj5)*(sj5))))));
dummyeval[0]=(((r22)*(r22))+((((cj5)*(cj5))*((r20)*(r20))))+(((IkReal(-2.00000000000000))*(cj5)*(r20)*(r21)*(sj5)))+((((r21)*(r21))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1300=((cj3)*(sj2));
IkReal x1301=((cj2)*(cj3));
IkReal x1302=((cj2)*(sj3));
IkReal x1303=((sj2)*(sj3));
IkReal x1304=((r21)*(sj5));
IkReal x1305=((IkReal(1.00000000000000))*(cj1));
IkReal x1306=((IkReal(1.00000000000000))*(sj1));
IkReal x1307=((r22)*(x1305));
IkReal x1308=((cj5)*(r20)*(sj1));
IkReal x1309=((cj1)*(cj5)*(r20));
if( IKabs(((gconst4)*(((((IkReal(-1.00000000000000))*(x1300)*(x1307)))+(((IkReal(-1.00000000000000))*(r22)*(x1301)*(x1306)))+(((IkReal(-1.00000000000000))*(x1302)*(x1307)))+(((r22)*(sj1)*(x1303))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst4)*(((((sj1)*(x1303)*(x1304)))+(((x1300)*(x1309)))+(((IkReal(-1.00000000000000))*(x1301)*(x1304)*(x1306)))+(((x1302)*(x1309)))+(((IkReal(-1.00000000000000))*(x1302)*(x1304)*(x1305)))+(((IkReal(-1.00000000000000))*(x1300)*(x1304)*(x1305)))+(((IkReal(-1.00000000000000))*(cj5)*(r20)*(x1303)*(x1306)))+(((x1301)*(x1308))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst4)*(((((IkReal(-1.00000000000000))*(x1300)*(x1307)))+(((IkReal(-1.00000000000000))*(r22)*(x1301)*(x1306)))+(((IkReal(-1.00000000000000))*(x1302)*(x1307)))+(((r22)*(sj1)*(x1303)))))), ((gconst4)*(((((sj1)*(x1303)*(x1304)))+(((x1300)*(x1309)))+(((IkReal(-1.00000000000000))*(x1301)*(x1304)*(x1306)))+(((x1302)*(x1309)))+(((IkReal(-1.00000000000000))*(x1302)*(x1304)*(x1305)))+(((IkReal(-1.00000000000000))*(x1300)*(x1304)*(x1305)))+(((IkReal(-1.00000000000000))*(cj5)*(r20)*(x1303)*(x1306)))+(((x1301)*(x1308)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x1310=IKsin(j4);
IkReal x1311=IKcos(j4);
IkReal x1312=((IkReal(1.00000000000000))*(cj2));
IkReal x1313=((cj3)*(sj1));
IkReal x1314=((cj1)*(sj3));
IkReal x1315=((IkReal(1.00000000000000))*(cj5));
IkReal x1316=((IkReal(1.00000000000000))*(r01));
IkReal x1317=((cj1)*(cj3));
IkReal x1318=((r11)*(sj5));
IkReal x1319=((sj1)*(sj3));
IkReal x1320=((r01)*(sj5));
IkReal x1321=((r21)*(sj5));
IkReal x1322=((cj0)*(x1310));
IkReal x1323=((cj5)*(x1310));
IkReal x1324=((sj0)*(x1311));
IkReal x1325=((IkReal(1.00000000000000))*(x1310));
IkReal x1326=((cj0)*(x1311));
IkReal x1327=((sj0)*(sj5)*(x1310));
IkReal x1328=((IkReal(1.00000000000000))*(x1326));
evalcond[0]=((((r22)*(x1311)))+(((IkReal(-1.00000000000000))*(x1321)*(x1325)))+(((r20)*(x1323))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r02)*(sj0)*(x1325)))+(((r12)*(x1322)))+(((IkReal(-1.00000000000000))*(sj5)*(x1316)*(x1324)))+(((cj5)*(r00)*(x1324)))+(((IkReal(-1.00000000000000))*(r10)*(x1315)*(x1326)))+(((x1318)*(x1326))));
evalcond[2]=((((x1320)*(x1322)))+(((IkReal(-1.00000000000000))*(r12)*(x1324)))+(((IkReal(-1.00000000000000))*(r02)*(x1328)))+(((IkReal(-1.00000000000000))*(r10)*(sj0)*(x1310)*(x1315)))+(((sj0)*(x1310)*(x1318)))+(((IkReal(-1.00000000000000))*(r00)*(x1315)*(x1322))));
evalcond[3]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(r12)*(x1328)))+(((r02)*(x1324)))+(((IkReal(-1.00000000000000))*(r10)*(x1315)*(x1322)))+(((r00)*(sj0)*(x1323)))+(((IkReal(-1.00000000000000))*(x1316)*(x1327)))+(((x1318)*(x1322))));
evalcond[4]=((((sj2)*(x1319)))+(((IkReal(-1.00000000000000))*(r22)*(x1325)))+(((IkReal(-1.00000000000000))*(x1311)*(x1321)))+(((cj5)*(r20)*(x1311)))+(((IkReal(-1.00000000000000))*(sj2)*(x1317)))+(((IkReal(-1.00000000000000))*(x1312)*(x1313)))+(((IkReal(-1.00000000000000))*(x1312)*(x1314))));
evalcond[5]=((((sj2)*(x1313)))+(((sj2)*(x1314)))+(((x1320)*(x1326)))+(((r12)*(sj0)*(x1310)))+(((r02)*(x1322)))+(((cj2)*(x1319)))+(((IkReal(-1.00000000000000))*(r10)*(x1315)*(x1324)))+(((IkReal(-1.00000000000000))*(r00)*(x1315)*(x1326)))+(((x1318)*(x1324)))+(((IkReal(-1.00000000000000))*(x1312)*(x1317))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs(((gconst3)*(r22))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst3)*(((((r21)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(r20))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst3)*(r22)), ((gconst3)*(((((r21)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(r20)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x1329=IKsin(j4);
IkReal x1330=IKcos(j4);
IkReal x1331=((IkReal(1.00000000000000))*(cj2));
IkReal x1332=((cj3)*(sj1));
IkReal x1333=((cj1)*(sj3));
IkReal x1334=((IkReal(1.00000000000000))*(cj5));
IkReal x1335=((IkReal(1.00000000000000))*(r01));
IkReal x1336=((cj1)*(cj3));
IkReal x1337=((r11)*(sj5));
IkReal x1338=((sj1)*(sj3));
IkReal x1339=((r01)*(sj5));
IkReal x1340=((r21)*(sj5));
IkReal x1341=((cj0)*(x1329));
IkReal x1342=((cj5)*(x1329));
IkReal x1343=((sj0)*(x1330));
IkReal x1344=((IkReal(1.00000000000000))*(x1329));
IkReal x1345=((cj0)*(x1330));
IkReal x1346=((sj0)*(sj5)*(x1329));
IkReal x1347=((IkReal(1.00000000000000))*(x1345));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1340)*(x1344)))+(((r22)*(x1330)))+(((r20)*(x1342))));
evalcond[1]=((((cj5)*(r00)*(x1343)))+(((IkReal(-1.00000000000000))*(sj5)*(x1335)*(x1343)))+(((x1337)*(x1345)))+(((r12)*(x1341)))+(((IkReal(-1.00000000000000))*(r10)*(x1334)*(x1345)))+(((IkReal(-1.00000000000000))*(r02)*(sj0)*(x1344))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r02)*(x1347)))+(((x1339)*(x1341)))+(((sj0)*(x1329)*(x1337)))+(((IkReal(-1.00000000000000))*(r12)*(x1343)))+(((IkReal(-1.00000000000000))*(r00)*(x1334)*(x1341)))+(((IkReal(-1.00000000000000))*(r10)*(sj0)*(x1329)*(x1334))));
evalcond[3]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(r12)*(x1347)))+(((r00)*(sj0)*(x1342)))+(((IkReal(-1.00000000000000))*(x1335)*(x1346)))+(((r02)*(x1343)))+(((x1337)*(x1341)))+(((IkReal(-1.00000000000000))*(r10)*(x1334)*(x1341))));
evalcond[4]=((((cj5)*(r20)*(x1330)))+(((IkReal(-1.00000000000000))*(x1330)*(x1340)))+(((sj2)*(x1338)))+(((IkReal(-1.00000000000000))*(sj2)*(x1336)))+(((IkReal(-1.00000000000000))*(r22)*(x1344)))+(((IkReal(-1.00000000000000))*(x1331)*(x1332)))+(((IkReal(-1.00000000000000))*(x1331)*(x1333))));
evalcond[5]=((((x1339)*(x1345)))+(((r12)*(sj0)*(x1329)))+(((r02)*(x1341)))+(((sj2)*(x1332)))+(((sj2)*(x1333)))+(((x1337)*(x1343)))+(((IkReal(-1.00000000000000))*(x1331)*(x1336)))+(((cj2)*(x1338)))+(((IkReal(-1.00000000000000))*(r00)*(x1334)*(x1345)))+(((IkReal(-1.00000000000000))*(r10)*(x1334)*(x1343))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1348=((cj3)*(sj2));
IkReal x1349=((cj2)*(sj3));
IkReal x1350=((cj5)*(r20));
IkReal x1351=((r21)*(sj5));
IkReal x1352=((IkReal(1.00000000000000))*(cj1));
IkReal x1353=((r22)*(x1352));
IkReal x1354=((sj1)*(sj2)*(sj3));
IkReal x1355=((cj2)*(cj3)*(sj1));
if( IKabs(((gconst2)*(((((r22)*(x1354)))+(((IkReal(-1.00000000000000))*(r22)*(x1355)))+(((IkReal(-1.00000000000000))*(x1348)*(x1353)))+(((IkReal(-1.00000000000000))*(x1349)*(x1353))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst2)*(((((IkReal(-1.00000000000000))*(x1351)*(x1355)))+(((IkReal(-1.00000000000000))*(x1349)*(x1351)*(x1352)))+(((IkReal(-1.00000000000000))*(x1348)*(x1351)*(x1352)))+(((IkReal(-1.00000000000000))*(x1350)*(x1354)))+(((x1350)*(x1355)))+(((x1351)*(x1354)))+(((cj1)*(x1349)*(x1350)))+(((cj1)*(x1348)*(x1350))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst2)*(((((r22)*(x1354)))+(((IkReal(-1.00000000000000))*(r22)*(x1355)))+(((IkReal(-1.00000000000000))*(x1348)*(x1353)))+(((IkReal(-1.00000000000000))*(x1349)*(x1353)))))), ((gconst2)*(((((IkReal(-1.00000000000000))*(x1351)*(x1355)))+(((IkReal(-1.00000000000000))*(x1349)*(x1351)*(x1352)))+(((IkReal(-1.00000000000000))*(x1348)*(x1351)*(x1352)))+(((IkReal(-1.00000000000000))*(x1350)*(x1354)))+(((x1350)*(x1355)))+(((x1351)*(x1354)))+(((cj1)*(x1349)*(x1350)))+(((cj1)*(x1348)*(x1350)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[2];
IkReal x1356=IKsin(j4);
IkReal x1357=IKcos(j4);
IkReal x1358=((IkReal(1.00000000000000))*(cj1));
IkReal x1359=((cj5)*(r20));
IkReal x1360=((IkReal(1.00000000000000))*(r21)*(sj5));
evalcond[0]=((((r22)*(x1357)))+(((IkReal(-1.00000000000000))*(x1356)*(x1360)))+(((x1356)*(x1359))));
evalcond[1]=((((x1357)*(x1359)))+(((IkReal(-1.00000000000000))*(r22)*(x1356)))+(((IkReal(-1.00000000000000))*(cj2)*(cj3)*(sj1)))+(((IkReal(-1.00000000000000))*(cj2)*(sj3)*(x1358)))+(((IkReal(-1.00000000000000))*(x1357)*(x1360)))+(((sj1)*(sj2)*(sj3)))+(((IkReal(-1.00000000000000))*(cj3)*(sj2)*(x1358))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst5;
IkReal x1361=((IkReal(20000.0000000000))*(cj5));
IkReal x1362=((IkReal(20000.0000000000))*(sj5));
gconst5=IKsign(((((IkReal(-1.00000000000000))*(px)*(r11)*(x1361)))+(((py)*(r01)*(x1361)))+(((IkReal(-1.00000000000000))*(px)*(r10)*(x1362)))+(((py)*(r00)*(x1362)))));
IkReal x1363=((IkReal(1.00000000000000))*(px));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r10)*(sj5)*(x1363)))+(((cj5)*(py)*(r01)))+(((IkReal(-1.00000000000000))*(cj5)*(r11)*(x1363)))+(((py)*(r00)*(sj5))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst6;
IkReal x1364=(sj5)*(sj5);
IkReal x1365=(cj5)*(cj5);
IkReal x1366=((cj4)*(sj5));
IkReal x1367=((IkReal(1.00000000000000))*(r02));
IkReal x1368=((r01)*(r10));
IkReal x1369=((cj4)*(cj5));
IkReal x1370=((sj4)*(x1365));
IkReal x1371=((IkReal(1.00000000000000))*(r00)*(r11));
IkReal x1372=((sj4)*(x1364));
gconst6=IKsign(((((IkReal(-1.00000000000000))*(r10)*(x1366)*(x1367)))+(((IkReal(-1.00000000000000))*(x1371)*(x1372)))+(((IkReal(-1.00000000000000))*(x1370)*(x1371)))+(((r00)*(r12)*(x1366)))+(((r01)*(r12)*(x1369)))+(((IkReal(-1.00000000000000))*(r11)*(x1367)*(x1369)))+(((x1368)*(x1372)))+(((x1368)*(x1370)))));
IkReal x1373=(sj5)*(sj5);
IkReal x1374=(cj5)*(cj5);
IkReal x1375=((cj4)*(sj5));
IkReal x1376=((IkReal(1.00000000000000))*(r02));
IkReal x1377=((r01)*(r10));
IkReal x1378=((cj4)*(cj5));
IkReal x1379=((sj4)*(x1374));
IkReal x1380=((IkReal(1.00000000000000))*(r00)*(r11));
IkReal x1381=((sj4)*(x1373));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r10)*(x1375)*(x1376)))+(((r01)*(r12)*(x1378)))+(((x1377)*(x1379)))+(((IkReal(-1.00000000000000))*(x1380)*(x1381)))+(((x1377)*(x1381)))+(((IkReal(-1.00000000000000))*(r11)*(x1376)*(x1378)))+(((IkReal(-1.00000000000000))*(x1379)*(x1380)))+(((r00)*(r12)*(x1375))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
if( IKabs(((gconst6)*(((((cj5)*(r11)))+(((r10)*(sj5))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst6)*(((((r00)*(sj5)))+(((cj5)*(r01))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j0array[0]=IKatan2(((gconst6)*(((((cj5)*(r11)))+(((r10)*(sj5)))))), ((gconst6)*(((((r00)*(sj5)))+(((cj5)*(r01)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[8];
IkReal x1382=IKcos(j0);
IkReal x1383=IKsin(j0);
IkReal x1384=((IkReal(1.00000000000000))*(cj5));
IkReal x1385=((IkReal(0.0946500000000000))*(sj5));
IkReal x1386=((IkReal(1.00000000000000))*(cj2));
IkReal x1387=((cj3)*(sj1));
IkReal x1388=((cj1)*(sj3));
IkReal x1389=((IkReal(0.0946500000000000))*(cj5));
IkReal x1390=((r02)*(sj4));
IkReal x1391=((cj1)*(cj3));
IkReal x1392=((sj1)*(sj2));
IkReal x1393=((sj4)*(sj5));
IkReal x1394=((IkReal(1.00000000000000))*(sj5));
IkReal x1395=((cj4)*(r02));
IkReal x1396=((cj4)*(r12));
IkReal x1397=((cj4)*(sj5));
IkReal x1398=((r12)*(sj4));
IkReal x1399=((r01)*(x1383));
IkReal x1400=((r00)*(x1382));
IkReal x1401=((r00)*(x1383));
IkReal x1402=((r11)*(x1382));
IkReal x1403=((r01)*(x1382));
IkReal x1404=((r11)*(x1383));
IkReal x1405=((r10)*(x1383));
IkReal x1406=((IkReal(1.00000000000000))*(x1383));
IkReal x1407=((r10)*(x1382));
IkReal x1408=((IkReal(1.00000000000000))*(x1382));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1384)*(x1399)))+(((cj5)*(x1402)))+(((sj5)*(x1407)))+(((IkReal(-1.00000000000000))*(x1394)*(x1401))));
evalcond[1]=((IkReal(0.109150000000000))+(((IkReal(-1.00000000000000))*(x1389)*(x1402)))+(((x1385)*(x1401)))+(((x1389)*(x1399)))+(((IkReal(-1.00000000000000))*(x1385)*(x1407)))+(((IkReal(-1.00000000000000))*(py)*(x1408)))+(((px)*(x1383))));
evalcond[2]=((((x1382)*(x1398)))+(((IkReal(-1.00000000000000))*(x1390)*(x1406)))+(((IkReal(-1.00000000000000))*(cj4)*(x1394)*(x1399)))+(((x1397)*(x1402)))+(((IkReal(-1.00000000000000))*(cj4)*(x1384)*(x1407)))+(((cj4)*(cj5)*(x1401))));
evalcond[3]=((((x1393)*(x1404)))+(((x1393)*(x1403)))+(((IkReal(-1.00000000000000))*(x1396)*(x1406)))+(((IkReal(-1.00000000000000))*(x1395)*(x1408)))+(((IkReal(-1.00000000000000))*(sj4)*(x1384)*(x1405)))+(((IkReal(-1.00000000000000))*(sj4)*(x1384)*(x1400))));
evalcond[4]=((IkReal(1.00000000000000))+(((x1393)*(x1402)))+(((cj5)*(sj4)*(x1401)))+(((IkReal(-1.00000000000000))*(x1393)*(x1399)))+(((IkReal(-1.00000000000000))*(x1396)*(x1408)))+(((x1383)*(x1395)))+(((IkReal(-1.00000000000000))*(sj4)*(x1384)*(x1407))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x1389)*(x1404)))+(((IkReal(-1.00000000000000))*(x1389)*(x1403)))+(((IkReal(0.392250000000000))*(cj1)*(cj2)))+(((IkReal(-0.392250000000000))*(x1392)))+(((IkReal(0.425000000000000))*(cj1)))+(((IkReal(-1.00000000000000))*(px)*(x1408)))+(((IkReal(-1.00000000000000))*(x1385)*(x1405)))+(((IkReal(-1.00000000000000))*(x1385)*(x1400)))+(((IkReal(-1.00000000000000))*(py)*(x1406))));
evalcond[6]=((((IkReal(-1.00000000000000))*(sj2)*(x1391)))+(((cj5)*(x1403)))+(((cj5)*(x1404)))+(((sj5)*(x1400)))+(((sj5)*(x1405)))+(((sj3)*(x1392)))+(((IkReal(-1.00000000000000))*(x1386)*(x1388)))+(((IkReal(-1.00000000000000))*(x1386)*(x1387))));
evalcond[7]=((((x1382)*(x1390)))+(((x1397)*(x1404)))+(((x1397)*(x1403)))+(((sj2)*(x1388)))+(((sj2)*(x1387)))+(((IkReal(-1.00000000000000))*(cj4)*(x1384)*(x1400)))+(((IkReal(-1.00000000000000))*(cj4)*(x1384)*(x1405)))+(((x1383)*(x1398)))+(((cj2)*(sj1)*(sj3)))+(((IkReal(-1.00000000000000))*(x1386)*(x1391))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x1409=((IkReal(2183.00000000000))*(sj5));
IkReal x1410=((IkReal(2183.00000000000))*(cj5));
if( IKabs(((gconst5)*(((((r11)*(x1410)))+(((r10)*(x1409))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst5)*(((((r00)*(x1409)))+(((r01)*(x1410))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j0array[0]=IKatan2(((gconst5)*(((((r11)*(x1410)))+(((r10)*(x1409)))))), ((gconst5)*(((((r00)*(x1409)))+(((r01)*(x1410)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[8];
IkReal x1411=IKcos(j0);
IkReal x1412=IKsin(j0);
IkReal x1413=((IkReal(1.00000000000000))*(cj5));
IkReal x1414=((IkReal(0.0946500000000000))*(sj5));
IkReal x1415=((IkReal(1.00000000000000))*(cj2));
IkReal x1416=((cj3)*(sj1));
IkReal x1417=((cj1)*(sj3));
IkReal x1418=((IkReal(0.0946500000000000))*(cj5));
IkReal x1419=((r02)*(sj4));
IkReal x1420=((cj1)*(cj3));
IkReal x1421=((sj1)*(sj2));
IkReal x1422=((sj4)*(sj5));
IkReal x1423=((IkReal(1.00000000000000))*(sj5));
IkReal x1424=((cj4)*(r02));
IkReal x1425=((cj4)*(r12));
IkReal x1426=((cj4)*(sj5));
IkReal x1427=((r12)*(sj4));
IkReal x1428=((r01)*(x1412));
IkReal x1429=((r00)*(x1411));
IkReal x1430=((r00)*(x1412));
IkReal x1431=((r11)*(x1411));
IkReal x1432=((r01)*(x1411));
IkReal x1433=((r11)*(x1412));
IkReal x1434=((r10)*(x1412));
IkReal x1435=((IkReal(1.00000000000000))*(x1412));
IkReal x1436=((r10)*(x1411));
IkReal x1437=((IkReal(1.00000000000000))*(x1411));
evalcond[0]=((((sj5)*(x1436)))+(((cj5)*(x1431)))+(((IkReal(-1.00000000000000))*(x1413)*(x1428)))+(((IkReal(-1.00000000000000))*(x1423)*(x1430))));
evalcond[1]=((IkReal(0.109150000000000))+(((IkReal(-1.00000000000000))*(x1414)*(x1436)))+(((px)*(x1412)))+(((x1418)*(x1428)))+(((x1414)*(x1430)))+(((IkReal(-1.00000000000000))*(py)*(x1437)))+(((IkReal(-1.00000000000000))*(x1418)*(x1431))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1419)*(x1435)))+(((IkReal(-1.00000000000000))*(cj4)*(x1423)*(x1428)))+(((x1411)*(x1427)))+(((x1426)*(x1431)))+(((IkReal(-1.00000000000000))*(cj4)*(x1413)*(x1436)))+(((cj4)*(cj5)*(x1430))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj4)*(x1413)*(x1429)))+(((IkReal(-1.00000000000000))*(x1424)*(x1437)))+(((IkReal(-1.00000000000000))*(x1425)*(x1435)))+(((x1422)*(x1432)))+(((x1422)*(x1433)))+(((IkReal(-1.00000000000000))*(sj4)*(x1413)*(x1434))));
evalcond[4]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x1422)*(x1428)))+(((cj5)*(sj4)*(x1430)))+(((IkReal(-1.00000000000000))*(x1425)*(x1437)))+(((x1422)*(x1431)))+(((x1412)*(x1424)))+(((IkReal(-1.00000000000000))*(sj4)*(x1413)*(x1436))));
evalcond[5]=((((IkReal(0.392250000000000))*(cj1)*(cj2)))+(((IkReal(0.425000000000000))*(cj1)))+(((IkReal(-1.00000000000000))*(x1414)*(x1434)))+(((IkReal(-1.00000000000000))*(px)*(x1437)))+(((IkReal(-1.00000000000000))*(x1414)*(x1429)))+(((IkReal(-0.392250000000000))*(x1421)))+(((IkReal(-1.00000000000000))*(py)*(x1435)))+(((IkReal(-1.00000000000000))*(x1418)*(x1432)))+(((IkReal(-1.00000000000000))*(x1418)*(x1433))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x1415)*(x1416)))+(((IkReal(-1.00000000000000))*(x1415)*(x1417)))+(((sj5)*(x1434)))+(((cj5)*(x1432)))+(((cj5)*(x1433)))+(((IkReal(-1.00000000000000))*(sj2)*(x1420)))+(((sj5)*(x1429)))+(((sj3)*(x1421))));
evalcond[7]=((((IkReal(-1.00000000000000))*(x1415)*(x1420)))+(((sj2)*(x1416)))+(((sj2)*(x1417)))+(((IkReal(-1.00000000000000))*(cj4)*(x1413)*(x1429)))+(((x1411)*(x1419)))+(((x1426)*(x1433)))+(((x1426)*(x1432)))+(((IkReal(-1.00000000000000))*(cj4)*(x1413)*(x1434)))+(((cj2)*(sj1)*(sj3)))+(((x1412)*(x1427))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x1438=((IkReal(2183.00000000000))*(sj5));
IkReal x1439=((IkReal(2183.00000000000))*(cj5));
if( IKabs(((gconst0)*(((((r11)*(x1439)))+(((r10)*(x1438))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst0)*(((((r01)*(x1439)))+(((r00)*(x1438))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j0array[0]=IKatan2(((gconst0)*(((((r11)*(x1439)))+(((r10)*(x1438)))))), ((gconst0)*(((((r01)*(x1439)))+(((r00)*(x1438)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[4];
IkReal x1440=IKcos(j0);
IkReal x1441=IKsin(j0);
IkReal x1442=((r00)*(sj5));
IkReal x1443=((IkReal(1.00000000000000))*(cj2));
IkReal x1444=((cj5)*(r11));
IkReal x1445=((sj1)*(sj2));
IkReal x1446=((r10)*(sj5));
IkReal x1447=((IkReal(0.0946500000000000))*(x1441));
IkReal x1448=((IkReal(0.0946500000000000))*(x1440));
IkReal x1449=((IkReal(1.00000000000000))*(x1441));
IkReal x1450=((IkReal(1.00000000000000))*(x1440));
IkReal x1451=((cj5)*(r01)*(x1441));
IkReal x1452=((cj5)*(x1448));
evalcond[0]=((((x1440)*(x1446)))+(((x1440)*(x1444)))+(((IkReal(-1.00000000000000))*(cj5)*(r01)*(x1449)))+(((IkReal(-1.00000000000000))*(x1442)*(x1449))));
evalcond[1]=((IkReal(0.109150000000000))+(((IkReal(-1.00000000000000))*(x1446)*(x1448)))+(((x1442)*(x1447)))+(((cj5)*(r01)*(x1447)))+(((IkReal(-1.00000000000000))*(py)*(x1450)))+(((IkReal(-1.00000000000000))*(x1444)*(x1448)))+(((px)*(x1441))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1446)*(x1447)))+(((IkReal(0.392250000000000))*(cj1)*(cj2)))+(((IkReal(0.425000000000000))*(cj1)))+(((IkReal(-1.00000000000000))*(px)*(x1450)))+(((IkReal(-1.00000000000000))*(r01)*(x1452)))+(((IkReal(-1.00000000000000))*(py)*(x1449)))+(((IkReal(-0.392250000000000))*(x1445)))+(((IkReal(-1.00000000000000))*(x1444)*(x1447)))+(((IkReal(-1.00000000000000))*(x1442)*(x1448))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj1)*(sj3)*(x1443)))+(((x1441)*(x1444)))+(((x1441)*(x1446)))+(((x1440)*(x1442)))+(((IkReal(-1.00000000000000))*(cj1)*(cj3)*(sj2)))+(((IkReal(-1.00000000000000))*(cj3)*(sj1)*(x1443)))+(((sj3)*(x1445)))+(((cj5)*(r01)*(x1440))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst3;
IkReal x1453=((IkReal(1.00000000000000))*(sj0));
IkReal x1454=((cj5)*(r22));
IkReal x1455=((r21)*(sj5));
IkReal x1456=((IkReal(1.00000000000000))*(cj0));
IkReal x1457=((r22)*(sj5));
IkReal x1458=((cj5)*(r20));
gconst3=IKsign(((((IkReal(-1.00000000000000))*(r02)*(x1453)*(x1455)))+(((r02)*(sj0)*(x1458)))+(((IkReal(-1.00000000000000))*(r12)*(x1456)*(x1458)))+(((IkReal(-1.00000000000000))*(r00)*(x1453)*(x1454)))+(((IkReal(-1.00000000000000))*(r11)*(x1456)*(x1457)))+(((cj0)*(r12)*(x1455)))+(((r01)*(sj0)*(x1457)))+(((cj0)*(r10)*(x1454)))));
IkReal x1459=((IkReal(1.00000000000000))*(sj0));
IkReal x1460=((cj5)*(r22));
IkReal x1461=((r21)*(sj5));
IkReal x1462=((IkReal(1.00000000000000))*(cj0));
IkReal x1463=((r22)*(sj5));
IkReal x1464=((cj5)*(r20));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r12)*(x1462)*(x1464)))+(((cj0)*(r10)*(x1460)))+(((r01)*(sj0)*(x1463)))+(((cj0)*(r12)*(x1461)))+(((r02)*(sj0)*(x1464)))+(((IkReal(-1.00000000000000))*(r02)*(x1459)*(x1461)))+(((IkReal(-1.00000000000000))*(r00)*(x1459)*(x1460)))+(((IkReal(-1.00000000000000))*(r11)*(x1462)*(x1463))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst4;
gconst4=IKsign((((r22)*(r22))+((((cj5)*(cj5))*((r20)*(r20))))+(((IkReal(-2.00000000000000))*(cj5)*(r20)*(r21)*(sj5)))+((((r21)*(r21))*((sj5)*(sj5))))));
dummyeval[0]=(((r22)*(r22))+((((cj5)*(cj5))*((r20)*(r20))))+(((IkReal(-2.00000000000000))*(cj5)*(r20)*(r21)*(sj5)))+((((r21)*(r21))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1465=((cj3)*(sj2));
IkReal x1466=((cj2)*(cj3));
IkReal x1467=((cj2)*(sj3));
IkReal x1468=((sj2)*(sj3));
IkReal x1469=((r21)*(sj5));
IkReal x1470=((IkReal(1.00000000000000))*(cj1));
IkReal x1471=((IkReal(1.00000000000000))*(sj1));
IkReal x1472=((r22)*(x1470));
IkReal x1473=((cj5)*(r20)*(sj1));
IkReal x1474=((cj1)*(cj5)*(r20));
if( IKabs(((gconst4)*(((((IkReal(-1.00000000000000))*(r22)*(x1466)*(x1471)))+(((IkReal(-1.00000000000000))*(x1465)*(x1472)))+(((IkReal(-1.00000000000000))*(x1467)*(x1472)))+(((r22)*(sj1)*(x1468))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst4)*(((((x1466)*(x1473)))+(((IkReal(-1.00000000000000))*(x1466)*(x1469)*(x1471)))+(((IkReal(-1.00000000000000))*(cj5)*(r20)*(x1468)*(x1471)))+(((x1467)*(x1474)))+(((sj1)*(x1468)*(x1469)))+(((IkReal(-1.00000000000000))*(x1465)*(x1469)*(x1470)))+(((IkReal(-1.00000000000000))*(x1467)*(x1469)*(x1470)))+(((x1465)*(x1474))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst4)*(((((IkReal(-1.00000000000000))*(r22)*(x1466)*(x1471)))+(((IkReal(-1.00000000000000))*(x1465)*(x1472)))+(((IkReal(-1.00000000000000))*(x1467)*(x1472)))+(((r22)*(sj1)*(x1468)))))), ((gconst4)*(((((x1466)*(x1473)))+(((IkReal(-1.00000000000000))*(x1466)*(x1469)*(x1471)))+(((IkReal(-1.00000000000000))*(cj5)*(r20)*(x1468)*(x1471)))+(((x1467)*(x1474)))+(((sj1)*(x1468)*(x1469)))+(((IkReal(-1.00000000000000))*(x1465)*(x1469)*(x1470)))+(((IkReal(-1.00000000000000))*(x1467)*(x1469)*(x1470)))+(((x1465)*(x1474)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x1475=IKsin(j4);
IkReal x1476=IKcos(j4);
IkReal x1477=((IkReal(1.00000000000000))*(cj2));
IkReal x1478=((cj3)*(sj1));
IkReal x1479=((cj1)*(sj3));
IkReal x1480=((IkReal(1.00000000000000))*(cj5));
IkReal x1481=((IkReal(1.00000000000000))*(r01));
IkReal x1482=((cj1)*(cj3));
IkReal x1483=((r11)*(sj5));
IkReal x1484=((sj1)*(sj3));
IkReal x1485=((r01)*(sj5));
IkReal x1486=((r21)*(sj5));
IkReal x1487=((cj0)*(x1475));
IkReal x1488=((cj5)*(x1475));
IkReal x1489=((sj0)*(x1476));
IkReal x1490=((IkReal(1.00000000000000))*(x1475));
IkReal x1491=((cj0)*(x1476));
IkReal x1492=((sj0)*(sj5)*(x1475));
IkReal x1493=((IkReal(1.00000000000000))*(x1491));
evalcond[0]=((((r20)*(x1488)))+(((r22)*(x1476)))+(((IkReal(-1.00000000000000))*(x1486)*(x1490))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r10)*(x1480)*(x1491)))+(((r12)*(x1487)))+(((x1483)*(x1491)))+(((IkReal(-1.00000000000000))*(sj5)*(x1481)*(x1489)))+(((cj5)*(r00)*(x1489)))+(((IkReal(-1.00000000000000))*(r02)*(sj0)*(x1490))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r00)*(x1480)*(x1487)))+(((sj0)*(x1475)*(x1483)))+(((IkReal(-1.00000000000000))*(r10)*(sj0)*(x1475)*(x1480)))+(((IkReal(-1.00000000000000))*(r02)*(x1493)))+(((x1485)*(x1487)))+(((IkReal(-1.00000000000000))*(r12)*(x1489))));
evalcond[3]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(r10)*(x1480)*(x1487)))+(((IkReal(-1.00000000000000))*(r12)*(x1493)))+(((IkReal(-1.00000000000000))*(x1481)*(x1492)))+(((x1483)*(x1487)))+(((r00)*(sj0)*(x1488)))+(((r02)*(x1489))));
evalcond[4]=((((sj2)*(x1484)))+(((cj5)*(r20)*(x1476)))+(((IkReal(-1.00000000000000))*(x1476)*(x1486)))+(((IkReal(-1.00000000000000))*(x1477)*(x1479)))+(((IkReal(-1.00000000000000))*(x1477)*(x1478)))+(((IkReal(-1.00000000000000))*(sj2)*(x1482)))+(((IkReal(-1.00000000000000))*(r22)*(x1490))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r10)*(x1480)*(x1489)))+(((cj2)*(x1484)))+(((IkReal(-1.00000000000000))*(r00)*(x1480)*(x1491)))+(((x1483)*(x1489)))+(((x1485)*(x1491)))+(((sj2)*(x1479)))+(((sj2)*(x1478)))+(((IkReal(-1.00000000000000))*(x1477)*(x1482)))+(((r12)*(sj0)*(x1475)))+(((r02)*(x1487))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs(((gconst3)*(r22))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst3)*(((((r21)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(r20))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst3)*(r22)), ((gconst3)*(((((r21)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(r20)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x1494=IKsin(j4);
IkReal x1495=IKcos(j4);
IkReal x1496=((IkReal(1.00000000000000))*(cj2));
IkReal x1497=((cj3)*(sj1));
IkReal x1498=((cj1)*(sj3));
IkReal x1499=((IkReal(1.00000000000000))*(cj5));
IkReal x1500=((IkReal(1.00000000000000))*(r01));
IkReal x1501=((cj1)*(cj3));
IkReal x1502=((r11)*(sj5));
IkReal x1503=((sj1)*(sj3));
IkReal x1504=((r01)*(sj5));
IkReal x1505=((r21)*(sj5));
IkReal x1506=((cj0)*(x1494));
IkReal x1507=((cj5)*(x1494));
IkReal x1508=((sj0)*(x1495));
IkReal x1509=((IkReal(1.00000000000000))*(x1494));
IkReal x1510=((cj0)*(x1495));
IkReal x1511=((sj0)*(sj5)*(x1494));
IkReal x1512=((IkReal(1.00000000000000))*(x1510));
evalcond[0]=((((r20)*(x1507)))+(((r22)*(x1495)))+(((IkReal(-1.00000000000000))*(x1505)*(x1509))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r02)*(sj0)*(x1509)))+(((r12)*(x1506)))+(((cj5)*(r00)*(x1508)))+(((IkReal(-1.00000000000000))*(sj5)*(x1500)*(x1508)))+(((IkReal(-1.00000000000000))*(r10)*(x1499)*(x1510)))+(((x1502)*(x1510))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r00)*(x1499)*(x1506)))+(((x1504)*(x1506)))+(((sj0)*(x1494)*(x1502)))+(((IkReal(-1.00000000000000))*(r02)*(x1512)))+(((IkReal(-1.00000000000000))*(r10)*(sj0)*(x1494)*(x1499)))+(((IkReal(-1.00000000000000))*(r12)*(x1508))));
evalcond[3]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(r10)*(x1499)*(x1506)))+(((r00)*(sj0)*(x1507)))+(((r02)*(x1508)))+(((IkReal(-1.00000000000000))*(x1500)*(x1511)))+(((x1502)*(x1506)))+(((IkReal(-1.00000000000000))*(r12)*(x1512))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r22)*(x1509)))+(((IkReal(-1.00000000000000))*(x1496)*(x1498)))+(((IkReal(-1.00000000000000))*(x1496)*(x1497)))+(((IkReal(-1.00000000000000))*(sj2)*(x1501)))+(((cj5)*(r20)*(x1495)))+(((IkReal(-1.00000000000000))*(x1495)*(x1505)))+(((sj2)*(x1503))));
evalcond[5]=((((sj2)*(x1498)))+(((sj2)*(x1497)))+(((cj2)*(x1503)))+(((x1504)*(x1510)))+(((IkReal(-1.00000000000000))*(r00)*(x1499)*(x1510)))+(((IkReal(-1.00000000000000))*(r10)*(x1499)*(x1508)))+(((r02)*(x1506)))+(((r12)*(sj0)*(x1494)))+(((x1502)*(x1508)))+(((IkReal(-1.00000000000000))*(x1496)*(x1501))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j5array[2], cj5array[2], sj5array[2];
bool j5valid[2]={false};
_nj5 = 2;
if( IKabs(((IkReal(0.0946500000000000))*(r21))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(0.0946500000000000))*(r20))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x1513=((IkReal(1.00000000000000))*(IKatan2(((IkReal(0.0946500000000000))*(r21)), ((IkReal(0.0946500000000000))*(r20)))));
if( (((((IkReal(0.00895862250000000))*((r21)*(r21))))+(((IkReal(0.00895862250000000))*((r20)*(r20)))))) < (IkReal)-0.00001 )
    continue;
if( (((((IKabs(IKabs(IKsqrt(((((IkReal(0.00895862250000000))*((r21)*(r21))))+(((IkReal(0.00895862250000000))*((r20)*(r20)))))))) != 0)?((IkReal)1/(IKabs(IKsqrt(((((IkReal(0.00895862250000000))*((r21)*(r21))))+(((IkReal(0.00895862250000000))*((r20)*(r20))))))))):(IkReal)1.0e30))*(((pz)+(((IkReal(0.392250000000000))*(cj1)*(sj2)))+(((IkReal(0.425000000000000))*(sj1)))+(((IkReal(0.392250000000000))*(cj2)*(sj1))))))) < -1-IKFAST_SINCOS_THRESH || (((((IKabs(IKabs(IKsqrt(((((IkReal(0.00895862250000000))*((r21)*(r21))))+(((IkReal(0.00895862250000000))*((r20)*(r20)))))))) != 0)?((IkReal)1/(IKabs(IKsqrt(((((IkReal(0.00895862250000000))*((r21)*(r21))))+(((IkReal(0.00895862250000000))*((r20)*(r20))))))))):(IkReal)1.0e30))*(((pz)+(((IkReal(0.392250000000000))*(cj1)*(sj2)))+(((IkReal(0.425000000000000))*(sj1)))+(((IkReal(0.392250000000000))*(cj2)*(sj1))))))) > 1+IKFAST_SINCOS_THRESH )
    continue;
IkReal x1514=IKasin(((((IKabs(IKabs(IKsqrt(((((IkReal(0.00895862250000000))*((r21)*(r21))))+(((IkReal(0.00895862250000000))*((r20)*(r20)))))))) != 0)?((IkReal)1/(IKabs(IKsqrt(((((IkReal(0.00895862250000000))*((r21)*(r21))))+(((IkReal(0.00895862250000000))*((r20)*(r20))))))))):(IkReal)1.0e30))*(((pz)+(((IkReal(0.392250000000000))*(cj1)*(sj2)))+(((IkReal(0.425000000000000))*(sj1)))+(((IkReal(0.392250000000000))*(cj2)*(sj1)))))));
j5array[0]=((((IkReal(-1.00000000000000))*(x1513)))+(((IkReal(-1.00000000000000))*(x1514))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
j5array[1]=((IkReal(3.14159265358979))+(((IkReal(-1.00000000000000))*(x1513)))+(x1514));
sj5array[1]=IKsin(j5array[1]);
cj5array[1]=IKcos(j5array[1]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
if( j5array[1] > IKPI )
{
    j5array[1]-=IK2PI;
}
else if( j5array[1] < -IKPI )
{    j5array[1]+=IK2PI;
}
j5valid[1] = true;
for(int ij5 = 0; ij5 < 2; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 2; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[1];
IkReal x1515=((IkReal(1.00000000000000))*(sj3));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj3)*(sj1)*(sj2)))+(((cj1)*(cj2)*(cj3)))+(((IkReal(-1.00000000000000))*(cj2)*(sj1)*(x1515)))+(((IkReal(-1.00000000000000))*(cj1)*(sj2)*(x1515)))+(((IkReal(-1.00000000000000))*(r21)*(IKcos(j5))))+(((IkReal(-1.00000000000000))*(r20)*(IKsin(j5)))));
if( IKabs(evalcond[0]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst0;
IkReal x1516=((IkReal(20000.0000000000))*(cj5));
IkReal x1517=((IkReal(20000.0000000000))*(sj5));
gconst0=IKsign(((((IkReal(-1.00000000000000))*(px)*(r11)*(x1516)))+(((py)*(r01)*(x1516)))+(((IkReal(-1.00000000000000))*(px)*(r10)*(x1517)))+(((py)*(r00)*(x1517)))));
IkReal x1518=((IkReal(1.00000000000000))*(px));
dummyeval[0]=((((cj5)*(py)*(r01)))+(((IkReal(-1.00000000000000))*(r10)*(sj5)*(x1518)))+(((IkReal(-1.00000000000000))*(cj5)*(r11)*(x1518)))+(((py)*(r00)*(sj5))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst2;
gconst2=IKsign((((r22)*(r22))+((((cj5)*(cj5))*((r20)*(r20))))+(((IkReal(-2.00000000000000))*(cj5)*(r20)*(r21)*(sj5)))+((((r21)*(r21))*((sj5)*(sj5))))));
dummyeval[0]=(((r22)*(r22))+((((cj5)*(cj5))*((r20)*(r20))))+(((IkReal(-2.00000000000000))*(cj5)*(r20)*(r21)*(sj5)))+((((r21)*(r21))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst1;
IkReal x1519=(cj5)*(cj5);
IkReal x1520=(sj5)*(sj5);
IkReal x1521=((IkReal(1.00000000000000))*(x1520));
IkReal x1522=((IkReal(2.00000000000000))*(cj5)*(sj5));
IkReal x1523=((IkReal(1.00000000000000))*(x1519));
gconst1=IKsign(((((IkReal(-1.00000000000000))*(x1521)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x1522)))+(((IkReal(-1.00000000000000))*(x1521)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(x1523)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x1522)))+(((IkReal(-1.00000000000000))*(x1523)*((r11)*(r11))))));
IkReal x1524=(cj5)*(cj5);
IkReal x1525=(sj5)*(sj5);
IkReal x1526=((IkReal(1.00000000000000))*(x1525));
IkReal x1527=((IkReal(2.00000000000000))*(cj5)*(sj5));
IkReal x1528=((IkReal(1.00000000000000))*(x1524));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x1528)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(x1528)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(x1526)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(x1526)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x1527)))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x1527))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x1529=((sj2)*(sj3));
IkReal x1530=((cj5)*(r01));
IkReal x1531=((cj5)*(r11));
IkReal x1532=((r00)*(sj5));
IkReal x1533=((r10)*(sj5));
IkReal x1534=((sj1)*(x1532));
IkReal x1535=((IkReal(1.00000000000000))*(cj2)*(cj3));
IkReal x1536=((sj1)*(x1533));
IkReal x1537=((IkReal(1.00000000000000))*(cj1)*(cj2)*(sj3));
IkReal x1538=((IkReal(1.00000000000000))*(cj1)*(cj3)*(sj2));
if( IKabs(((gconst1)*(((((sj1)*(x1529)*(x1531)))+(((IkReal(-1.00000000000000))*(x1531)*(x1537)))+(((IkReal(-1.00000000000000))*(x1531)*(x1538)))+(((IkReal(-1.00000000000000))*(x1535)*(x1536)))+(((IkReal(-1.00000000000000))*(sj1)*(x1531)*(x1535)))+(((x1529)*(x1536)))+(((IkReal(-1.00000000000000))*(x1533)*(x1537)))+(((IkReal(-1.00000000000000))*(x1533)*(x1538))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst1)*(((((sj1)*(x1529)*(x1530)))+(((IkReal(-1.00000000000000))*(x1530)*(x1537)))+(((IkReal(-1.00000000000000))*(x1530)*(x1538)))+(((IkReal(-1.00000000000000))*(x1532)*(x1538)))+(((IkReal(-1.00000000000000))*(x1532)*(x1537)))+(((IkReal(-1.00000000000000))*(sj1)*(x1530)*(x1535)))+(((x1529)*(x1534)))+(((IkReal(-1.00000000000000))*(x1534)*(x1535))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j0array[0]=IKatan2(((gconst1)*(((((sj1)*(x1529)*(x1531)))+(((IkReal(-1.00000000000000))*(x1531)*(x1537)))+(((IkReal(-1.00000000000000))*(x1531)*(x1538)))+(((IkReal(-1.00000000000000))*(x1535)*(x1536)))+(((IkReal(-1.00000000000000))*(sj1)*(x1531)*(x1535)))+(((x1529)*(x1536)))+(((IkReal(-1.00000000000000))*(x1533)*(x1537)))+(((IkReal(-1.00000000000000))*(x1533)*(x1538)))))), ((gconst1)*(((((sj1)*(x1529)*(x1530)))+(((IkReal(-1.00000000000000))*(x1530)*(x1537)))+(((IkReal(-1.00000000000000))*(x1530)*(x1538)))+(((IkReal(-1.00000000000000))*(x1532)*(x1538)))+(((IkReal(-1.00000000000000))*(x1532)*(x1537)))+(((IkReal(-1.00000000000000))*(sj1)*(x1530)*(x1535)))+(((x1529)*(x1534)))+(((IkReal(-1.00000000000000))*(x1534)*(x1535)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[4];
IkReal x1539=IKcos(j0);
IkReal x1540=IKsin(j0);
IkReal x1541=((r00)*(sj5));
IkReal x1542=((IkReal(1.00000000000000))*(cj2));
IkReal x1543=((cj5)*(r11));
IkReal x1544=((sj1)*(sj2));
IkReal x1545=((r10)*(sj5));
IkReal x1546=((IkReal(0.0946500000000000))*(x1540));
IkReal x1547=((IkReal(0.0946500000000000))*(x1539));
IkReal x1548=((IkReal(1.00000000000000))*(x1540));
IkReal x1549=((IkReal(1.00000000000000))*(x1539));
IkReal x1550=((cj5)*(r01)*(x1540));
IkReal x1551=((cj5)*(x1547));
evalcond[0]=((((x1539)*(x1545)))+(((x1539)*(x1543)))+(((IkReal(-1.00000000000000))*(cj5)*(r01)*(x1548)))+(((IkReal(-1.00000000000000))*(x1541)*(x1548))));
evalcond[1]=((IkReal(0.109150000000000))+(((IkReal(-1.00000000000000))*(x1543)*(x1547)))+(((x1541)*(x1546)))+(((IkReal(-1.00000000000000))*(py)*(x1549)))+(((IkReal(-1.00000000000000))*(x1545)*(x1547)))+(((px)*(x1540)))+(((cj5)*(r01)*(x1546))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1543)*(x1546)))+(((IkReal(0.392250000000000))*(cj1)*(cj2)))+(((IkReal(-0.392250000000000))*(x1544)))+(((IkReal(0.425000000000000))*(cj1)))+(((IkReal(-1.00000000000000))*(py)*(x1548)))+(((IkReal(-1.00000000000000))*(px)*(x1549)))+(((IkReal(-1.00000000000000))*(x1545)*(x1546)))+(((IkReal(-1.00000000000000))*(r01)*(x1551)))+(((IkReal(-1.00000000000000))*(x1541)*(x1547))));
evalcond[3]=((((x1539)*(x1541)))+(((cj5)*(r01)*(x1539)))+(((IkReal(-1.00000000000000))*(cj1)*(cj3)*(sj2)))+(((IkReal(-1.00000000000000))*(cj3)*(sj1)*(x1542)))+(((x1540)*(x1543)))+(((x1540)*(x1545)))+(((IkReal(-1.00000000000000))*(cj1)*(sj3)*(x1542)))+(((sj3)*(x1544))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst3;
IkReal x1552=((IkReal(1.00000000000000))*(sj0));
IkReal x1553=((cj5)*(r22));
IkReal x1554=((r21)*(sj5));
IkReal x1555=((IkReal(1.00000000000000))*(cj0));
IkReal x1556=((r22)*(sj5));
IkReal x1557=((cj5)*(r20));
gconst3=IKsign(((((r01)*(sj0)*(x1556)))+(((IkReal(-1.00000000000000))*(r02)*(x1552)*(x1554)))+(((IkReal(-1.00000000000000))*(r00)*(x1552)*(x1553)))+(((cj0)*(r12)*(x1554)))+(((r02)*(sj0)*(x1557)))+(((cj0)*(r10)*(x1553)))+(((IkReal(-1.00000000000000))*(r12)*(x1555)*(x1557)))+(((IkReal(-1.00000000000000))*(r11)*(x1555)*(x1556)))));
IkReal x1558=((IkReal(1.00000000000000))*(sj0));
IkReal x1559=((cj5)*(r22));
IkReal x1560=((r21)*(sj5));
IkReal x1561=((IkReal(1.00000000000000))*(cj0));
IkReal x1562=((r22)*(sj5));
IkReal x1563=((cj5)*(r20));
dummyeval[0]=((((cj0)*(r12)*(x1560)))+(((IkReal(-1.00000000000000))*(r02)*(x1558)*(x1560)))+(((IkReal(-1.00000000000000))*(r11)*(x1561)*(x1562)))+(((IkReal(-1.00000000000000))*(r00)*(x1558)*(x1559)))+(((r02)*(sj0)*(x1563)))+(((IkReal(-1.00000000000000))*(r12)*(x1561)*(x1563)))+(((r01)*(sj0)*(x1562)))+(((cj0)*(r10)*(x1559))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst4;
gconst4=IKsign((((r22)*(r22))+((((cj5)*(cj5))*((r20)*(r20))))+(((IkReal(-2.00000000000000))*(cj5)*(r20)*(r21)*(sj5)))+((((r21)*(r21))*((sj5)*(sj5))))));
dummyeval[0]=(((r22)*(r22))+((((cj5)*(cj5))*((r20)*(r20))))+(((IkReal(-2.00000000000000))*(cj5)*(r20)*(r21)*(sj5)))+((((r21)*(r21))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1564=((cj3)*(sj2));
IkReal x1565=((cj2)*(cj3));
IkReal x1566=((cj2)*(sj3));
IkReal x1567=((sj2)*(sj3));
IkReal x1568=((r21)*(sj5));
IkReal x1569=((IkReal(1.00000000000000))*(cj1));
IkReal x1570=((IkReal(1.00000000000000))*(sj1));
IkReal x1571=((r22)*(x1569));
IkReal x1572=((cj5)*(r20)*(sj1));
IkReal x1573=((cj1)*(cj5)*(r20));
if( IKabs(((gconst4)*(((((IkReal(-1.00000000000000))*(x1566)*(x1571)))+(((IkReal(-1.00000000000000))*(r22)*(x1565)*(x1570)))+(((IkReal(-1.00000000000000))*(x1564)*(x1571)))+(((r22)*(sj1)*(x1567))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst4)*(((((x1566)*(x1573)))+(((sj1)*(x1567)*(x1568)))+(((IkReal(-1.00000000000000))*(cj5)*(r20)*(x1567)*(x1570)))+(((IkReal(-1.00000000000000))*(x1564)*(x1568)*(x1569)))+(((IkReal(-1.00000000000000))*(x1565)*(x1568)*(x1570)))+(((IkReal(-1.00000000000000))*(x1566)*(x1568)*(x1569)))+(((x1565)*(x1572)))+(((x1564)*(x1573))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst4)*(((((IkReal(-1.00000000000000))*(x1566)*(x1571)))+(((IkReal(-1.00000000000000))*(r22)*(x1565)*(x1570)))+(((IkReal(-1.00000000000000))*(x1564)*(x1571)))+(((r22)*(sj1)*(x1567)))))), ((gconst4)*(((((x1566)*(x1573)))+(((sj1)*(x1567)*(x1568)))+(((IkReal(-1.00000000000000))*(cj5)*(r20)*(x1567)*(x1570)))+(((IkReal(-1.00000000000000))*(x1564)*(x1568)*(x1569)))+(((IkReal(-1.00000000000000))*(x1565)*(x1568)*(x1570)))+(((IkReal(-1.00000000000000))*(x1566)*(x1568)*(x1569)))+(((x1565)*(x1572)))+(((x1564)*(x1573)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x1574=IKsin(j4);
IkReal x1575=IKcos(j4);
IkReal x1576=((IkReal(1.00000000000000))*(cj2));
IkReal x1577=((cj3)*(sj1));
IkReal x1578=((cj1)*(sj3));
IkReal x1579=((IkReal(1.00000000000000))*(cj5));
IkReal x1580=((IkReal(1.00000000000000))*(r01));
IkReal x1581=((cj1)*(cj3));
IkReal x1582=((r11)*(sj5));
IkReal x1583=((sj1)*(sj3));
IkReal x1584=((r01)*(sj5));
IkReal x1585=((r21)*(sj5));
IkReal x1586=((cj0)*(x1574));
IkReal x1587=((cj5)*(x1574));
IkReal x1588=((sj0)*(x1575));
IkReal x1589=((IkReal(1.00000000000000))*(x1574));
IkReal x1590=((cj0)*(x1575));
IkReal x1591=((sj0)*(sj5)*(x1574));
IkReal x1592=((IkReal(1.00000000000000))*(x1590));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1585)*(x1589)))+(((r20)*(x1587)))+(((r22)*(x1575))));
evalcond[1]=((((cj5)*(r00)*(x1588)))+(((IkReal(-1.00000000000000))*(r02)*(sj0)*(x1589)))+(((IkReal(-1.00000000000000))*(r10)*(x1579)*(x1590)))+(((r12)*(x1586)))+(((x1582)*(x1590)))+(((IkReal(-1.00000000000000))*(sj5)*(x1580)*(x1588))));
evalcond[2]=((((x1584)*(x1586)))+(((IkReal(-1.00000000000000))*(r02)*(x1592)))+(((sj0)*(x1574)*(x1582)))+(((IkReal(-1.00000000000000))*(r00)*(x1579)*(x1586)))+(((IkReal(-1.00000000000000))*(r10)*(sj0)*(x1574)*(x1579)))+(((IkReal(-1.00000000000000))*(r12)*(x1588))));
evalcond[3]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x1580)*(x1591)))+(((IkReal(-1.00000000000000))*(r10)*(x1579)*(x1586)))+(((r00)*(sj0)*(x1587)))+(((x1582)*(x1586)))+(((r02)*(x1588)))+(((IkReal(-1.00000000000000))*(r12)*(x1592))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x1576)*(x1577)))+(((IkReal(-1.00000000000000))*(x1576)*(x1578)))+(((sj2)*(x1583)))+(((IkReal(-1.00000000000000))*(x1575)*(x1585)))+(((cj5)*(r20)*(x1575)))+(((IkReal(-1.00000000000000))*(r22)*(x1589)))+(((IkReal(-1.00000000000000))*(sj2)*(x1581))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r10)*(x1579)*(x1588)))+(((x1584)*(x1590)))+(((IkReal(-1.00000000000000))*(r00)*(x1579)*(x1590)))+(((r12)*(sj0)*(x1574)))+(((x1582)*(x1588)))+(((cj2)*(x1583)))+(((r02)*(x1586)))+(((sj2)*(x1578)))+(((sj2)*(x1577)))+(((IkReal(-1.00000000000000))*(x1576)*(x1581))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs(((gconst3)*(r22))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst3)*(((((r21)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(r20))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst3)*(r22)), ((gconst3)*(((((r21)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(r20)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x1593=IKsin(j4);
IkReal x1594=IKcos(j4);
IkReal x1595=((IkReal(1.00000000000000))*(cj2));
IkReal x1596=((cj3)*(sj1));
IkReal x1597=((cj1)*(sj3));
IkReal x1598=((IkReal(1.00000000000000))*(cj5));
IkReal x1599=((IkReal(1.00000000000000))*(r01));
IkReal x1600=((cj1)*(cj3));
IkReal x1601=((r11)*(sj5));
IkReal x1602=((sj1)*(sj3));
IkReal x1603=((r01)*(sj5));
IkReal x1604=((r21)*(sj5));
IkReal x1605=((cj0)*(x1593));
IkReal x1606=((cj5)*(x1593));
IkReal x1607=((sj0)*(x1594));
IkReal x1608=((IkReal(1.00000000000000))*(x1593));
IkReal x1609=((cj0)*(x1594));
IkReal x1610=((sj0)*(sj5)*(x1593));
IkReal x1611=((IkReal(1.00000000000000))*(x1609));
evalcond[0]=((((r22)*(x1594)))+(((r20)*(x1606)))+(((IkReal(-1.00000000000000))*(x1604)*(x1608))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj5)*(x1599)*(x1607)))+(((IkReal(-1.00000000000000))*(r02)*(sj0)*(x1608)))+(((IkReal(-1.00000000000000))*(r10)*(x1598)*(x1609)))+(((x1601)*(x1609)))+(((r12)*(x1605)))+(((cj5)*(r00)*(x1607))));
evalcond[2]=((((sj0)*(x1593)*(x1601)))+(((IkReal(-1.00000000000000))*(r10)*(sj0)*(x1593)*(x1598)))+(((IkReal(-1.00000000000000))*(r00)*(x1598)*(x1605)))+(((IkReal(-1.00000000000000))*(r12)*(x1607)))+(((IkReal(-1.00000000000000))*(r02)*(x1611)))+(((x1603)*(x1605))));
evalcond[3]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(r12)*(x1611)))+(((IkReal(-1.00000000000000))*(r10)*(x1598)*(x1605)))+(((x1601)*(x1605)))+(((r00)*(sj0)*(x1606)))+(((IkReal(-1.00000000000000))*(x1599)*(x1610)))+(((r02)*(x1607))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x1594)*(x1604)))+(((sj2)*(x1602)))+(((cj5)*(r20)*(x1594)))+(((IkReal(-1.00000000000000))*(x1595)*(x1597)))+(((IkReal(-1.00000000000000))*(x1595)*(x1596)))+(((IkReal(-1.00000000000000))*(r22)*(x1608)))+(((IkReal(-1.00000000000000))*(sj2)*(x1600))));
evalcond[5]=((((sj2)*(x1596)))+(((sj2)*(x1597)))+(((IkReal(-1.00000000000000))*(r00)*(x1598)*(x1609)))+(((IkReal(-1.00000000000000))*(r10)*(x1598)*(x1607)))+(((IkReal(-1.00000000000000))*(x1595)*(x1600)))+(((x1601)*(x1607)))+(((r12)*(sj0)*(x1593)))+(((cj2)*(x1602)))+(((x1603)*(x1609)))+(((r02)*(x1605))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1612=((cj3)*(sj2));
IkReal x1613=((cj2)*(sj3));
IkReal x1614=((cj5)*(r20));
IkReal x1615=((r21)*(sj5));
IkReal x1616=((IkReal(1.00000000000000))*(cj1));
IkReal x1617=((r22)*(x1616));
IkReal x1618=((sj1)*(sj2)*(sj3));
IkReal x1619=((cj2)*(cj3)*(sj1));
if( IKabs(((gconst2)*(((((IkReal(-1.00000000000000))*(r22)*(x1619)))+(((r22)*(x1618)))+(((IkReal(-1.00000000000000))*(x1613)*(x1617)))+(((IkReal(-1.00000000000000))*(x1612)*(x1617))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst2)*(((((IkReal(-1.00000000000000))*(x1612)*(x1615)*(x1616)))+(((IkReal(-1.00000000000000))*(x1613)*(x1615)*(x1616)))+(((IkReal(-1.00000000000000))*(x1614)*(x1618)))+(((IkReal(-1.00000000000000))*(x1615)*(x1619)))+(((cj1)*(x1612)*(x1614)))+(((x1614)*(x1619)))+(((x1615)*(x1618)))+(((cj1)*(x1613)*(x1614))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst2)*(((((IkReal(-1.00000000000000))*(r22)*(x1619)))+(((r22)*(x1618)))+(((IkReal(-1.00000000000000))*(x1613)*(x1617)))+(((IkReal(-1.00000000000000))*(x1612)*(x1617)))))), ((gconst2)*(((((IkReal(-1.00000000000000))*(x1612)*(x1615)*(x1616)))+(((IkReal(-1.00000000000000))*(x1613)*(x1615)*(x1616)))+(((IkReal(-1.00000000000000))*(x1614)*(x1618)))+(((IkReal(-1.00000000000000))*(x1615)*(x1619)))+(((cj1)*(x1612)*(x1614)))+(((x1614)*(x1619)))+(((x1615)*(x1618)))+(((cj1)*(x1613)*(x1614)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[2];
IkReal x1620=IKsin(j4);
IkReal x1621=IKcos(j4);
IkReal x1622=((IkReal(1.00000000000000))*(cj1));
IkReal x1623=((cj5)*(r20));
IkReal x1624=((IkReal(1.00000000000000))*(r21)*(sj5));
evalcond[0]=((((x1620)*(x1623)))+(((IkReal(-1.00000000000000))*(x1620)*(x1624)))+(((r22)*(x1621))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(x1620)))+(((IkReal(-1.00000000000000))*(cj3)*(sj2)*(x1622)))+(((IkReal(-1.00000000000000))*(x1621)*(x1624)))+(((IkReal(-1.00000000000000))*(cj2)*(cj3)*(sj1)))+(((IkReal(-1.00000000000000))*(cj2)*(sj3)*(x1622)))+(((sj1)*(sj2)*(sj3)))+(((x1621)*(x1623))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst5;
IkReal x1625=((IkReal(20000.0000000000))*(cj5));
IkReal x1626=((IkReal(20000.0000000000))*(sj5));
gconst5=IKsign(((((IkReal(-1.00000000000000))*(px)*(r10)*(x1626)))+(((IkReal(-1.00000000000000))*(px)*(r11)*(x1625)))+(((py)*(r00)*(x1626)))+(((py)*(r01)*(x1625)))));
IkReal x1627=((IkReal(1.00000000000000))*(px));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r10)*(sj5)*(x1627)))+(((cj5)*(py)*(r01)))+(((IkReal(-1.00000000000000))*(cj5)*(r11)*(x1627)))+(((py)*(r00)*(sj5))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst6;
IkReal x1628=(sj5)*(sj5);
IkReal x1629=(cj5)*(cj5);
IkReal x1630=((cj4)*(sj5));
IkReal x1631=((IkReal(1.00000000000000))*(r02));
IkReal x1632=((r01)*(r10));
IkReal x1633=((cj4)*(cj5));
IkReal x1634=((sj4)*(x1629));
IkReal x1635=((IkReal(1.00000000000000))*(r00)*(r11));
IkReal x1636=((sj4)*(x1628));
gconst6=IKsign(((((IkReal(-1.00000000000000))*(x1635)*(x1636)))+(((IkReal(-1.00000000000000))*(x1634)*(x1635)))+(((r01)*(r12)*(x1633)))+(((IkReal(-1.00000000000000))*(r11)*(x1631)*(x1633)))+(((IkReal(-1.00000000000000))*(r10)*(x1630)*(x1631)))+(((r00)*(r12)*(x1630)))+(((x1632)*(x1636)))+(((x1632)*(x1634)))));
IkReal x1637=(sj5)*(sj5);
IkReal x1638=(cj5)*(cj5);
IkReal x1639=((cj4)*(sj5));
IkReal x1640=((IkReal(1.00000000000000))*(r02));
IkReal x1641=((r01)*(r10));
IkReal x1642=((cj4)*(cj5));
IkReal x1643=((sj4)*(x1638));
IkReal x1644=((IkReal(1.00000000000000))*(r00)*(r11));
IkReal x1645=((sj4)*(x1637));
dummyeval[0]=((((r01)*(r12)*(x1642)))+(((IkReal(-1.00000000000000))*(x1644)*(x1645)))+(((IkReal(-1.00000000000000))*(r10)*(x1639)*(x1640)))+(((x1641)*(x1643)))+(((x1641)*(x1645)))+(((IkReal(-1.00000000000000))*(x1643)*(x1644)))+(((r00)*(r12)*(x1639)))+(((IkReal(-1.00000000000000))*(r11)*(x1640)*(x1642))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
if( IKabs(((gconst6)*(((((cj5)*(r11)))+(((r10)*(sj5))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst6)*(((((r00)*(sj5)))+(((cj5)*(r01))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j0array[0]=IKatan2(((gconst6)*(((((cj5)*(r11)))+(((r10)*(sj5)))))), ((gconst6)*(((((r00)*(sj5)))+(((cj5)*(r01)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[8];
IkReal x1646=IKcos(j0);
IkReal x1647=IKsin(j0);
IkReal x1648=((IkReal(1.00000000000000))*(cj5));
IkReal x1649=((IkReal(0.0946500000000000))*(sj5));
IkReal x1650=((IkReal(1.00000000000000))*(cj2));
IkReal x1651=((cj3)*(sj1));
IkReal x1652=((cj1)*(sj3));
IkReal x1653=((IkReal(0.0946500000000000))*(cj5));
IkReal x1654=((r02)*(sj4));
IkReal x1655=((cj1)*(cj3));
IkReal x1656=((sj1)*(sj2));
IkReal x1657=((sj4)*(sj5));
IkReal x1658=((IkReal(1.00000000000000))*(sj5));
IkReal x1659=((cj4)*(r02));
IkReal x1660=((cj4)*(r12));
IkReal x1661=((cj4)*(sj5));
IkReal x1662=((r12)*(sj4));
IkReal x1663=((r01)*(x1647));
IkReal x1664=((r00)*(x1646));
IkReal x1665=((r00)*(x1647));
IkReal x1666=((r11)*(x1646));
IkReal x1667=((r01)*(x1646));
IkReal x1668=((r11)*(x1647));
IkReal x1669=((r10)*(x1647));
IkReal x1670=((IkReal(1.00000000000000))*(x1647));
IkReal x1671=((r10)*(x1646));
IkReal x1672=((IkReal(1.00000000000000))*(x1646));
evalcond[0]=((((cj5)*(x1666)))+(((sj5)*(x1671)))+(((IkReal(-1.00000000000000))*(x1658)*(x1665)))+(((IkReal(-1.00000000000000))*(x1648)*(x1663))));
evalcond[1]=((IkReal(0.109150000000000))+(((IkReal(-1.00000000000000))*(x1653)*(x1666)))+(((px)*(x1647)))+(((IkReal(-1.00000000000000))*(x1649)*(x1671)))+(((IkReal(-1.00000000000000))*(py)*(x1672)))+(((x1649)*(x1665)))+(((x1653)*(x1663))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1654)*(x1670)))+(((IkReal(-1.00000000000000))*(cj4)*(x1648)*(x1671)))+(((IkReal(-1.00000000000000))*(cj4)*(x1658)*(x1663)))+(((x1646)*(x1662)))+(((cj4)*(cj5)*(x1665)))+(((x1661)*(x1666))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1659)*(x1672)))+(((x1657)*(x1668)))+(((x1657)*(x1667)))+(((IkReal(-1.00000000000000))*(sj4)*(x1648)*(x1664)))+(((IkReal(-1.00000000000000))*(sj4)*(x1648)*(x1669)))+(((IkReal(-1.00000000000000))*(x1660)*(x1670))));
evalcond[4]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(sj4)*(x1648)*(x1671)))+(((x1647)*(x1659)))+(((cj5)*(sj4)*(x1665)))+(((x1657)*(x1666)))+(((IkReal(-1.00000000000000))*(x1660)*(x1672)))+(((IkReal(-1.00000000000000))*(x1657)*(x1663))));
evalcond[5]=((((IkReal(0.392250000000000))*(cj1)*(cj2)))+(((IkReal(-1.00000000000000))*(px)*(x1672)))+(((IkReal(-1.00000000000000))*(x1653)*(x1667)))+(((IkReal(-1.00000000000000))*(x1653)*(x1668)))+(((IkReal(0.425000000000000))*(cj1)))+(((IkReal(-1.00000000000000))*(py)*(x1670)))+(((IkReal(-0.392250000000000))*(x1656)))+(((IkReal(-1.00000000000000))*(x1649)*(x1664)))+(((IkReal(-1.00000000000000))*(x1649)*(x1669))));
evalcond[6]=((((cj5)*(x1667)))+(((cj5)*(x1668)))+(((IkReal(-1.00000000000000))*(x1650)*(x1652)))+(((IkReal(-1.00000000000000))*(x1650)*(x1651)))+(((sj5)*(x1669)))+(((sj5)*(x1664)))+(((sj3)*(x1656)))+(((IkReal(-1.00000000000000))*(sj2)*(x1655))));
evalcond[7]=((((IkReal(-1.00000000000000))*(cj4)*(x1648)*(x1664)))+(((IkReal(-1.00000000000000))*(cj4)*(x1648)*(x1669)))+(((IkReal(-1.00000000000000))*(x1650)*(x1655)))+(((x1646)*(x1654)))+(((sj2)*(x1652)))+(((sj2)*(x1651)))+(((x1647)*(x1662)))+(((x1661)*(x1668)))+(((x1661)*(x1667)))+(((cj2)*(sj1)*(sj3))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x1673=((IkReal(2183.00000000000))*(sj5));
IkReal x1674=((IkReal(2183.00000000000))*(cj5));
if( IKabs(((gconst5)*(((((r10)*(x1673)))+(((r11)*(x1674))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst5)*(((((r00)*(x1673)))+(((r01)*(x1674))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j0array[0]=IKatan2(((gconst5)*(((((r10)*(x1673)))+(((r11)*(x1674)))))), ((gconst5)*(((((r00)*(x1673)))+(((r01)*(x1674)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[8];
IkReal x1675=IKcos(j0);
IkReal x1676=IKsin(j0);
IkReal x1677=((IkReal(1.00000000000000))*(cj5));
IkReal x1678=((IkReal(0.0946500000000000))*(sj5));
IkReal x1679=((IkReal(1.00000000000000))*(cj2));
IkReal x1680=((cj3)*(sj1));
IkReal x1681=((cj1)*(sj3));
IkReal x1682=((IkReal(0.0946500000000000))*(cj5));
IkReal x1683=((r02)*(sj4));
IkReal x1684=((cj1)*(cj3));
IkReal x1685=((sj1)*(sj2));
IkReal x1686=((sj4)*(sj5));
IkReal x1687=((IkReal(1.00000000000000))*(sj5));
IkReal x1688=((cj4)*(r02));
IkReal x1689=((cj4)*(r12));
IkReal x1690=((cj4)*(sj5));
IkReal x1691=((r12)*(sj4));
IkReal x1692=((r01)*(x1676));
IkReal x1693=((r00)*(x1675));
IkReal x1694=((r00)*(x1676));
IkReal x1695=((r11)*(x1675));
IkReal x1696=((r01)*(x1675));
IkReal x1697=((r11)*(x1676));
IkReal x1698=((r10)*(x1676));
IkReal x1699=((IkReal(1.00000000000000))*(x1676));
IkReal x1700=((r10)*(x1675));
IkReal x1701=((IkReal(1.00000000000000))*(x1675));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1687)*(x1694)))+(((cj5)*(x1695)))+(((sj5)*(x1700)))+(((IkReal(-1.00000000000000))*(x1677)*(x1692))));
evalcond[1]=((IkReal(0.109150000000000))+(((IkReal(-1.00000000000000))*(py)*(x1701)))+(((IkReal(-1.00000000000000))*(x1682)*(x1695)))+(((px)*(x1676)))+(((IkReal(-1.00000000000000))*(x1678)*(x1700)))+(((x1682)*(x1692)))+(((x1678)*(x1694))));
evalcond[2]=((((x1690)*(x1695)))+(((IkReal(-1.00000000000000))*(cj4)*(x1687)*(x1692)))+(((IkReal(-1.00000000000000))*(cj4)*(x1677)*(x1700)))+(((x1675)*(x1691)))+(((IkReal(-1.00000000000000))*(x1683)*(x1699)))+(((cj4)*(cj5)*(x1694))));
evalcond[3]=((((x1686)*(x1696)))+(((x1686)*(x1697)))+(((IkReal(-1.00000000000000))*(x1688)*(x1701)))+(((IkReal(-1.00000000000000))*(sj4)*(x1677)*(x1693)))+(((IkReal(-1.00000000000000))*(sj4)*(x1677)*(x1698)))+(((IkReal(-1.00000000000000))*(x1689)*(x1699))));
evalcond[4]=((IkReal(1.00000000000000))+(((x1676)*(x1688)))+(((IkReal(-1.00000000000000))*(sj4)*(x1677)*(x1700)))+(((x1686)*(x1695)))+(((IkReal(-1.00000000000000))*(x1689)*(x1701)))+(((IkReal(-1.00000000000000))*(x1686)*(x1692)))+(((cj5)*(sj4)*(x1694))));
evalcond[5]=((((IkReal(-1.00000000000000))*(py)*(x1699)))+(((IkReal(0.392250000000000))*(cj1)*(cj2)))+(((IkReal(-1.00000000000000))*(px)*(x1701)))+(((IkReal(-1.00000000000000))*(x1682)*(x1697)))+(((IkReal(-1.00000000000000))*(x1682)*(x1696)))+(((IkReal(-1.00000000000000))*(x1678)*(x1698)))+(((IkReal(-1.00000000000000))*(x1678)*(x1693)))+(((IkReal(0.425000000000000))*(cj1)))+(((IkReal(-0.392250000000000))*(x1685))));
evalcond[6]=((((cj5)*(x1696)))+(((cj5)*(x1697)))+(((IkReal(-1.00000000000000))*(x1679)*(x1680)))+(((IkReal(-1.00000000000000))*(x1679)*(x1681)))+(((IkReal(-1.00000000000000))*(sj2)*(x1684)))+(((sj5)*(x1698)))+(((sj5)*(x1693)))+(((sj3)*(x1685))));
evalcond[7]=((((x1690)*(x1697)))+(((x1690)*(x1696)))+(((x1675)*(x1683)))+(((IkReal(-1.00000000000000))*(x1679)*(x1684)))+(((x1676)*(x1691)))+(((IkReal(-1.00000000000000))*(cj4)*(x1677)*(x1693)))+(((IkReal(-1.00000000000000))*(cj4)*(x1677)*(x1698)))+(((cj2)*(sj1)*(sj3)))+(((sj2)*(x1680)))+(((sj2)*(x1681))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x1702=((IkReal(2183.00000000000))*(sj5));
IkReal x1703=((IkReal(2183.00000000000))*(cj5));
if( IKabs(((gconst0)*(((((r11)*(x1703)))+(((r10)*(x1702))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst0)*(((((r01)*(x1703)))+(((r00)*(x1702))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j0array[0]=IKatan2(((gconst0)*(((((r11)*(x1703)))+(((r10)*(x1702)))))), ((gconst0)*(((((r01)*(x1703)))+(((r00)*(x1702)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[4];
IkReal x1704=IKcos(j0);
IkReal x1705=IKsin(j0);
IkReal x1706=((r00)*(sj5));
IkReal x1707=((IkReal(1.00000000000000))*(cj2));
IkReal x1708=((cj5)*(r11));
IkReal x1709=((sj1)*(sj2));
IkReal x1710=((r10)*(sj5));
IkReal x1711=((IkReal(0.0946500000000000))*(x1705));
IkReal x1712=((IkReal(0.0946500000000000))*(x1704));
IkReal x1713=((IkReal(1.00000000000000))*(x1705));
IkReal x1714=((IkReal(1.00000000000000))*(x1704));
IkReal x1715=((cj5)*(r01)*(x1705));
IkReal x1716=((cj5)*(x1712));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj5)*(r01)*(x1713)))+(((x1704)*(x1708)))+(((IkReal(-1.00000000000000))*(x1706)*(x1713)))+(((x1704)*(x1710))));
evalcond[1]=((IkReal(0.109150000000000))+(((IkReal(-1.00000000000000))*(x1710)*(x1712)))+(((IkReal(-1.00000000000000))*(x1708)*(x1712)))+(((px)*(x1705)))+(((cj5)*(r01)*(x1711)))+(((x1706)*(x1711)))+(((IkReal(-1.00000000000000))*(py)*(x1714))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1710)*(x1711)))+(((IkReal(-1.00000000000000))*(px)*(x1714)))+(((IkReal(0.392250000000000))*(cj1)*(cj2)))+(((IkReal(0.425000000000000))*(cj1)))+(((IkReal(-1.00000000000000))*(x1708)*(x1711)))+(((IkReal(-1.00000000000000))*(x1706)*(x1712)))+(((IkReal(-0.392250000000000))*(x1709)))+(((IkReal(-1.00000000000000))*(py)*(x1713)))+(((IkReal(-1.00000000000000))*(r01)*(x1716))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj3)*(sj1)*(x1707)))+(((IkReal(-1.00000000000000))*(cj1)*(cj3)*(sj2)))+(((x1705)*(x1708)))+(((x1704)*(x1706)))+(((cj5)*(r01)*(x1704)))+(((sj3)*(x1709)))+(((x1705)*(x1710)))+(((IkReal(-1.00000000000000))*(cj1)*(sj3)*(x1707))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst3;
IkReal x1717=((IkReal(1.00000000000000))*(sj0));
IkReal x1718=((cj5)*(r22));
IkReal x1719=((r21)*(sj5));
IkReal x1720=((IkReal(1.00000000000000))*(cj0));
IkReal x1721=((r22)*(sj5));
IkReal x1722=((cj5)*(r20));
gconst3=IKsign(((((cj0)*(r12)*(x1719)))+(((IkReal(-1.00000000000000))*(r11)*(x1720)*(x1721)))+(((r02)*(sj0)*(x1722)))+(((IkReal(-1.00000000000000))*(r00)*(x1717)*(x1718)))+(((cj0)*(r10)*(x1718)))+(((r01)*(sj0)*(x1721)))+(((IkReal(-1.00000000000000))*(r12)*(x1720)*(x1722)))+(((IkReal(-1.00000000000000))*(r02)*(x1717)*(x1719)))));
IkReal x1723=((IkReal(1.00000000000000))*(sj0));
IkReal x1724=((cj5)*(r22));
IkReal x1725=((r21)*(sj5));
IkReal x1726=((IkReal(1.00000000000000))*(cj0));
IkReal x1727=((r22)*(sj5));
IkReal x1728=((cj5)*(r20));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r11)*(x1726)*(x1727)))+(((r02)*(sj0)*(x1728)))+(((IkReal(-1.00000000000000))*(r12)*(x1726)*(x1728)))+(((IkReal(-1.00000000000000))*(r00)*(x1723)*(x1724)))+(((r01)*(sj0)*(x1727)))+(((cj0)*(r12)*(x1725)))+(((cj0)*(r10)*(x1724)))+(((IkReal(-1.00000000000000))*(r02)*(x1723)*(x1725))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst4;
gconst4=IKsign((((r22)*(r22))+((((cj5)*(cj5))*((r20)*(r20))))+(((IkReal(-2.00000000000000))*(cj5)*(r20)*(r21)*(sj5)))+((((r21)*(r21))*((sj5)*(sj5))))));
dummyeval[0]=(((r22)*(r22))+((((cj5)*(cj5))*((r20)*(r20))))+(((IkReal(-2.00000000000000))*(cj5)*(r20)*(r21)*(sj5)))+((((r21)*(r21))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1729=((cj3)*(sj2));
IkReal x1730=((cj2)*(cj3));
IkReal x1731=((cj2)*(sj3));
IkReal x1732=((sj2)*(sj3));
IkReal x1733=((r21)*(sj5));
IkReal x1734=((IkReal(1.00000000000000))*(cj1));
IkReal x1735=((IkReal(1.00000000000000))*(sj1));
IkReal x1736=((r22)*(x1734));
IkReal x1737=((cj5)*(r20)*(sj1));
IkReal x1738=((cj1)*(cj5)*(r20));
if( IKabs(((gconst4)*(((((IkReal(-1.00000000000000))*(x1731)*(x1736)))+(((IkReal(-1.00000000000000))*(x1729)*(x1736)))+(((IkReal(-1.00000000000000))*(r22)*(x1730)*(x1735)))+(((r22)*(sj1)*(x1732))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst4)*(((((x1730)*(x1737)))+(((x1731)*(x1738)))+(((sj1)*(x1732)*(x1733)))+(((x1729)*(x1738)))+(((IkReal(-1.00000000000000))*(x1729)*(x1733)*(x1734)))+(((IkReal(-1.00000000000000))*(cj5)*(r20)*(x1732)*(x1735)))+(((IkReal(-1.00000000000000))*(x1730)*(x1733)*(x1735)))+(((IkReal(-1.00000000000000))*(x1731)*(x1733)*(x1734))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst4)*(((((IkReal(-1.00000000000000))*(x1731)*(x1736)))+(((IkReal(-1.00000000000000))*(x1729)*(x1736)))+(((IkReal(-1.00000000000000))*(r22)*(x1730)*(x1735)))+(((r22)*(sj1)*(x1732)))))), ((gconst4)*(((((x1730)*(x1737)))+(((x1731)*(x1738)))+(((sj1)*(x1732)*(x1733)))+(((x1729)*(x1738)))+(((IkReal(-1.00000000000000))*(x1729)*(x1733)*(x1734)))+(((IkReal(-1.00000000000000))*(cj5)*(r20)*(x1732)*(x1735)))+(((IkReal(-1.00000000000000))*(x1730)*(x1733)*(x1735)))+(((IkReal(-1.00000000000000))*(x1731)*(x1733)*(x1734)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x1739=IKsin(j4);
IkReal x1740=IKcos(j4);
IkReal x1741=((IkReal(1.00000000000000))*(cj2));
IkReal x1742=((cj3)*(sj1));
IkReal x1743=((cj1)*(sj3));
IkReal x1744=((IkReal(1.00000000000000))*(cj5));
IkReal x1745=((IkReal(1.00000000000000))*(r01));
IkReal x1746=((cj1)*(cj3));
IkReal x1747=((r11)*(sj5));
IkReal x1748=((sj1)*(sj3));
IkReal x1749=((r01)*(sj5));
IkReal x1750=((r21)*(sj5));
IkReal x1751=((cj0)*(x1739));
IkReal x1752=((cj5)*(x1739));
IkReal x1753=((sj0)*(x1740));
IkReal x1754=((IkReal(1.00000000000000))*(x1739));
IkReal x1755=((cj0)*(x1740));
IkReal x1756=((sj0)*(sj5)*(x1739));
IkReal x1757=((IkReal(1.00000000000000))*(x1755));
evalcond[0]=((((r22)*(x1740)))+(((IkReal(-1.00000000000000))*(x1750)*(x1754)))+(((r20)*(x1752))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r10)*(x1744)*(x1755)))+(((x1747)*(x1755)))+(((IkReal(-1.00000000000000))*(r02)*(sj0)*(x1754)))+(((cj5)*(r00)*(x1753)))+(((IkReal(-1.00000000000000))*(sj5)*(x1745)*(x1753)))+(((r12)*(x1751))));
evalcond[2]=((((x1749)*(x1751)))+(((IkReal(-1.00000000000000))*(r12)*(x1753)))+(((IkReal(-1.00000000000000))*(r10)*(sj0)*(x1739)*(x1744)))+(((sj0)*(x1739)*(x1747)))+(((IkReal(-1.00000000000000))*(r02)*(x1757)))+(((IkReal(-1.00000000000000))*(r00)*(x1744)*(x1751))));
evalcond[3]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(r12)*(x1757)))+(((IkReal(-1.00000000000000))*(r10)*(x1744)*(x1751)))+(((x1747)*(x1751)))+(((r02)*(x1753)))+(((IkReal(-1.00000000000000))*(x1745)*(x1756)))+(((r00)*(sj0)*(x1752))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x1741)*(x1742)))+(((IkReal(-1.00000000000000))*(x1741)*(x1743)))+(((IkReal(-1.00000000000000))*(r22)*(x1754)))+(((IkReal(-1.00000000000000))*(sj2)*(x1746)))+(((IkReal(-1.00000000000000))*(x1740)*(x1750)))+(((cj5)*(r20)*(x1740)))+(((sj2)*(x1748))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x1741)*(x1746)))+(((x1749)*(x1755)))+(((IkReal(-1.00000000000000))*(r10)*(x1744)*(x1753)))+(((x1747)*(x1753)))+(((r02)*(x1751)))+(((cj2)*(x1748)))+(((r12)*(sj0)*(x1739)))+(((sj2)*(x1743)))+(((sj2)*(x1742)))+(((IkReal(-1.00000000000000))*(r00)*(x1744)*(x1755))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs(((gconst3)*(r22))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst3)*(((((r21)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(r20))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst3)*(r22)), ((gconst3)*(((((r21)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(r20)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x1758=IKsin(j4);
IkReal x1759=IKcos(j4);
IkReal x1760=((IkReal(1.00000000000000))*(cj2));
IkReal x1761=((cj3)*(sj1));
IkReal x1762=((cj1)*(sj3));
IkReal x1763=((IkReal(1.00000000000000))*(cj5));
IkReal x1764=((IkReal(1.00000000000000))*(r01));
IkReal x1765=((cj1)*(cj3));
IkReal x1766=((r11)*(sj5));
IkReal x1767=((sj1)*(sj3));
IkReal x1768=((r01)*(sj5));
IkReal x1769=((r21)*(sj5));
IkReal x1770=((cj0)*(x1758));
IkReal x1771=((cj5)*(x1758));
IkReal x1772=((sj0)*(x1759));
IkReal x1773=((IkReal(1.00000000000000))*(x1758));
IkReal x1774=((cj0)*(x1759));
IkReal x1775=((sj0)*(sj5)*(x1758));
IkReal x1776=((IkReal(1.00000000000000))*(x1774));
evalcond[0]=((((r22)*(x1759)))+(((r20)*(x1771)))+(((IkReal(-1.00000000000000))*(x1769)*(x1773))));
evalcond[1]=((((r12)*(x1770)))+(((x1766)*(x1774)))+(((IkReal(-1.00000000000000))*(sj5)*(x1764)*(x1772)))+(((IkReal(-1.00000000000000))*(r02)*(sj0)*(x1773)))+(((cj5)*(r00)*(x1772)))+(((IkReal(-1.00000000000000))*(r10)*(x1763)*(x1774))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r00)*(x1763)*(x1770)))+(((IkReal(-1.00000000000000))*(r10)*(sj0)*(x1758)*(x1763)))+(((IkReal(-1.00000000000000))*(r12)*(x1772)))+(((IkReal(-1.00000000000000))*(r02)*(x1776)))+(((sj0)*(x1758)*(x1766)))+(((x1768)*(x1770))));
evalcond[3]=((IkReal(1.00000000000000))+(((r02)*(x1772)))+(((x1766)*(x1770)))+(((r00)*(sj0)*(x1771)))+(((IkReal(-1.00000000000000))*(x1764)*(x1775)))+(((IkReal(-1.00000000000000))*(r10)*(x1763)*(x1770)))+(((IkReal(-1.00000000000000))*(r12)*(x1776))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x1759)*(x1769)))+(((sj2)*(x1767)))+(((IkReal(-1.00000000000000))*(x1760)*(x1761)))+(((IkReal(-1.00000000000000))*(x1760)*(x1762)))+(((IkReal(-1.00000000000000))*(sj2)*(x1765)))+(((cj5)*(r20)*(x1759)))+(((IkReal(-1.00000000000000))*(r22)*(x1773))));
evalcond[5]=((((r02)*(x1770)))+(((sj2)*(x1761)))+(((sj2)*(x1762)))+(((IkReal(-1.00000000000000))*(r00)*(x1763)*(x1774)))+(((x1766)*(x1772)))+(((IkReal(-1.00000000000000))*(x1760)*(x1765)))+(((r12)*(sj0)*(x1758)))+(((IkReal(-1.00000000000000))*(r10)*(x1763)*(x1772)))+(((cj2)*(x1767)))+(((x1768)*(x1774))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j5array[2], cj5array[2], sj5array[2];
bool j5valid[2]={false};
_nj5 = 2;
if( IKabs(((IkReal(0.0946500000000000))*(r21))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(0.0946500000000000))*(r20))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x1777=((IkReal(1.00000000000000))*(IKatan2(((IkReal(0.0946500000000000))*(r21)), ((IkReal(0.0946500000000000))*(r20)))));
if( (((((IkReal(0.00895862250000000))*((r21)*(r21))))+(((IkReal(0.00895862250000000))*((r20)*(r20)))))) < (IkReal)-0.00001 )
    continue;
if( (((((IKabs(IKabs(IKsqrt(((((IkReal(0.00895862250000000))*((r21)*(r21))))+(((IkReal(0.00895862250000000))*((r20)*(r20)))))))) != 0)?((IkReal)1/(IKabs(IKsqrt(((((IkReal(0.00895862250000000))*((r21)*(r21))))+(((IkReal(0.00895862250000000))*((r20)*(r20))))))))):(IkReal)1.0e30))*(((pz)+(((IkReal(0.392250000000000))*(cj1)*(sj2)))+(((IkReal(0.425000000000000))*(sj1)))+(((IkReal(0.392250000000000))*(cj2)*(sj1))))))) < -1-IKFAST_SINCOS_THRESH || (((((IKabs(IKabs(IKsqrt(((((IkReal(0.00895862250000000))*((r21)*(r21))))+(((IkReal(0.00895862250000000))*((r20)*(r20)))))))) != 0)?((IkReal)1/(IKabs(IKsqrt(((((IkReal(0.00895862250000000))*((r21)*(r21))))+(((IkReal(0.00895862250000000))*((r20)*(r20))))))))):(IkReal)1.0e30))*(((pz)+(((IkReal(0.392250000000000))*(cj1)*(sj2)))+(((IkReal(0.425000000000000))*(sj1)))+(((IkReal(0.392250000000000))*(cj2)*(sj1))))))) > 1+IKFAST_SINCOS_THRESH )
    continue;
IkReal x1778=IKasin(((((IKabs(IKabs(IKsqrt(((((IkReal(0.00895862250000000))*((r21)*(r21))))+(((IkReal(0.00895862250000000))*((r20)*(r20)))))))) != 0)?((IkReal)1/(IKabs(IKsqrt(((((IkReal(0.00895862250000000))*((r21)*(r21))))+(((IkReal(0.00895862250000000))*((r20)*(r20))))))))):(IkReal)1.0e30))*(((pz)+(((IkReal(0.392250000000000))*(cj1)*(sj2)))+(((IkReal(0.425000000000000))*(sj1)))+(((IkReal(0.392250000000000))*(cj2)*(sj1)))))));
j5array[0]=((((IkReal(-1.00000000000000))*(x1778)))+(((IkReal(-1.00000000000000))*(x1777))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
j5array[1]=((IkReal(3.14159265358979))+(x1778)+(((IkReal(-1.00000000000000))*(x1777))));
sj5array[1]=IKsin(j5array[1]);
cj5array[1]=IKcos(j5array[1]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
if( j5array[1] > IKPI )
{
    j5array[1]-=IK2PI;
}
else if( j5array[1] < -IKPI )
{    j5array[1]+=IK2PI;
}
j5valid[1] = true;
for(int ij5 = 0; ij5 < 2; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 2; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[1];
IkReal x1779=((IkReal(1.00000000000000))*(sj3));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj2)*(sj1)*(x1779)))+(((IkReal(-1.00000000000000))*(cj3)*(sj1)*(sj2)))+(((cj1)*(cj2)*(cj3)))+(((IkReal(-1.00000000000000))*(cj1)*(sj2)*(x1779)))+(((IkReal(-1.00000000000000))*(r21)*(IKcos(j5))))+(((IkReal(-1.00000000000000))*(r20)*(IKsin(j5)))));
if( IKabs(evalcond[0]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst0;
IkReal x1780=((IkReal(20000.0000000000))*(cj5));
IkReal x1781=((IkReal(20000.0000000000))*(sj5));
gconst0=IKsign(((((IkReal(-1.00000000000000))*(px)*(r10)*(x1781)))+(((py)*(r00)*(x1781)))+(((IkReal(-1.00000000000000))*(px)*(r11)*(x1780)))+(((py)*(r01)*(x1780)))));
IkReal x1782=((IkReal(1.00000000000000))*(px));
dummyeval[0]=((((cj5)*(py)*(r01)))+(((IkReal(-1.00000000000000))*(r10)*(sj5)*(x1782)))+(((py)*(r00)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(r11)*(x1782))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst2;
gconst2=IKsign((((r22)*(r22))+((((cj5)*(cj5))*((r20)*(r20))))+(((IkReal(-2.00000000000000))*(cj5)*(r20)*(r21)*(sj5)))+((((r21)*(r21))*((sj5)*(sj5))))));
dummyeval[0]=(((r22)*(r22))+((((cj5)*(cj5))*((r20)*(r20))))+(((IkReal(-2.00000000000000))*(cj5)*(r20)*(r21)*(sj5)))+((((r21)*(r21))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst1;
IkReal x1783=(cj5)*(cj5);
IkReal x1784=(sj5)*(sj5);
IkReal x1785=((IkReal(1.00000000000000))*(x1784));
IkReal x1786=((IkReal(2.00000000000000))*(cj5)*(sj5));
IkReal x1787=((IkReal(1.00000000000000))*(x1783));
gconst1=IKsign(((((IkReal(-1.00000000000000))*(x1787)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(x1785)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(x1787)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(x1785)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x1786)))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x1786)))));
IkReal x1788=(cj5)*(cj5);
IkReal x1789=(sj5)*(sj5);
IkReal x1790=((IkReal(1.00000000000000))*(x1789));
IkReal x1791=((IkReal(2.00000000000000))*(cj5)*(sj5));
IkReal x1792=((IkReal(1.00000000000000))*(x1788));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x1792)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x1791)))+(((IkReal(-1.00000000000000))*(x1790)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x1791)))+(((IkReal(-1.00000000000000))*(x1792)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(x1790)*((r10)*(r10)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x1793=((sj2)*(sj3));
IkReal x1794=((cj5)*(r01));
IkReal x1795=((cj5)*(r11));
IkReal x1796=((r00)*(sj5));
IkReal x1797=((r10)*(sj5));
IkReal x1798=((sj1)*(x1796));
IkReal x1799=((IkReal(1.00000000000000))*(cj2)*(cj3));
IkReal x1800=((sj1)*(x1797));
IkReal x1801=((IkReal(1.00000000000000))*(cj1)*(cj2)*(sj3));
IkReal x1802=((IkReal(1.00000000000000))*(cj1)*(cj3)*(sj2));
if( IKabs(((gconst1)*(((((IkReal(-1.00000000000000))*(sj1)*(x1795)*(x1799)))+(((IkReal(-1.00000000000000))*(x1797)*(x1801)))+(((IkReal(-1.00000000000000))*(x1797)*(x1802)))+(((IkReal(-1.00000000000000))*(x1799)*(x1800)))+(((sj1)*(x1793)*(x1795)))+(((IkReal(-1.00000000000000))*(x1795)*(x1801)))+(((IkReal(-1.00000000000000))*(x1795)*(x1802)))+(((x1793)*(x1800))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst1)*(((((x1793)*(x1798)))+(((IkReal(-1.00000000000000))*(sj1)*(x1794)*(x1799)))+(((sj1)*(x1793)*(x1794)))+(((IkReal(-1.00000000000000))*(x1796)*(x1802)))+(((IkReal(-1.00000000000000))*(x1796)*(x1801)))+(((IkReal(-1.00000000000000))*(x1794)*(x1801)))+(((IkReal(-1.00000000000000))*(x1794)*(x1802)))+(((IkReal(-1.00000000000000))*(x1798)*(x1799))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j0array[0]=IKatan2(((gconst1)*(((((IkReal(-1.00000000000000))*(sj1)*(x1795)*(x1799)))+(((IkReal(-1.00000000000000))*(x1797)*(x1801)))+(((IkReal(-1.00000000000000))*(x1797)*(x1802)))+(((IkReal(-1.00000000000000))*(x1799)*(x1800)))+(((sj1)*(x1793)*(x1795)))+(((IkReal(-1.00000000000000))*(x1795)*(x1801)))+(((IkReal(-1.00000000000000))*(x1795)*(x1802)))+(((x1793)*(x1800)))))), ((gconst1)*(((((x1793)*(x1798)))+(((IkReal(-1.00000000000000))*(sj1)*(x1794)*(x1799)))+(((sj1)*(x1793)*(x1794)))+(((IkReal(-1.00000000000000))*(x1796)*(x1802)))+(((IkReal(-1.00000000000000))*(x1796)*(x1801)))+(((IkReal(-1.00000000000000))*(x1794)*(x1801)))+(((IkReal(-1.00000000000000))*(x1794)*(x1802)))+(((IkReal(-1.00000000000000))*(x1798)*(x1799)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[4];
IkReal x1803=IKcos(j0);
IkReal x1804=IKsin(j0);
IkReal x1805=((r00)*(sj5));
IkReal x1806=((IkReal(1.00000000000000))*(cj2));
IkReal x1807=((cj5)*(r11));
IkReal x1808=((sj1)*(sj2));
IkReal x1809=((r10)*(sj5));
IkReal x1810=((IkReal(0.0946500000000000))*(x1804));
IkReal x1811=((IkReal(0.0946500000000000))*(x1803));
IkReal x1812=((IkReal(1.00000000000000))*(x1804));
IkReal x1813=((IkReal(1.00000000000000))*(x1803));
IkReal x1814=((cj5)*(r01)*(x1804));
IkReal x1815=((cj5)*(x1811));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj5)*(r01)*(x1812)))+(((IkReal(-1.00000000000000))*(x1805)*(x1812)))+(((x1803)*(x1809)))+(((x1803)*(x1807))));
evalcond[1]=((IkReal(0.109150000000000))+(((IkReal(-1.00000000000000))*(x1809)*(x1811)))+(((IkReal(-1.00000000000000))*(x1807)*(x1811)))+(((x1805)*(x1810)))+(((IkReal(-1.00000000000000))*(py)*(x1813)))+(((cj5)*(r01)*(x1810)))+(((px)*(x1804))));
evalcond[2]=((((IkReal(0.392250000000000))*(cj1)*(cj2)))+(((IkReal(-1.00000000000000))*(x1805)*(x1811)))+(((IkReal(-1.00000000000000))*(x1809)*(x1810)))+(((IkReal(-1.00000000000000))*(x1807)*(x1810)))+(((IkReal(0.425000000000000))*(cj1)))+(((IkReal(-1.00000000000000))*(r01)*(x1815)))+(((IkReal(-1.00000000000000))*(py)*(x1812)))+(((IkReal(-1.00000000000000))*(px)*(x1813)))+(((IkReal(-0.392250000000000))*(x1808))));
evalcond[3]=((((cj5)*(r01)*(x1803)))+(((IkReal(-1.00000000000000))*(cj1)*(cj3)*(sj2)))+(((x1803)*(x1805)))+(((sj3)*(x1808)))+(((IkReal(-1.00000000000000))*(cj3)*(sj1)*(x1806)))+(((x1804)*(x1807)))+(((x1804)*(x1809)))+(((IkReal(-1.00000000000000))*(cj1)*(sj3)*(x1806))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst3;
IkReal x1816=((IkReal(1.00000000000000))*(sj0));
IkReal x1817=((cj5)*(r22));
IkReal x1818=((r21)*(sj5));
IkReal x1819=((IkReal(1.00000000000000))*(cj0));
IkReal x1820=((r22)*(sj5));
IkReal x1821=((cj5)*(r20));
gconst3=IKsign(((((IkReal(-1.00000000000000))*(r12)*(x1819)*(x1821)))+(((cj0)*(r12)*(x1818)))+(((IkReal(-1.00000000000000))*(r00)*(x1816)*(x1817)))+(((IkReal(-1.00000000000000))*(r11)*(x1819)*(x1820)))+(((r01)*(sj0)*(x1820)))+(((cj0)*(r10)*(x1817)))+(((IkReal(-1.00000000000000))*(r02)*(x1816)*(x1818)))+(((r02)*(sj0)*(x1821)))));
IkReal x1822=((IkReal(1.00000000000000))*(sj0));
IkReal x1823=((cj5)*(r22));
IkReal x1824=((r21)*(sj5));
IkReal x1825=((IkReal(1.00000000000000))*(cj0));
IkReal x1826=((r22)*(sj5));
IkReal x1827=((cj5)*(r20));
dummyeval[0]=((((cj0)*(r12)*(x1824)))+(((r01)*(sj0)*(x1826)))+(((IkReal(-1.00000000000000))*(r02)*(x1822)*(x1824)))+(((IkReal(-1.00000000000000))*(r00)*(x1822)*(x1823)))+(((IkReal(-1.00000000000000))*(r12)*(x1825)*(x1827)))+(((cj0)*(r10)*(x1823)))+(((r02)*(sj0)*(x1827)))+(((IkReal(-1.00000000000000))*(r11)*(x1825)*(x1826))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst4;
gconst4=IKsign((((r22)*(r22))+((((cj5)*(cj5))*((r20)*(r20))))+(((IkReal(-2.00000000000000))*(cj5)*(r20)*(r21)*(sj5)))+((((r21)*(r21))*((sj5)*(sj5))))));
dummyeval[0]=(((r22)*(r22))+((((cj5)*(cj5))*((r20)*(r20))))+(((IkReal(-2.00000000000000))*(cj5)*(r20)*(r21)*(sj5)))+((((r21)*(r21))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1828=((cj3)*(sj2));
IkReal x1829=((cj2)*(cj3));
IkReal x1830=((cj2)*(sj3));
IkReal x1831=((sj2)*(sj3));
IkReal x1832=((r21)*(sj5));
IkReal x1833=((IkReal(1.00000000000000))*(cj1));
IkReal x1834=((IkReal(1.00000000000000))*(sj1));
IkReal x1835=((r22)*(x1833));
IkReal x1836=((cj5)*(r20)*(sj1));
IkReal x1837=((cj1)*(cj5)*(r20));
if( IKabs(((gconst4)*(((((IkReal(-1.00000000000000))*(r22)*(x1829)*(x1834)))+(((IkReal(-1.00000000000000))*(x1828)*(x1835)))+(((r22)*(sj1)*(x1831)))+(((IkReal(-1.00000000000000))*(x1830)*(x1835))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst4)*(((((x1829)*(x1836)))+(((IkReal(-1.00000000000000))*(x1830)*(x1832)*(x1833)))+(((sj1)*(x1831)*(x1832)))+(((x1830)*(x1837)))+(((IkReal(-1.00000000000000))*(cj5)*(r20)*(x1831)*(x1834)))+(((x1828)*(x1837)))+(((IkReal(-1.00000000000000))*(x1828)*(x1832)*(x1833)))+(((IkReal(-1.00000000000000))*(x1829)*(x1832)*(x1834))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst4)*(((((IkReal(-1.00000000000000))*(r22)*(x1829)*(x1834)))+(((IkReal(-1.00000000000000))*(x1828)*(x1835)))+(((r22)*(sj1)*(x1831)))+(((IkReal(-1.00000000000000))*(x1830)*(x1835)))))), ((gconst4)*(((((x1829)*(x1836)))+(((IkReal(-1.00000000000000))*(x1830)*(x1832)*(x1833)))+(((sj1)*(x1831)*(x1832)))+(((x1830)*(x1837)))+(((IkReal(-1.00000000000000))*(cj5)*(r20)*(x1831)*(x1834)))+(((x1828)*(x1837)))+(((IkReal(-1.00000000000000))*(x1828)*(x1832)*(x1833)))+(((IkReal(-1.00000000000000))*(x1829)*(x1832)*(x1834)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x1838=IKsin(j4);
IkReal x1839=IKcos(j4);
IkReal x1840=((IkReal(1.00000000000000))*(cj2));
IkReal x1841=((cj3)*(sj1));
IkReal x1842=((cj1)*(sj3));
IkReal x1843=((IkReal(1.00000000000000))*(cj5));
IkReal x1844=((IkReal(1.00000000000000))*(r01));
IkReal x1845=((cj1)*(cj3));
IkReal x1846=((r11)*(sj5));
IkReal x1847=((sj1)*(sj3));
IkReal x1848=((r01)*(sj5));
IkReal x1849=((r21)*(sj5));
IkReal x1850=((cj0)*(x1838));
IkReal x1851=((cj5)*(x1838));
IkReal x1852=((sj0)*(x1839));
IkReal x1853=((IkReal(1.00000000000000))*(x1838));
IkReal x1854=((cj0)*(x1839));
IkReal x1855=((sj0)*(sj5)*(x1838));
IkReal x1856=((IkReal(1.00000000000000))*(x1854));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1849)*(x1853)))+(((r22)*(x1839)))+(((r20)*(x1851))));
evalcond[1]=((((x1846)*(x1854)))+(((cj5)*(r00)*(x1852)))+(((IkReal(-1.00000000000000))*(r10)*(x1843)*(x1854)))+(((r12)*(x1850)))+(((IkReal(-1.00000000000000))*(r02)*(sj0)*(x1853)))+(((IkReal(-1.00000000000000))*(sj5)*(x1844)*(x1852))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r12)*(x1852)))+(((sj0)*(x1838)*(x1846)))+(((x1848)*(x1850)))+(((IkReal(-1.00000000000000))*(r10)*(sj0)*(x1838)*(x1843)))+(((IkReal(-1.00000000000000))*(r02)*(x1856)))+(((IkReal(-1.00000000000000))*(r00)*(x1843)*(x1850))));
evalcond[3]=((IkReal(1.00000000000000))+(((x1846)*(x1850)))+(((r02)*(x1852)))+(((IkReal(-1.00000000000000))*(r12)*(x1856)))+(((IkReal(-1.00000000000000))*(r10)*(x1843)*(x1850)))+(((IkReal(-1.00000000000000))*(x1844)*(x1855)))+(((r00)*(sj0)*(x1851))));
evalcond[4]=((((cj5)*(r20)*(x1839)))+(((sj2)*(x1847)))+(((IkReal(-1.00000000000000))*(r22)*(x1853)))+(((IkReal(-1.00000000000000))*(x1839)*(x1849)))+(((IkReal(-1.00000000000000))*(x1840)*(x1842)))+(((IkReal(-1.00000000000000))*(x1840)*(x1841)))+(((IkReal(-1.00000000000000))*(sj2)*(x1845))));
evalcond[5]=((((x1848)*(x1854)))+(((x1846)*(x1852)))+(((sj2)*(x1841)))+(((sj2)*(x1842)))+(((cj2)*(x1847)))+(((r12)*(sj0)*(x1838)))+(((r02)*(x1850)))+(((IkReal(-1.00000000000000))*(x1840)*(x1845)))+(((IkReal(-1.00000000000000))*(r10)*(x1843)*(x1852)))+(((IkReal(-1.00000000000000))*(r00)*(x1843)*(x1854))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs(((gconst3)*(r22))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst3)*(((((r21)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(r20))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst3)*(r22)), ((gconst3)*(((((r21)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(r20)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x1857=IKsin(j4);
IkReal x1858=IKcos(j4);
IkReal x1859=((IkReal(1.00000000000000))*(cj2));
IkReal x1860=((cj3)*(sj1));
IkReal x1861=((cj1)*(sj3));
IkReal x1862=((IkReal(1.00000000000000))*(cj5));
IkReal x1863=((IkReal(1.00000000000000))*(r01));
IkReal x1864=((cj1)*(cj3));
IkReal x1865=((r11)*(sj5));
IkReal x1866=((sj1)*(sj3));
IkReal x1867=((r01)*(sj5));
IkReal x1868=((r21)*(sj5));
IkReal x1869=((cj0)*(x1857));
IkReal x1870=((cj5)*(x1857));
IkReal x1871=((sj0)*(x1858));
IkReal x1872=((IkReal(1.00000000000000))*(x1857));
IkReal x1873=((cj0)*(x1858));
IkReal x1874=((sj0)*(sj5)*(x1857));
IkReal x1875=((IkReal(1.00000000000000))*(x1873));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1868)*(x1872)))+(((r22)*(x1858)))+(((r20)*(x1870))));
evalcond[1]=((((r12)*(x1869)))+(((x1865)*(x1873)))+(((IkReal(-1.00000000000000))*(sj5)*(x1863)*(x1871)))+(((IkReal(-1.00000000000000))*(r02)*(sj0)*(x1872)))+(((cj5)*(r00)*(x1871)))+(((IkReal(-1.00000000000000))*(r10)*(x1862)*(x1873))));
evalcond[2]=((((x1867)*(x1869)))+(((IkReal(-1.00000000000000))*(r02)*(x1875)))+(((IkReal(-1.00000000000000))*(r00)*(x1862)*(x1869)))+(((IkReal(-1.00000000000000))*(r12)*(x1871)))+(((IkReal(-1.00000000000000))*(r10)*(sj0)*(x1857)*(x1862)))+(((sj0)*(x1857)*(x1865))));
evalcond[3]=((IkReal(1.00000000000000))+(((r00)*(sj0)*(x1870)))+(((IkReal(-1.00000000000000))*(r10)*(x1862)*(x1869)))+(((r02)*(x1871)))+(((x1865)*(x1869)))+(((IkReal(-1.00000000000000))*(x1863)*(x1874)))+(((IkReal(-1.00000000000000))*(r12)*(x1875))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r22)*(x1872)))+(((IkReal(-1.00000000000000))*(sj2)*(x1864)))+(((sj2)*(x1866)))+(((cj5)*(r20)*(x1858)))+(((IkReal(-1.00000000000000))*(x1859)*(x1861)))+(((IkReal(-1.00000000000000))*(x1859)*(x1860)))+(((IkReal(-1.00000000000000))*(x1858)*(x1868))));
evalcond[5]=((((r12)*(sj0)*(x1857)))+(((x1865)*(x1871)))+(((r02)*(x1869)))+(((sj2)*(x1861)))+(((sj2)*(x1860)))+(((IkReal(-1.00000000000000))*(x1859)*(x1864)))+(((IkReal(-1.00000000000000))*(r00)*(x1862)*(x1873)))+(((IkReal(-1.00000000000000))*(r10)*(x1862)*(x1871)))+(((x1867)*(x1873)))+(((cj2)*(x1866))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1876=((cj3)*(sj2));
IkReal x1877=((cj2)*(sj3));
IkReal x1878=((cj5)*(r20));
IkReal x1879=((r21)*(sj5));
IkReal x1880=((IkReal(1.00000000000000))*(cj1));
IkReal x1881=((r22)*(x1880));
IkReal x1882=((sj1)*(sj2)*(sj3));
IkReal x1883=((cj2)*(cj3)*(sj1));
if( IKabs(((gconst2)*(((((IkReal(-1.00000000000000))*(x1876)*(x1881)))+(((IkReal(-1.00000000000000))*(r22)*(x1883)))+(((r22)*(x1882)))+(((IkReal(-1.00000000000000))*(x1877)*(x1881))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst2)*(((((x1879)*(x1882)))+(((IkReal(-1.00000000000000))*(x1879)*(x1883)))+(((IkReal(-1.00000000000000))*(x1876)*(x1879)*(x1880)))+(((x1878)*(x1883)))+(((IkReal(-1.00000000000000))*(x1878)*(x1882)))+(((cj1)*(x1877)*(x1878)))+(((IkReal(-1.00000000000000))*(x1877)*(x1879)*(x1880)))+(((cj1)*(x1876)*(x1878))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst2)*(((((IkReal(-1.00000000000000))*(x1876)*(x1881)))+(((IkReal(-1.00000000000000))*(r22)*(x1883)))+(((r22)*(x1882)))+(((IkReal(-1.00000000000000))*(x1877)*(x1881)))))), ((gconst2)*(((((x1879)*(x1882)))+(((IkReal(-1.00000000000000))*(x1879)*(x1883)))+(((IkReal(-1.00000000000000))*(x1876)*(x1879)*(x1880)))+(((x1878)*(x1883)))+(((IkReal(-1.00000000000000))*(x1878)*(x1882)))+(((cj1)*(x1877)*(x1878)))+(((IkReal(-1.00000000000000))*(x1877)*(x1879)*(x1880)))+(((cj1)*(x1876)*(x1878)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[2];
IkReal x1884=IKsin(j4);
IkReal x1885=IKcos(j4);
IkReal x1886=((IkReal(1.00000000000000))*(cj1));
IkReal x1887=((cj5)*(r20));
IkReal x1888=((IkReal(1.00000000000000))*(r21)*(sj5));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1884)*(x1888)))+(((r22)*(x1885)))+(((x1884)*(x1887))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(x1884)))+(((IkReal(-1.00000000000000))*(cj3)*(sj2)*(x1886)))+(((IkReal(-1.00000000000000))*(cj2)*(cj3)*(sj1)))+(((IkReal(-1.00000000000000))*(x1885)*(x1888)))+(((sj1)*(sj2)*(sj3)))+(((IkReal(-1.00000000000000))*(cj2)*(sj3)*(x1886)))+(((x1885)*(x1887))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst5;
IkReal x1889=((IkReal(20000.0000000000))*(cj5));
IkReal x1890=((IkReal(20000.0000000000))*(sj5));
gconst5=IKsign(((((py)*(r01)*(x1889)))+(((py)*(r00)*(x1890)))+(((IkReal(-1.00000000000000))*(px)*(r10)*(x1890)))+(((IkReal(-1.00000000000000))*(px)*(r11)*(x1889)))));
IkReal x1891=((IkReal(1.00000000000000))*(px));
dummyeval[0]=((((IkReal(-1.00000000000000))*(cj5)*(r11)*(x1891)))+(((cj5)*(py)*(r01)))+(((IkReal(-1.00000000000000))*(r10)*(sj5)*(x1891)))+(((py)*(r00)*(sj5))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst6;
IkReal x1892=(sj5)*(sj5);
IkReal x1893=(cj5)*(cj5);
IkReal x1894=((cj4)*(sj5));
IkReal x1895=((IkReal(1.00000000000000))*(r02));
IkReal x1896=((r01)*(r10));
IkReal x1897=((cj4)*(cj5));
IkReal x1898=((sj4)*(x1893));
IkReal x1899=((IkReal(1.00000000000000))*(r00)*(r11));
IkReal x1900=((sj4)*(x1892));
gconst6=IKsign(((((IkReal(-1.00000000000000))*(x1899)*(x1900)))+(((IkReal(-1.00000000000000))*(r10)*(x1894)*(x1895)))+(((r01)*(r12)*(x1897)))+(((x1896)*(x1898)))+(((IkReal(-1.00000000000000))*(x1898)*(x1899)))+(((IkReal(-1.00000000000000))*(r11)*(x1895)*(x1897)))+(((r00)*(r12)*(x1894)))+(((x1896)*(x1900)))));
IkReal x1901=(sj5)*(sj5);
IkReal x1902=(cj5)*(cj5);
IkReal x1903=((cj4)*(sj5));
IkReal x1904=((IkReal(1.00000000000000))*(r02));
IkReal x1905=((r01)*(r10));
IkReal x1906=((cj4)*(cj5));
IkReal x1907=((sj4)*(x1902));
IkReal x1908=((IkReal(1.00000000000000))*(r00)*(r11));
IkReal x1909=((sj4)*(x1901));
dummyeval[0]=((((r00)*(r12)*(x1903)))+(((r01)*(r12)*(x1906)))+(((x1905)*(x1907)))+(((x1905)*(x1909)))+(((IkReal(-1.00000000000000))*(r11)*(x1904)*(x1906)))+(((IkReal(-1.00000000000000))*(x1907)*(x1908)))+(((IkReal(-1.00000000000000))*(x1908)*(x1909)))+(((IkReal(-1.00000000000000))*(r10)*(x1903)*(x1904))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
if( IKabs(((gconst6)*(((((cj5)*(r11)))+(((r10)*(sj5))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst6)*(((((r00)*(sj5)))+(((cj5)*(r01))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j0array[0]=IKatan2(((gconst6)*(((((cj5)*(r11)))+(((r10)*(sj5)))))), ((gconst6)*(((((r00)*(sj5)))+(((cj5)*(r01)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[8];
IkReal x1910=IKcos(j0);
IkReal x1911=IKsin(j0);
IkReal x1912=((IkReal(1.00000000000000))*(cj5));
IkReal x1913=((IkReal(0.0946500000000000))*(sj5));
IkReal x1914=((IkReal(1.00000000000000))*(cj2));
IkReal x1915=((cj3)*(sj1));
IkReal x1916=((cj1)*(sj3));
IkReal x1917=((IkReal(0.0946500000000000))*(cj5));
IkReal x1918=((r02)*(sj4));
IkReal x1919=((cj1)*(cj3));
IkReal x1920=((sj1)*(sj2));
IkReal x1921=((sj4)*(sj5));
IkReal x1922=((IkReal(1.00000000000000))*(sj5));
IkReal x1923=((cj4)*(r02));
IkReal x1924=((cj4)*(r12));
IkReal x1925=((cj4)*(sj5));
IkReal x1926=((r12)*(sj4));
IkReal x1927=((r01)*(x1911));
IkReal x1928=((r00)*(x1910));
IkReal x1929=((r00)*(x1911));
IkReal x1930=((r11)*(x1910));
IkReal x1931=((r01)*(x1910));
IkReal x1932=((r11)*(x1911));
IkReal x1933=((r10)*(x1911));
IkReal x1934=((IkReal(1.00000000000000))*(x1911));
IkReal x1935=((r10)*(x1910));
IkReal x1936=((IkReal(1.00000000000000))*(x1910));
evalcond[0]=((((cj5)*(x1930)))+(((IkReal(-1.00000000000000))*(x1922)*(x1929)))+(((IkReal(-1.00000000000000))*(x1912)*(x1927)))+(((sj5)*(x1935))));
evalcond[1]=((IkReal(0.109150000000000))+(((IkReal(-1.00000000000000))*(py)*(x1936)))+(((px)*(x1911)))+(((IkReal(-1.00000000000000))*(x1913)*(x1935)))+(((x1917)*(x1927)))+(((x1913)*(x1929)))+(((IkReal(-1.00000000000000))*(x1917)*(x1930))));
evalcond[2]=((((cj4)*(cj5)*(x1929)))+(((IkReal(-1.00000000000000))*(cj4)*(x1922)*(x1927)))+(((IkReal(-1.00000000000000))*(cj4)*(x1912)*(x1935)))+(((x1925)*(x1930)))+(((x1910)*(x1926)))+(((IkReal(-1.00000000000000))*(x1918)*(x1934))));
evalcond[3]=((((x1921)*(x1931)))+(((x1921)*(x1932)))+(((IkReal(-1.00000000000000))*(sj4)*(x1912)*(x1933)))+(((IkReal(-1.00000000000000))*(x1923)*(x1936)))+(((IkReal(-1.00000000000000))*(x1924)*(x1934)))+(((IkReal(-1.00000000000000))*(sj4)*(x1912)*(x1928))));
evalcond[4]=((IkReal(1.00000000000000))+(((x1921)*(x1930)))+(((IkReal(-1.00000000000000))*(sj4)*(x1912)*(x1935)))+(((cj5)*(sj4)*(x1929)))+(((IkReal(-1.00000000000000))*(x1924)*(x1936)))+(((x1911)*(x1923)))+(((IkReal(-1.00000000000000))*(x1921)*(x1927))));
evalcond[5]=((((IkReal(-1.00000000000000))*(py)*(x1934)))+(((IkReal(0.392250000000000))*(cj1)*(cj2)))+(((IkReal(0.425000000000000))*(cj1)))+(((IkReal(-1.00000000000000))*(x1913)*(x1928)))+(((IkReal(-1.00000000000000))*(px)*(x1936)))+(((IkReal(-1.00000000000000))*(x1913)*(x1933)))+(((IkReal(-0.392250000000000))*(x1920)))+(((IkReal(-1.00000000000000))*(x1917)*(x1931)))+(((IkReal(-1.00000000000000))*(x1917)*(x1932))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x1914)*(x1915)))+(((IkReal(-1.00000000000000))*(x1914)*(x1916)))+(((cj5)*(x1931)))+(((cj5)*(x1932)))+(((IkReal(-1.00000000000000))*(sj2)*(x1919)))+(((sj3)*(x1920)))+(((sj5)*(x1928)))+(((sj5)*(x1933))));
evalcond[7]=((((IkReal(-1.00000000000000))*(x1914)*(x1919)))+(((x1910)*(x1918)))+(((IkReal(-1.00000000000000))*(cj4)*(x1912)*(x1933)))+(((x1925)*(x1932)))+(((x1925)*(x1931)))+(((x1911)*(x1926)))+(((sj2)*(x1916)))+(((sj2)*(x1915)))+(((cj2)*(sj1)*(sj3)))+(((IkReal(-1.00000000000000))*(cj4)*(x1912)*(x1928))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x1937=((IkReal(2183.00000000000))*(sj5));
IkReal x1938=((IkReal(2183.00000000000))*(cj5));
if( IKabs(((gconst5)*(((((r11)*(x1938)))+(((r10)*(x1937))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst5)*(((((r00)*(x1937)))+(((r01)*(x1938))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j0array[0]=IKatan2(((gconst5)*(((((r11)*(x1938)))+(((r10)*(x1937)))))), ((gconst5)*(((((r00)*(x1937)))+(((r01)*(x1938)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[8];
IkReal x1939=IKcos(j0);
IkReal x1940=IKsin(j0);
IkReal x1941=((IkReal(1.00000000000000))*(cj5));
IkReal x1942=((IkReal(0.0946500000000000))*(sj5));
IkReal x1943=((IkReal(1.00000000000000))*(cj2));
IkReal x1944=((cj3)*(sj1));
IkReal x1945=((cj1)*(sj3));
IkReal x1946=((IkReal(0.0946500000000000))*(cj5));
IkReal x1947=((r02)*(sj4));
IkReal x1948=((cj1)*(cj3));
IkReal x1949=((sj1)*(sj2));
IkReal x1950=((sj4)*(sj5));
IkReal x1951=((IkReal(1.00000000000000))*(sj5));
IkReal x1952=((cj4)*(r02));
IkReal x1953=((cj4)*(r12));
IkReal x1954=((cj4)*(sj5));
IkReal x1955=((r12)*(sj4));
IkReal x1956=((r01)*(x1940));
IkReal x1957=((r00)*(x1939));
IkReal x1958=((r00)*(x1940));
IkReal x1959=((r11)*(x1939));
IkReal x1960=((r01)*(x1939));
IkReal x1961=((r11)*(x1940));
IkReal x1962=((r10)*(x1940));
IkReal x1963=((IkReal(1.00000000000000))*(x1940));
IkReal x1964=((r10)*(x1939));
IkReal x1965=((IkReal(1.00000000000000))*(x1939));
evalcond[0]=((((sj5)*(x1964)))+(((IkReal(-1.00000000000000))*(x1951)*(x1958)))+(((cj5)*(x1959)))+(((IkReal(-1.00000000000000))*(x1941)*(x1956))));
evalcond[1]=((IkReal(0.109150000000000))+(((IkReal(-1.00000000000000))*(x1942)*(x1964)))+(((px)*(x1940)))+(((x1946)*(x1956)))+(((IkReal(-1.00000000000000))*(x1946)*(x1959)))+(((IkReal(-1.00000000000000))*(py)*(x1965)))+(((x1942)*(x1958))));
evalcond[2]=((((x1939)*(x1955)))+(((IkReal(-1.00000000000000))*(x1947)*(x1963)))+(((x1954)*(x1959)))+(((IkReal(-1.00000000000000))*(cj4)*(x1951)*(x1956)))+(((cj4)*(cj5)*(x1958)))+(((IkReal(-1.00000000000000))*(cj4)*(x1941)*(x1964))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1952)*(x1965)))+(((x1950)*(x1960)))+(((x1950)*(x1961)))+(((IkReal(-1.00000000000000))*(sj4)*(x1941)*(x1962)))+(((IkReal(-1.00000000000000))*(sj4)*(x1941)*(x1957)))+(((IkReal(-1.00000000000000))*(x1953)*(x1963))));
evalcond[4]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x1950)*(x1956)))+(((x1950)*(x1959)))+(((x1940)*(x1952)))+(((cj5)*(sj4)*(x1958)))+(((IkReal(-1.00000000000000))*(sj4)*(x1941)*(x1964)))+(((IkReal(-1.00000000000000))*(x1953)*(x1965))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x1942)*(x1962)))+(((IkReal(-1.00000000000000))*(x1942)*(x1957)))+(((IkReal(0.392250000000000))*(cj1)*(cj2)))+(((IkReal(-0.392250000000000))*(x1949)))+(((IkReal(0.425000000000000))*(cj1)))+(((IkReal(-1.00000000000000))*(px)*(x1965)))+(((IkReal(-1.00000000000000))*(x1946)*(x1960)))+(((IkReal(-1.00000000000000))*(x1946)*(x1961)))+(((IkReal(-1.00000000000000))*(py)*(x1963))));
evalcond[6]=((((sj3)*(x1949)))+(((sj5)*(x1962)))+(((sj5)*(x1957)))+(((IkReal(-1.00000000000000))*(x1943)*(x1944)))+(((IkReal(-1.00000000000000))*(x1943)*(x1945)))+(((cj5)*(x1961)))+(((cj5)*(x1960)))+(((IkReal(-1.00000000000000))*(sj2)*(x1948))));
evalcond[7]=((((sj2)*(x1945)))+(((sj2)*(x1944)))+(((IkReal(-1.00000000000000))*(cj4)*(x1941)*(x1957)))+(((IkReal(-1.00000000000000))*(x1943)*(x1948)))+(((x1939)*(x1947)))+(((x1954)*(x1961)))+(((x1954)*(x1960)))+(((x1940)*(x1955)))+(((cj2)*(sj1)*(sj3)))+(((IkReal(-1.00000000000000))*(cj4)*(x1941)*(x1962))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x1966=((IkReal(2183.00000000000))*(sj5));
IkReal x1967=((IkReal(2183.00000000000))*(cj5));
if( IKabs(((gconst0)*(((((r10)*(x1966)))+(((r11)*(x1967))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst0)*(((((r00)*(x1966)))+(((r01)*(x1967))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j0array[0]=IKatan2(((gconst0)*(((((r10)*(x1966)))+(((r11)*(x1967)))))), ((gconst0)*(((((r00)*(x1966)))+(((r01)*(x1967)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[4];
IkReal x1968=IKcos(j0);
IkReal x1969=IKsin(j0);
IkReal x1970=((r00)*(sj5));
IkReal x1971=((IkReal(1.00000000000000))*(cj2));
IkReal x1972=((cj5)*(r11));
IkReal x1973=((sj1)*(sj2));
IkReal x1974=((r10)*(sj5));
IkReal x1975=((IkReal(0.0946500000000000))*(x1969));
IkReal x1976=((IkReal(0.0946500000000000))*(x1968));
IkReal x1977=((IkReal(1.00000000000000))*(x1969));
IkReal x1978=((IkReal(1.00000000000000))*(x1968));
IkReal x1979=((cj5)*(r01)*(x1969));
IkReal x1980=((cj5)*(x1976));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj5)*(r01)*(x1977)))+(((IkReal(-1.00000000000000))*(x1970)*(x1977)))+(((x1968)*(x1974)))+(((x1968)*(x1972))));
evalcond[1]=((IkReal(0.109150000000000))+(((px)*(x1969)))+(((IkReal(-1.00000000000000))*(x1974)*(x1976)))+(((x1970)*(x1975)))+(((IkReal(-1.00000000000000))*(x1972)*(x1976)))+(((IkReal(-1.00000000000000))*(py)*(x1978)))+(((cj5)*(r01)*(x1975))));
evalcond[2]=((((IkReal(0.392250000000000))*(cj1)*(cj2)))+(((IkReal(-1.00000000000000))*(x1974)*(x1975)))+(((IkReal(0.425000000000000))*(cj1)))+(((IkReal(-0.392250000000000))*(x1973)))+(((IkReal(-1.00000000000000))*(x1972)*(x1975)))+(((IkReal(-1.00000000000000))*(px)*(x1978)))+(((IkReal(-1.00000000000000))*(x1970)*(x1976)))+(((IkReal(-1.00000000000000))*(py)*(x1977)))+(((IkReal(-1.00000000000000))*(r01)*(x1980))));
evalcond[3]=((((x1969)*(x1974)))+(((x1969)*(x1972)))+(((IkReal(-1.00000000000000))*(cj1)*(sj3)*(x1971)))+(((sj3)*(x1973)))+(((IkReal(-1.00000000000000))*(cj1)*(cj3)*(sj2)))+(((IkReal(-1.00000000000000))*(cj3)*(sj1)*(x1971)))+(((x1968)*(x1970)))+(((cj5)*(r01)*(x1968))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst3;
IkReal x1981=((IkReal(1.00000000000000))*(sj0));
IkReal x1982=((cj5)*(r22));
IkReal x1983=((r21)*(sj5));
IkReal x1984=((IkReal(1.00000000000000))*(cj0));
IkReal x1985=((r22)*(sj5));
IkReal x1986=((cj5)*(r20));
gconst3=IKsign(((((IkReal(-1.00000000000000))*(r02)*(x1981)*(x1983)))+(((r02)*(sj0)*(x1986)))+(((IkReal(-1.00000000000000))*(r12)*(x1984)*(x1986)))+(((IkReal(-1.00000000000000))*(r00)*(x1981)*(x1982)))+(((IkReal(-1.00000000000000))*(r11)*(x1984)*(x1985)))+(((r01)*(sj0)*(x1985)))+(((cj0)*(r12)*(x1983)))+(((cj0)*(r10)*(x1982)))));
IkReal x1987=((IkReal(1.00000000000000))*(sj0));
IkReal x1988=((cj5)*(r22));
IkReal x1989=((r21)*(sj5));
IkReal x1990=((IkReal(1.00000000000000))*(cj0));
IkReal x1991=((r22)*(sj5));
IkReal x1992=((cj5)*(r20));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r02)*(x1987)*(x1989)))+(((IkReal(-1.00000000000000))*(r12)*(x1990)*(x1992)))+(((IkReal(-1.00000000000000))*(r00)*(x1987)*(x1988)))+(((IkReal(-1.00000000000000))*(r11)*(x1990)*(x1991)))+(((r02)*(sj0)*(x1992)))+(((cj0)*(r12)*(x1989)))+(((r01)*(sj0)*(x1991)))+(((cj0)*(r10)*(x1988))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst4;
gconst4=IKsign((((r22)*(r22))+((((cj5)*(cj5))*((r20)*(r20))))+(((IkReal(-2.00000000000000))*(cj5)*(r20)*(r21)*(sj5)))+((((r21)*(r21))*((sj5)*(sj5))))));
dummyeval[0]=(((r22)*(r22))+((((cj5)*(cj5))*((r20)*(r20))))+(((IkReal(-2.00000000000000))*(cj5)*(r20)*(r21)*(sj5)))+((((r21)*(r21))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1993=((cj3)*(sj2));
IkReal x1994=((cj2)*(cj3));
IkReal x1995=((cj2)*(sj3));
IkReal x1996=((sj2)*(sj3));
IkReal x1997=((r21)*(sj5));
IkReal x1998=((IkReal(1.00000000000000))*(cj1));
IkReal x1999=((IkReal(1.00000000000000))*(sj1));
IkReal x2000=((r22)*(x1998));
IkReal x2001=((cj5)*(r20)*(sj1));
IkReal x2002=((cj1)*(cj5)*(r20));
if( IKabs(((gconst4)*(((((IkReal(-1.00000000000000))*(x1995)*(x2000)))+(((r22)*(sj1)*(x1996)))+(((IkReal(-1.00000000000000))*(r22)*(x1994)*(x1999)))+(((IkReal(-1.00000000000000))*(x1993)*(x2000))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst4)*(((((x1993)*(x2002)))+(((IkReal(-1.00000000000000))*(x1995)*(x1997)*(x1998)))+(((x1994)*(x2001)))+(((x1995)*(x2002)))+(((IkReal(-1.00000000000000))*(cj5)*(r20)*(x1996)*(x1999)))+(((sj1)*(x1996)*(x1997)))+(((IkReal(-1.00000000000000))*(x1993)*(x1997)*(x1998)))+(((IkReal(-1.00000000000000))*(x1994)*(x1997)*(x1999))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst4)*(((((IkReal(-1.00000000000000))*(x1995)*(x2000)))+(((r22)*(sj1)*(x1996)))+(((IkReal(-1.00000000000000))*(r22)*(x1994)*(x1999)))+(((IkReal(-1.00000000000000))*(x1993)*(x2000)))))), ((gconst4)*(((((x1993)*(x2002)))+(((IkReal(-1.00000000000000))*(x1995)*(x1997)*(x1998)))+(((x1994)*(x2001)))+(((x1995)*(x2002)))+(((IkReal(-1.00000000000000))*(cj5)*(r20)*(x1996)*(x1999)))+(((sj1)*(x1996)*(x1997)))+(((IkReal(-1.00000000000000))*(x1993)*(x1997)*(x1998)))+(((IkReal(-1.00000000000000))*(x1994)*(x1997)*(x1999)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x2003=IKsin(j4);
IkReal x2004=IKcos(j4);
IkReal x2005=((IkReal(1.00000000000000))*(cj2));
IkReal x2006=((cj3)*(sj1));
IkReal x2007=((cj1)*(sj3));
IkReal x2008=((IkReal(1.00000000000000))*(cj5));
IkReal x2009=((IkReal(1.00000000000000))*(r01));
IkReal x2010=((cj1)*(cj3));
IkReal x2011=((r11)*(sj5));
IkReal x2012=((sj1)*(sj3));
IkReal x2013=((r01)*(sj5));
IkReal x2014=((r21)*(sj5));
IkReal x2015=((cj0)*(x2003));
IkReal x2016=((cj5)*(x2003));
IkReal x2017=((sj0)*(x2004));
IkReal x2018=((IkReal(1.00000000000000))*(x2003));
IkReal x2019=((cj0)*(x2004));
IkReal x2020=((sj0)*(sj5)*(x2003));
IkReal x2021=((IkReal(1.00000000000000))*(x2019));
evalcond[0]=((((r22)*(x2004)))+(((r20)*(x2016)))+(((IkReal(-1.00000000000000))*(x2014)*(x2018))));
evalcond[1]=((((x2011)*(x2019)))+(((IkReal(-1.00000000000000))*(r10)*(x2008)*(x2019)))+(((IkReal(-1.00000000000000))*(r02)*(sj0)*(x2018)))+(((cj5)*(r00)*(x2017)))+(((r12)*(x2015)))+(((IkReal(-1.00000000000000))*(sj5)*(x2009)*(x2017))));
evalcond[2]=((((sj0)*(x2003)*(x2011)))+(((IkReal(-1.00000000000000))*(r02)*(x2021)))+(((IkReal(-1.00000000000000))*(r12)*(x2017)))+(((x2013)*(x2015)))+(((IkReal(-1.00000000000000))*(r00)*(x2008)*(x2015)))+(((IkReal(-1.00000000000000))*(r10)*(sj0)*(x2003)*(x2008))));
evalcond[3]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x2009)*(x2020)))+(((r00)*(sj0)*(x2016)))+(((IkReal(-1.00000000000000))*(r12)*(x2021)))+(((x2011)*(x2015)))+(((IkReal(-1.00000000000000))*(r10)*(x2008)*(x2015)))+(((r02)*(x2017))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x2005)*(x2006)))+(((IkReal(-1.00000000000000))*(x2005)*(x2007)))+(((IkReal(-1.00000000000000))*(sj2)*(x2010)))+(((IkReal(-1.00000000000000))*(x2004)*(x2014)))+(((cj5)*(r20)*(x2004)))+(((sj2)*(x2012)))+(((IkReal(-1.00000000000000))*(r22)*(x2018))));
evalcond[5]=((((sj2)*(x2006)))+(((sj2)*(x2007)))+(((r12)*(sj0)*(x2003)))+(((IkReal(-1.00000000000000))*(x2005)*(x2010)))+(((x2011)*(x2017)))+(((IkReal(-1.00000000000000))*(r10)*(x2008)*(x2017)))+(((cj2)*(x2012)))+(((r02)*(x2015)))+(((x2013)*(x2019)))+(((IkReal(-1.00000000000000))*(r00)*(x2008)*(x2019))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs(((gconst3)*(r22))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst3)*(((((r21)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(r20))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst3)*(r22)), ((gconst3)*(((((r21)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(r20)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x2022=IKsin(j4);
IkReal x2023=IKcos(j4);
IkReal x2024=((IkReal(1.00000000000000))*(cj2));
IkReal x2025=((cj3)*(sj1));
IkReal x2026=((cj1)*(sj3));
IkReal x2027=((IkReal(1.00000000000000))*(cj5));
IkReal x2028=((IkReal(1.00000000000000))*(r01));
IkReal x2029=((cj1)*(cj3));
IkReal x2030=((r11)*(sj5));
IkReal x2031=((sj1)*(sj3));
IkReal x2032=((r01)*(sj5));
IkReal x2033=((r21)*(sj5));
IkReal x2034=((cj0)*(x2022));
IkReal x2035=((cj5)*(x2022));
IkReal x2036=((sj0)*(x2023));
IkReal x2037=((IkReal(1.00000000000000))*(x2022));
IkReal x2038=((cj0)*(x2023));
IkReal x2039=((sj0)*(sj5)*(x2022));
IkReal x2040=((IkReal(1.00000000000000))*(x2038));
evalcond[0]=((((r22)*(x2023)))+(((r20)*(x2035)))+(((IkReal(-1.00000000000000))*(x2033)*(x2037))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r02)*(sj0)*(x2037)))+(((r12)*(x2034)))+(((x2030)*(x2038)))+(((cj5)*(r00)*(x2036)))+(((IkReal(-1.00000000000000))*(sj5)*(x2028)*(x2036)))+(((IkReal(-1.00000000000000))*(r10)*(x2027)*(x2038))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r02)*(x2040)))+(((x2032)*(x2034)))+(((sj0)*(x2022)*(x2030)))+(((IkReal(-1.00000000000000))*(r10)*(sj0)*(x2022)*(x2027)))+(((IkReal(-1.00000000000000))*(r00)*(x2027)*(x2034)))+(((IkReal(-1.00000000000000))*(r12)*(x2036))));
evalcond[3]=((IkReal(1.00000000000000))+(((x2030)*(x2034)))+(((r00)*(sj0)*(x2035)))+(((r02)*(x2036)))+(((IkReal(-1.00000000000000))*(r10)*(x2027)*(x2034)))+(((IkReal(-1.00000000000000))*(x2028)*(x2039)))+(((IkReal(-1.00000000000000))*(r12)*(x2040))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r22)*(x2037)))+(((sj2)*(x2031)))+(((IkReal(-1.00000000000000))*(x2023)*(x2033)))+(((IkReal(-1.00000000000000))*(x2024)*(x2025)))+(((IkReal(-1.00000000000000))*(x2024)*(x2026)))+(((IkReal(-1.00000000000000))*(sj2)*(x2029)))+(((cj5)*(r20)*(x2023))));
evalcond[5]=((((x2030)*(x2036)))+(((r12)*(sj0)*(x2022)))+(((sj2)*(x2026)))+(((sj2)*(x2025)))+(((x2032)*(x2038)))+(((r02)*(x2034)))+(((IkReal(-1.00000000000000))*(x2024)*(x2029)))+(((IkReal(-1.00000000000000))*(r00)*(x2027)*(x2038)))+(((IkReal(-1.00000000000000))*(r10)*(x2027)*(x2036)))+(((cj2)*(x2031))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}

}

}
    }
}
return solutions.GetNumSolutions()>0;
}

template<int D>
static inline bool matrixinverse(IkReal* A)
{
    int n = D;
    int info;
    IkReal IKFAST_ALIGNED16(work[D*D*(D-1)]);
    int ipiv[D];
    dgetrf_(&n, &n, A, &n, &ipiv[0], &info);
    if( info != 0 ) {
        return false;
    }
    int worksize=D*D*(D-1);
    dgetri_(&n, A, &n, &ipiv[0], &work[0], &worksize, &info);
    return info==0;
}

/// \brief Solve the det Ax^2+Bx+C = 0 problem using the Manocha and Canny method (1994)
///
/// matcoeffs is of length 54*3, for 3 matrices
static inline void solvedialyticpoly12qep(const IkReal* matcoeffs, IkReal* rawroots, int& numroots)
{
    const IkReal tol = 128.0*std::numeric_limits<IkReal>::epsilon();
    IkReal IKFAST_ALIGNED16(M[24*24]) = {0};
    IkReal IKFAST_ALIGNED16(A[12*12]);
    IkReal IKFAST_ALIGNED16(work[24*24*23]);
    int ipiv[12];
    int info, coeffindex;
    const int worksize=24*24*23;
    const int matrixdim = 12;
    const int matrixdim2 = 24;
    numroots = 0;
    // first setup M = [0 I; -C -B] and A
    coeffindex = 0;
    for(int j = 0; j < 6; ++j) {
        for(int k = 0; k < 9; ++k) {
            M[matrixdim+(j+6)+2*matrixdim*k] = M[matrixdim+j+2*matrixdim*(k+3)] = -matcoeffs[coeffindex++];
        }
    }
    for(int j = 0; j < 6; ++j) {
        for(int k = 0; k < 9; ++k) {
            M[matrixdim+(j+6)+2*matrixdim*k+matrixdim*2*matrixdim] = M[matrixdim+j+2*matrixdim*(k+3)+matrixdim*2*matrixdim] = -matcoeffs[coeffindex++];
        }
    }
    for(int j = 0; j < 6; ++j) {
        for(int k = 0; k < 9; ++k) {
            A[(j+6)+matrixdim*k] = A[j+matrixdim*(k+3)] = matcoeffs[coeffindex++];
        }
        for(int k = 0; k < 3; ++k) {
            A[j+matrixdim*k] = A[(j+6)+matrixdim*(k+9)] = 0;
        }
    }
    const IkReal lfpossibilities[4][4] = {{1,-1,1,1},{1,0,-2,1},{1,1,2,0},{1,-1,4,1}};
    int lfindex = -1;
    bool bsingular = true;
    do {
        dgetrf_(&matrixdim,&matrixdim,A,&matrixdim,&ipiv[0],&info);
        if( info == 0 ) {
            bsingular = false;
            for(int j = 0; j < matrixdim; ++j) {
                if( IKabs(A[j*matrixdim+j]) < 100*tol ) {
                    bsingular = true;
                    break;
                }
            }
            if( !bsingular ) {
                break;
            }
        }
        if( lfindex == 3 ) {
            break;
        }
        // transform by the linear functional
        lfindex++;
        const IkReal* lf = lfpossibilities[lfindex];
        // have to reinitialize A
        coeffindex = 0;
        for(int j = 0; j < 6; ++j) {
            for(int k = 0; k < 9; ++k) {
                IkReal a = matcoeffs[coeffindex+108], b = matcoeffs[coeffindex+54], c = matcoeffs[coeffindex];
                A[(j+6)+matrixdim*k] = A[j+matrixdim*(k+3)] = lf[0]*lf[0]*a+lf[0]*lf[2]*b+lf[2]*lf[2]*c;
                M[matrixdim+(j+6)+2*matrixdim*k] = M[matrixdim+j+2*matrixdim*(k+3)] = -(lf[1]*lf[1]*a + lf[1]*lf[3]*b + lf[3]*lf[3]*c);
                M[matrixdim+(j+6)+2*matrixdim*k+matrixdim*2*matrixdim] = M[matrixdim+j+2*matrixdim*(k+3)+matrixdim*2*matrixdim] = -(2*lf[0]*lf[1]*a + (lf[0]*lf[3]+lf[1]*lf[2])*b + 2*lf[2]*lf[3]*c);
                coeffindex++;
            }
            for(int k = 0; k < 3; ++k) {
                A[j+matrixdim*k] = A[(j+6)+matrixdim*(k+9)] = 0;
            }
        }
    } while(lfindex<4);

    if( bsingular ) {
        return;
    }
    dgetrs_("No transpose", &matrixdim, &matrixdim2, A, &matrixdim, &ipiv[0], &M[matrixdim], &matrixdim2, &info);
    if( info != 0 ) {
        return;
    }

    // set identity in upper corner
    for(int j = 0; j < matrixdim; ++j) {
        M[matrixdim*2*matrixdim+j+matrixdim*2*j] = 1;
    }
    IkReal IKFAST_ALIGNED16(wr[24]);
    IkReal IKFAST_ALIGNED16(wi[24]);
    IkReal IKFAST_ALIGNED16(vr[24*24]);
    int one=1;
    dgeev_("N", "V", &matrixdim2, M, &matrixdim2, wr, wi,NULL, &one, vr, &matrixdim2, work, &worksize, &info);
    if( info != 0 ) {
        return;
    }
    IkReal Breal[matrixdim-1];
    for(int i = 0; i < matrixdim2; ++i) {
        if( IKabs(wi[i]) < tol*100 ) {
            IkReal* ev = vr+matrixdim2*i;
            if( IKabs(wr[i]) > 1 ) {
                ev += matrixdim;
            }
            // consistency has to be checked!!
            if( IKabs(ev[0]) < tol ) {
                continue;
            }
            IkReal iconst = 1/ev[0];
            for(int j = 1; j < matrixdim; ++j) {
                Breal[j-1] = ev[j]*iconst;
            }
            if( checkconsistency12(Breal) ) {
                if( lfindex >= 0 ) {
                    const IkReal* lf = lfpossibilities[lfindex];
                    rawroots[numroots++] = (wr[i]*lf[0]+lf[1])/(wr[i]*lf[2]+lf[3]);
                }
                else {
                    rawroots[numroots++] = wr[i];
                }
                bool bsmall0=IKabs(ev[0]) > IKabs(ev[3]);
                bool bsmall1=IKabs(ev[0]) > IKabs(ev[1]);
                if( bsmall0 && bsmall1 ) {
                    rawroots[numroots++] = ev[3]/ev[0];
                    rawroots[numroots++] = ev[1]/ev[0];
                }
                else if( bsmall0 && !bsmall1 ) {
                    rawroots[numroots++] = ev[5]/ev[2];
                    rawroots[numroots++] = ev[2]/ev[1];
                }
                else if( !bsmall0 && bsmall1 ) {
                    rawroots[numroots++] = ev[9]/ev[6];
                    rawroots[numroots++] = ev[10]/ev[9];
                }
                else if( !bsmall0 && !bsmall1 ) {
                    rawroots[numroots++] = ev[11]/ev[8];
                    rawroots[numroots++] = ev[11]/ev[10];
                }
            }
        }
    }
}
static inline bool checkconsistency12(const IkReal* Breal)
{
    IkReal norm = 0.1;
    for(int i = 0; i < 11; ++i) {
        norm += IKabs(Breal[i]);
    }
    IkReal tol = 1e-6*norm; // have to increase the threshold since many computations are involved
    return IKabs(Breal[0]*Breal[0]-Breal[1]) < tol && IKabs(Breal[0]*Breal[2]-Breal[3]) < tol && IKabs(Breal[1]*Breal[2]-Breal[4]) < tol && IKabs(Breal[2]*Breal[2]-Breal[5]) < tol && IKabs(Breal[0]*Breal[5]-Breal[6]) < tol && IKabs(Breal[1]*Breal[5]-Breal[7]) < tol && IKabs(Breal[2]*Breal[5]-Breal[8]) < tol && IKabs(Breal[0]*Breal[8]-Breal[9]) < tol && IKabs(Breal[1]*Breal[8]-Breal[10]) < tol;
}
};


/// solves the inverse kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API bool ComputeIk(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions) {
IKSolver solver;
return solver.ComputeIk(eetrans,eerot,pfree,solutions);
}

IKFAST_API const char* GetKinematicsHash() { return "<robot:GenericRobot - icob (64f6e068206fe472704290478db32dc7)>"; }

IKFAST_API const char* GetIkFastVersion() { return IKFAST_STRINGIZE(IKFAST_VERSION); }

#ifdef IKFAST_NAMESPACE
} // end namespace
#endif

#ifndef IKFAST_NO_MAIN
#include <stdio.h>
#include <stdlib.h>
#ifdef IKFAST_NAMESPACE
using namespace IKFAST_NAMESPACE;
#endif
int main(int argc, char** argv)
{
    if( argc != 12+GetNumFreeParameters()+1 ) {
        printf("\nUsage: ./ik r00 r01 r02 t0 r10 r11 r12 t1 r20 r21 r22 t2 free0 ...\n\n"
               "Returns the ik solutions given the transformation of the end effector specified by\n"
               "a 3x3 rotation R (rXX), and a 3x1 translation (tX).\n"
               "There are %d free parameters that have to be specified.\n\n",GetNumFreeParameters());
        return 1;
    }

    IkSolutionList<IkReal> solutions;
    std::vector<IkReal> vfree(GetNumFreeParameters());
    IkReal eerot[9],eetrans[3];
    eerot[0] = atof(argv[1]); eerot[1] = atof(argv[2]); eerot[2] = atof(argv[3]); eetrans[0] = atof(argv[4]);
    eerot[3] = atof(argv[5]); eerot[4] = atof(argv[6]); eerot[5] = atof(argv[7]); eetrans[1] = atof(argv[8]);
    eerot[6] = atof(argv[9]); eerot[7] = atof(argv[10]); eerot[8] = atof(argv[11]); eetrans[2] = atof(argv[12]);
    for(std::size_t i = 0; i < vfree.size(); ++i)
        vfree[i] = atof(argv[13+i]);
    bool bSuccess = ComputeIk(eetrans, eerot, vfree.size() > 0 ? &vfree[0] : NULL, solutions);

    if( !bSuccess ) {
        fprintf(stderr,"Failed to get ik solution\n");
        return -1;
    }

    printf("Found %d ik solutions:\n", (int)solutions.GetNumSolutions());
    std::vector<IkReal> solvalues(GetNumJoints());
    for(std::size_t i = 0; i < solutions.GetNumSolutions(); ++i) {
        const IkSolutionBase<IkReal>& sol = solutions.GetSolution(i);
        printf("sol%d (free=%d): ", (int)i, (int)sol.GetFree().size());
        std::vector<IkReal> vsolfree(sol.GetFree().size());
        sol.GetSolution(&solvalues[0],vsolfree.size()>0?&vsolfree[0]:NULL);
        for( std::size_t j = 0; j < solvalues.size(); ++j)
            printf("%.15f, ", solvalues[j]);
        printf("\n");
    }
    return 0;
}

#endif
